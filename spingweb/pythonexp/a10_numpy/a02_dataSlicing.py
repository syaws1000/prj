'''
# 배열의 slicing
1. 배열의 기본적으로 index 형태로 0부터 접근해서 사용할 수 있다.
   1) 1차원 배열을 0부터 시작하여 해당하는 배열의 크기는 배열의크기-1 (마지막)까지 접근한다.
      반대로 마지막데이터를 -1부터 시작해서 -2, -3 형식으로 뒤에서부터 반대로 데이터를 접근할 수 있다.
      ex) [2,3,4,7]
           배열명[-1] ==> 7 
           배열명[-2] ==> 4
           배열명[-3] ==> 3
   2) 2차원 이상의 배열은 아래 형식으로 상위와 하위 index로 구분하여 접근할 수 있다.
        배열명[첫번째 index, 두번째 내부 index]
        [[80,90,90],[100,200,300],[400,500,600]]
        배열명[0][2] ===> 90
        배열명[1,2] ===>300 
'''
import numpy as np
ar = np.array([1000,2000,3000])
# ex) 0부터 접근하는 데이터 처리, -1부터 접근하는 데이터 처리를 하여 전체 데이터를 출력하세요.
print(f'{ar[0]},{ar[1]},{ar[2]}')
print(f'{ar[-1]},{ar[-2]},{ar[-3]}')
ar2 = np.array([[80,90,100],[100,200,300],[4000,5000,6000]])
print(f'2차원배열 데이터 첫번째 호출방법:{ar2[0][2]}') # 첫번째 행의 세번째 데이터
print(f'2차원배열 데이터 두번째 호출방법:{ar2[2, 2]}') # 세번째 행의 세번째 데이터
# ex) 문자열 2차원배열 처리 -  물건을 분류하여  과일(첫번째 행), 전자제품(두번째행), 식품(세번째행) 으로 선언하여
#     각각의 분류별 물품을 두번째 호출 방법으로 호출하여 출력하세요..
strArr = np.array([['사과','바나나','딸기'],['컴퓨터','TV','핸드폰'],['짜장면','햄버거','김밥']])
print(f'과일중 하나:{strArr[0,1]}')
print(f'전자제품중 하나:{strArr[1,2]}')
print(f'식품중 하나:{strArr[2,0]}')