'''
# 축(Axis) 개념 이해 : 축을 따라 꾹 눌러 합친다!!
1. Numpy에서 축(axis)은 연산의 방향을 결정하는 매우 중요한 개념입니다. 2차원 배열(행렬)에서 axis=0은 세로(열), axis=1은
가로(행) 방향을 의미합니다. 연산할 축을 지정하면, 그 축이 사라지는 방향으로 데이터를 압축한다고 상상하면 쉽습니다.
    - axis=0 (열) : 위 아래로 꾹 눌러서 각 열(column)끼리 계산
    - axis=1 (행) : 양 옆으로 꾹 눌러서 각 행(row)끼리 계산
'''
import numpy as np
arr1 = np.array([[1,2,3],[4,5,6]])
# axis = 0 세로 방향으로 합계
# 각 열 [1,4], [2,5], [3,6]을 더하는 처리
sum_axis0 = arr1.sum(axis = 0)
print(sum_axis0)
# axis = 1 가로 방향으로 합계
# 각 행 [1,2,3], [4,5,6]을 더함
sum_axis1  = arr1.sum(axis=1)
print(sum_axis1)
'''
ex) 어느 편의점의 3일가 주요 상품(음료, 과자, 아이스크림)의 판매 갯수 데이터가 있습니다.
    음료 과자 아이스크립
    15, 30, 25  : 월
    20, 22, 18  : 화
    18, 35, 40  : 수
1. 상품별 총 판매량을 각각 몇 개인가요(음료 총합, 과자 총합, 아이스크림 총합)
2. 요일별 총 판매량은 각각 몇 개인가요(월요일 총합, 화요일 총합, 수요일 총합)

'''
sales = np.array([[15,30,25],[20,22,18],[18,35,40]])
# 1. 상품별 총 판매량 (세로 방향으로 합산)
tot_per_item = sales.sum(axis=0)
print(f"상품별 총 판매량 - 음료 총합:{tot_per_item[0]}, 과자 총합:{tot_per_item[1]}, 아이스크림 총합:{tot_per_item[2]}")
# 2. 요일별 총 판매량 (가로 방향으로 합산)
total_per_day = sales.sum(axis = 1)
print(f'요일별 총 판매량 - 월요일:{total_per_day[0]}, 화요일:{total_per_day[1]}, 수요일{total_per_day[2]}')

