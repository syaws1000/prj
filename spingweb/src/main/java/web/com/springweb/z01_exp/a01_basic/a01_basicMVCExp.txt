### 1. 페이지 호출 url ==> view(jsp)

**개념 설명:**
스프링 MVC에서는 URL 매핑을 통해 특정 요청이 들어왔을 때 어떤 뷰(JSP)를 보여줄지 설정합니다. 예를 들어, `@RequestMapping("/home")`과 같이 컨트롤러 메서드를 설정하면 `/home` 경로로 요청이 들어왔을 때 해당 JSP를 뷰로 사용할 수 있습니다.

**연습 문제:**

1. `/welcome` 경로로 요청이 들어왔을 때 `welcome.jsp`를 보여주도록 컨트롤러를 설정해보세요.
2. `/products` 경로로 요청이 들어왔을 때 `products.jsp`를 보여주도록 컨트롤러를 설정해보세요.

### 2. 페이지 호출 url + 요청값 ==> view(jsp)

**개념 설명:**
URL에 쿼리 매개변수를 포함하여 요청이 들어왔을 때, 해당 요청 값은 컨트롤러에서 `@RequestParam`을 통해 처리할 수 있습니다. 예를 들어, `?key=value`와 같은 형태로 요청이 오면 `@RequestParam("key") String value`를 사용하여 값을 가져올 수 있습니다.

**연습 문제:**

1. `/search` 경로로 `keyword`라는 이름의 파라미터를 받아 그 값을 출력하는 컨트롤러 메서드를 작성해보세요.
2. `/update` 경로로 `id`라는 이름의 파라미터를 받아 그 값을 출력하는 컨트롤러 메서드를 작성해보세요.

### 3. 페이지 호출 url + 요청값(유/무상관없이 호출) ==> view(jsp)

**개념 설명:**
URL에 어떤 요청 값이든 포함되어 있든 상관없이, 스프링 MVC는 `@RequestMapping`을 사용하여 경로에 매핑된 컨트롤러 메서드를 실행합니다. 따라서 요청에 따라 다양한 파라미터가 포함될 수 있습니다.

**연습 문제:**

1. `/profile` 경로로 요청이 들어왔을 때, `name`, `age`, `location` 세 가지 파라미터를 받아서 출력하는 컨트롤러 메서드를 작성해보세요.
2. `/products/detail` 경로로 요청이 들어왔을 때, `productId`라는 파라미터를 받아서 출력하는 컨트롤러 메서드를 작성해보세요.

### 4. 페이지 호출 url + 모델데이터 처리 ==> view(jsp)

**개념 설명:**
컨트롤러에서는 모델에 데이터를 추가하여 뷰(JSP)로 전달할 수 있습니다. `Model` 객체를 사용하여 문자열, 숫자형, 배열, 객체, 객체 배열 등 다양한 형태의 데이터를 뷰에 전달할 수 있습니다.

**연습 문제:**

1. `HomeController`에서 `name`이라는 문자열 데이터를 `welcome.jsp`로 전달하여 출력하는 예제를 작성해보세요.
2. `ProductController`에서 `productList`라는 객체 배열을 `products.jsp`로 전달하여 출력하는 예제를 작성해보세요.

### 5. 페이지 호출 url + 요청값 처리 + 모델데이터 ==> view(jsp)

**개념 설명:**
컨트롤러에서는 요청값을 받아 처리하고, 그 결과를 모델에 담아 뷰(JSP)로 전달할 수 있습니다. 이를 통해 사용자 요청에 따라 동적으로 데이터를 생성하고 보여줄 수 있습니다.

**연습 문제:**

1. `/order` 경로로 `productId`와 `quantity`라는 두 가지 파라미터를 받아 주문 내역을 생성하고, 이를 `order.jsp`로 전달하여 출력하는 컨트롤러 메서드를 작성해보세요.
2. `/employee/list` 경로로 요청이 들어왔을 때, 직원 목록을 조회하여 `employeeList.jsp`로 전달하여 출력하는 컨트롤러 메서드를 작성해보세요.
