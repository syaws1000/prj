# 메일 발송
1. 메일 발송은 웹 프로그래밍에서 다양한 분야에 사용되고 있다. 기본적으로 다중의 사람들에게
정보를 전달하는 것부터 시작해서, 계정의 대한 정보(아이디/비밀번호) 분실시, 등록된 메일주소에
전달하여 복구에 도움을 주는 것이외에도, 특정한 사이트(회사 관리)에 입사한 사원에 대한 아이디와
비밀번호로 초기에 전송하여, 해당 사이트에 접속하여 해당 사원에 대한 정보를 다시 재입력시 사용등
여러 분야에 사용되고 있다.
2. 개발 순서
	1) 메일 발송을 위한 SERVER(SMTP-발송서버) 설정
		- 메일을 발송하기 위하여는 발송 서버에 해당 계정이 사용할 수 있도록 등록 되어 있어야 한다.
		SMTP 서버는 일반 회사에서 고유의 메일 서버를 운영하는 경우에는 그 회사의 도메인 주소로 사용하지만,
		일반인의 경우 SMTP 서버를 차용하여 사용하는 경우가 많다. (예제로 한 내용는 구글의 SMTP로 설정하여
		사용하기로 한다.)
	2) 웹서버의 SMTP 정보 설정 - application.properties에 메일 발송 서버 정보를 등록 하여 처리한다.
		메일 발송을 위한 속성 설정
		spring.mail.host : 이메일을 보내기 위하 사용할 SMTP(Simple Mail Transfer Protocol) 서버를
			지정 Gmail의 경우 위 주소(smtp.gmail.com) 사용
		spring.mail.port :  gmail의 smtp 서버 포트 지정
			포트 587는 TLS(Transport Layer Security) 암호화가 활성화된 SMTP 서버와 통신하기 위해 사용
		spring.mail.username : 이메일 보내기 위한 Gmail 계정의 사용자 이름
			이 이메일 주소는 실제 발신자로 표시된다.
		spring.mail.password : Gmail 계정을 로그인 하기 위한 비밀번호, 보안강화하기 위해
			앱 비밀번호를 생성하여 사용, 앱비밀번호는 일반 비밀번호와 다르며, gmail 계정 설정에서
			앱 비밀번호 활성화해야 한다. 앱비밀번호를 사용하지 않으면 보안 문제로 인해 이메일 발송이 차단될 수 있음
		spring.mail.properties.mail.smtp.auth 
			SMTP 서버가 인증(authentication)을 요구하는 여부를 설정한다.
			gmiial의 SMTP 서버는 기본적으로 인증을 필요로 하므로 true로 설정해야 ㅎ나다.
		spring.mail.properties.mail.smtp.starttls.enable
			이메일 전송 중 데이터 암호화를 위해 TLS(Transport Layer Security)를 활성화 한다.
			TLS는 데이터 전송시 보안을 강화하는 표준 암호화 프로토콜이다.
		spring.mail.properties.mail.debug
			디버깅을 활성화하여 이멘 발송과정에서 자세한 로그를 출력한다.
			개발 및 문제 해결 단계에서 유효하다
		spring.mail.properties.mail.transport.protocol
			사용할 전송 프로토콜(데이터 전송 규칙)을 저장한다.
			이메일 발송에 사용된느 프로토콜로 SMTP를 지정한다.
			
			
				
			
	3) controller view (초기 화면 UI 구성) 메일 발송의 기본 형태인 발상할 대상자와 제목 발송할 내용이
		있는 form을 만든다.
	4) service(메일 발송 처리) 메일 발송의 핵심 내용을 처리하여 메일이 우선 SMTP가 있는 메일 서버에 전송되어
		해당 서버에서 대상 메일로 발송하게 처리한다.
		