# jquery 캘린더 api를 활용한 일정관리 프로그래밍
1. 개요
	fullcalendar라이브러리를 spring boot와 ajax를 활용하여 구현하는 방법을 배우는 것입니다.
	수업을 통해 이벤트 목록(일정)을 조회하고, 새로운 일정을 등록하고, 수정 및 삭제할 수 잇는 기능을 구현합니다.
2. 기본 개념 및 핵심 코드
	1) fullcalendar와 스프링 연동
		- fullcalendar : 강력한 javascript 라이브러리로, 동적인 달력 UI를 구현하는 데 사용합니다.
			일정의 시작일, 종료일, 제목 등을 표시하고, ajax를 이용해 동적으로 데이터를 로드하거나 수정할 수 있습니다.
		- spring boot : 서버 측에서 데이터를 관리하고, 클라이언트와 ajax를 통해 통신합니다. 이를 통해 데이터를 
			주고받고, CRUD작업을 처리할 수 있습니다.
	2) fullcalenar 기본 설정.
		- 기본 lib 다운로드 
		- springboot의 templates 폴드와 static 폴드이 html 화면 및 공통 lib 설정
			static/dist
			templates/a03_calendar/calendar.html (기본 selected.html) 파일 설정
		- controller단 초기 화면 로딩
			a07_calendar
				A01_CalendarController.java
					@GetMapping("calendar")
					return "a03_calendar/calendar.html"
			http://localhost:5050/calendar  
			를 통해 위 설정된 기본 초기 화면을 로딩
	3) 주요 이벤트 및 속성값	
		initialDate : initialDate: '2025-07-11',
			캘린더가 시작되는 초기 시작 날짜 선언
		select: function(arg) {
			캘린더의 특정한 날짜를 클릭 또는 시간을 스크롤시
			해당 날짜에 대한 정보를 입력하여 처리하게 한다.
		eventClick: function(arg) {
			등록된 날짜를 클릭시, 해당 정보를 확인할 수 있게
			하는 이벤트, 초기에는 삭제 여부를 처리하는 confirm
			창이 나온다.
		events: [
	        {
	          title: 'All Day Event',
	          start: '2025-07-01'
	        },		
	        초기에 text형식으로 저장된 날짜 데이터 이후에,
	        데이터베이스에 저장하여 처리할 부분이다.
	        프로그래밍적으로ajax를 통해 DB에 있는 데이터를
	        로딩, 등록/수정/삭제 처리할 기본 구조이다.
	4) 모달 및 화면 처리
		기본 화면 : 월별 일정/주간일정/일일시간일정으로 기본
			사용자 인터페이스를 통해서 일정을 보이게 하고 있다.
		모달창 처리 : 부트스트랩을 활용한 모달창을 통해
			일정등록/수정을 위하여 처리하고, 이를 통해 이벤트를
			입력처리한다.
	5) 핵심 데이터(개발로 사용할 데이터)
		id : 캘린더의 key 데이터
		title : 캘린의 타이틀로 월간내용 나올 일정 내용
		writer : 작성자 - 해당 일정의 담당자 및 작성자를 입력
		start/end : 일정의 시작과 마지막으로 일별/시간별로
				date형식으로 처리
		content : 해당 일정의 상세 내용에 대한 항목을 저장
		backgroundColor : 배경색상 - 캘린더의 일정
			 배경색상을 지정
		textColor : 캘린더 일정의 글자 색상 지정
		allDay :캘린더의 종일 일정이나 시간일정을 구분하기위해
			boolean값으로 설정
		urlLink : 해당 일정과 연동할 수 있는 특정한 화면을
			처리하기 위한 내용ㅇ
			
# 개발 순서(전체적)
1. 사용할 데이터 구조 확인 및 테이블 구현/기본데이터 입력..
2. 조회 dao/service/controller 작성(json데이터를 출력 처리)
3. 화면에서 위 조회데이터를 가져오게 ajax 통신 처리 화면에서 DB와 연동된 내용 출력 처리
4. 등록 dao/service/controller 작성(ajax로 등록 처리하게 처리)
	화면에서 위 select() 이벤트에의해서 입력할 모달창이 로딩되고, 등록 버튼 클릭시,
	데이터를 등록 하게 한다.
5. 수정/삭제 dao/service/controller 작성(ajax로)
	화면단에서 기본 일정을 모달창으로 확인하고, 특정한 일정을 수정/삭제하여 화면에 반영하여
	출력되게 한다. 							        
	        	
# 일정등록(개발 순서)
1. 등록일정 sql 작성/dao 작성 ==> service ==> controller( insertCalendar )
2. select() 함수 시, 등록할 데이터를 로딩할 모달창 작성(jquery 모달 활용)
	name="속성" 으로 위 일정등록시 필요한 속성으로 설정.
3. 등록 버튼 클릭시, ajax를 호출하여 controller에 작성된 insertCalendar 호출 처리..
4. 등록 완료 후, 다시 전체 화면 랜더링 후, 등록된 내용 확인 및 refresh 하여도 일정이
	계속 처리되는 것 확인..

ex) board 프로젝트에 일정 등록 처리...
	

				
								
					
					
					
	