# 공통

# 1조
1. 화면설계서에 요구사항정의서 내용과 관련 내용을 표현합니다. - 요구사항관련 일관성 확보
	참조요구사항 항목 오른쪽하단에 추가 - 요구사항명(요구사항아이디)
2. 선생님 exerd 논리 모드 ==> "ERD(논리)" / "ERD(물리)" 표현합니다.
   물리모델명이 테이블이 table로 된게 보임..
   SQL문(강의신청테이블) ==> "DB 구현(@@테이블)" 표현
3. ajax에 조건  true/"true" 두조건을 할 필요 없이 true가 처리하면 됨(자바스크립트 자동형변환 == 로 처리시)
   혹시 bug가 있었는지?
4. 가격 등 숫자형은 <fmt:(jsp), toLocaleString()(js)을 활용하여 천단위 콤마를 삽입 합니다.
5. 세션 로그 아웃(invalidate()는 전체 세션을 삭제하는데, 혹 다른 세션처리의 경우가 있을 때는, removeAttribute()로 처리 권유)
6. 화면 설계 단에서 구현과 구현하지 못 한 내용에 대한 원인 분석.. - 일정/기술적난이도/기타 사항을 효과적으로 분석하여 현실적인 대안을 마련합니다.
7. 단위테스트 진행 상황 항목으로 테스터와 개발자, 진행날짜, 이슈사항/그 결과 처리로 항목을 넣습니다. - 효과적인 단위테스트를 통해서 완료하고, 
	사용자 인터페이스나 비지니스로직에 문제가 있는 부분도 정리할 수 있는 란은 추가 합니다. 실패시는 이후 처리 내용을 진행합니다. (보완이 완료되어야 완료됨)
8. 탈퇴 사유 - select객관적인 기준과 입력항목으로 주관적인 기준으로 다 입력하게 하여 분류하게 합니다.

# 2조
1. EXERD(논리/물리) ==> ERD(논리/물리)
	exerd는 제품명      entity relation diagram
2. 구현화면에 설명란이 필요 - 어떤 기능을 어떻게 구현되었는지 어떤 내용이 처리되는지에 대한 내용 간단한 설명란 필요 - 이 부분도 요구사항명과 연관 설정
						요구사항 간략 설명 내용 (기능 내용 포함) + 코드 설명
   상단 구현화면(요구사항명) 형식으로 표현 필요
3. rownum을 사용하였는데, 사용한 이유를?(궁금)
4. 단위테스트 언제했고, 테스트 결과가 성공/실패뿐만아니라 화면편의서에 대한 개선 사항도 포함되는 것 즉, 요구사항 항목에 적절한지도 표현하여 확인할 수 있도록 하면
	실패하면 어떻게 보완했는지 항목도 필요(지금 양식은 성공/실패만 결과로 나옴)
5. 화면 구현이 가능한한 중앙에 위치 시키며 해당 내용을 통일. 예를들어 리스트 화면은 갑자기 왼쪽으로 치우쳐져 처리됨(보완 필용)
6. 수치형 데이터 금액은 천단위 콤마가 보이는데, 갯수가 천단위가 넘는 것은 콤마가 표현되지 않음. - 수치형은 천단위로 콤마처리합니다.
7. 문의하기를 window창으로 했는데, 가능한한 모달창으로 추후에는 전환 권유
8. 메인 리스트는 기본틀 안에 있는데, 상세/수정시 전체 화면을 쓰는 것은 기본틀(왼쪽메뉴,상단메뉴) 안에 포함되도록 합니다.(일부 항목)
9. 기능화면 타이틀이 가끔 다르게 통일되지 않게 처리되는 화면이 보입니다. 통일해주세요.
10. 회원정보관리에 비밀번호는 일반적으로 ****으로 보이지 않게 처리합니다.(보안적용)
11. 전화번호는 010-5555-5555 형식으로 처리할 것을 권유..


# 3조
1. 요구사항명이 너무 구체적이지 않습니다. 요구사항명이 간단하지만 구체적인 내용을 표현합니다.
2. 요구사항이 현재는 웹디자이너 중심에 UI에 대한 내용이 많습니다. 백앤드 개발자 중심의 기능 위주의 요구사항이 정리가 필요합니다.
3. 화면설계에 요구사항 ID 중심의 내용이 처리하였는데, 요구사항명(요구사항아이디)형식으로 표현 필요하고, 요구사항은 따로 왼쪽 마지막 항목에 참고 요구사항 정도로
	표현하는 것이 더 좋을 것같습니다.
	==> 피드백을 받으면 적용적 기본 예시를 만들어 검토 받고 전체 적용 부탁드려요..(이번에는 여러가지 사정으로 진행하였지만.. ^^)
4. DB설계(물리) ==> DB설계 ERD(논리)로 변경,  물리와 논리가 바뀜	
   DB설계(물리) - 테이블명과 컬럼명이 있는 것도 전체적으로 ERD 포함 시켜주세요.
5. jquery를 이용하면 보다 간편하게 처리하는 것을 javascript 순수코드로 코드가 너무 어렵고 복잡하게 처리된게 보입니다. jquery로 검색해보시길.. 
	ex) 전체 체크 등..
6. 구현화면|메인페이지 ==> 구현화면|메인페이지(전체컨텐츠리스트) - 구체적인 기능을 추가 표현이 필요합니다.
7. 비밀번호 처리시, 문제가 발생하거나 데이터가 에러가 날 수 있는 데 controller단에 리턴이 "수정성공" 검토해야할 내용입니다.
8. 코드가 수업 중에 진행된 내용으로 처리하면 간단하고 쉬운 코드를 지난친 gpt 사용으로 어려운 코드로 만들어진 것이 많음.. - 이해는 어느 정도 하고 있길 바랍니다.
	수업 진행 코드 부터 먼저 확인하고, 진행하는 것도 방법입니다.
9. 리스크 관리 및 이슈사항 관리는 아주 좋았습니다.
10. 로그인 후, 성공/실패 @@@ 로그인 중인 것은 상단에 표시하도록 합니다.
	
	




   


