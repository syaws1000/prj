다음은 \*\*“Spring과 AJAX 연동 처리”\*\*를 주제로 한 학습 교안으로,
**Gagné의 9가지 수업사태**와 **Keller의 ARCS 동기유발 이론**에 기반하여
학생들이 **자율적 탐구**와 **실무 적용**을 할 수 있도록 설계한 **체계적인 학습 계획안**입니다.

---

## 💡 Spring과 AJAX 연동처리 학습 교안

**– Gagné + ARCS 기반 체계적 자기주도형 실습 수업 –**

> **대상**: 다양한 학습 능력을 지닌 IT/Web 개발 학습자
> **목표**: 실시간 사용자 요청을 서버와 비동기적으로 처리하는 Spring + AJAX 연동 기술 습득 및 실무 적용

---

### 1. 🎯 주의 집중 끌기 및 학습 연결성 제공

**ARCS의 Attention + Relevance**

* ✨질문: “혹시 버튼을 눌렀는데 웹페이지가 멈췄던 경험 있나요?”
* 🤔“댓글 입력할 때 새로고침 없이 저장되면, 그게 어떻게 가능한 걸까요?”
* 😆 유머 예시: “AJAX 없는 웹은 마치 수동 세차처럼 귀찮고 지루합니다.”
* 🎥 시연 영상: `HTML 버튼 클릭 → JS → AJAX → 서버로 요청 전송 → DB → 결과만 반영` 흐름

---

### 2. 🏁 학습 목표

**ARCS의 Confidence 강화**

* Spring Controller에서 AJAX 요청을 비동기 처리할 수 있다.
* JSON 형식으로 데이터를 주고받는 방법을 이해하고 구현할 수 있다.
* 실시간 댓글 등록 기능을 스스로 구현할 수 있다.

---

### 3. 🔁 선수 학습 상기 및 실생활 연결

* HTML + JS + jQuery 기본 구조 복습
* Spring MVC 구조에서 Controller의 역할 복습
* **비유**: "우체국 창구에 서서 ‘받는 사람 없이 편지 보냄’ = AJAX 요청 없이 Controller 호출"

---

### 4. 🧠 주요 개념/핵심 키워드와 암기 전략

| 용어              | 의미           | 기억법/연상법                        |
| --------------- | ------------ | ------------------------------ |
| AJAX            | 비동기 JS & XML | **A**irplane가 왔다갔다, 즉 서버 왔다갔다! |
| `@ResponseBody` | 데이터 직접 반환    | “응답을 BODY에 실어서 보낸다”            |
| JSON            | 데이터 전달 형식    | `{이름:값}` 형태 기억!                |

---

### 5. 🔍 학습 목표별 탐구형 학습

**문제 제기 ➝ 단계별 힌트 ➝ 자율 탐구**

#### 💡문제 1: “사용자가 입력한 이름을 서버로 보내 결과를 받게 하려면?”

* 🧩힌트: HTML에서 입력한 데이터 → JS로 → AJAX 전송
* 🤔어떻게 서버에서 다시 전달받을까?

#### 💡문제 2: “Controller에서는 어떤 어노테이션으로 받아야 할까?”

* 🧩힌트: `@RequestParam`, `@ResponseBody` 중 하나
* 🎯도전: 두 개를 비교하며 실제로 작동시켜보기

---

### 6. 🤝 실습 활동 및 협력 학습 유도

**💬 Mini 팀 프로젝트 – 실시간 간단한 설문 기능 만들기**

* 입력: 질문 + 선택지 클릭
* 처리: AJAX로 Controller에 전달 → 결과 JSON 반환
* 출력: 화면에 실시간으로 투표율 반영

🛠 팀 역할 나누기: 프론트(AJAX), 백엔드(Spring Controller), JSON 시각화

---

### 7. ✅ 단계별 피드백 제공과 자기 평가

* [ ] AJAX 호출 성공했는가?
* [ ] JSON 형태로 결과를 받았는가?
* [ ] 새로고침 없이 화면에 반영되었는가?

> 💬 서로의 코드 리뷰하며 “왜 이렇게 짰는지” 설명하게 함 (자기 인식 유도)

---

### 8. 📊 수행 평가 및 피드백 제공

**실무형 과제: “실시간 방문자 수 조회 기능 만들기”**

* 클릭 시 → AJAX 요청 → 현재 방문자 수 반환
* 페이지 내에 자동 업데이트
* ✍ 피드백 체크리스트:

  * JSON 구조 이해
  * Controller 로직 정확성
  * 에러 핸들링 여부

---

### 9. 🧩 학습 전이 강화 및 실제 문제 적용

**“실시간 댓글 기능” 자율 챌린지 과제**

* HTML + JS + AJAX + Spring Controller + DB 처리까지
* 확장형 미션: 등록, 수정, 삭제 동작 모두 비동기 처리
* 💡 힌트 제공:

  * `@PostMapping` vs `@GetMapping`
  * JSON.stringify()를 사용해야 하는 경우는?

---

### 10. 🔄 학습 반성 및 향후 학습 준비

* “어떤 부분에서 막혔나요?”
* “혼자 다시 구현한다면 어떤 점을 보완할까요?”
* 다음 주제 예고: **파일 업로드 AJAX 처리 + 스프링 연동**
* 🌱 짧은 회고 공유: “AJAX는 웹의 **배달의 민족**이다. 요청만 하면 필요한 걸 갖다 준다.”

---

## 🧾 학습자와 공유할 수 있는 포맷 요약

| 단계 | 활동         | 키워드                 | 학습자 질문 유도               |
| -- | ---------- | ------------------- | ----------------------- |
| 1  | 몰입 영상 & 유머 | AJAX 필요성            | “왜 새로고침 없이 가능할까?”       |
| 2  | 목표 제시      | JSON, 비동기           | “무엇을 만들 수 있게 될까?”       |
| 3  | 복습 & 연결    | HTML/JS, Controller | “기존에 배운 내용과 무슨 관련이 있지?” |
| 4  | 핵심 개념      | 키워드 연상              | “이 용어를 한 줄로 설명해볼까?”     |
| 5  | 문제 탐구      | AJAX 흐름             | “서버엔 어떻게 전달할까?”         |
| 6  | 팀 활동       | 협력, 실습              | “같이 만들면 어떤 흐름이 필요할까?”   |
| 7  | 피드백        | 단계 확인               | “무엇이 잘 작동하고, 왜 안 됐을까?”  |
| 8  | 평가 과제      | 실무형                 | “직접 만들면 어떻게 구현할 수 있을까?” |
| 9  | 확장 문제      | 댓글 기능               | “더 복잡한 것도 할 수 있을까?”     |
| 10 | 회고         | 성장 계획               | “오늘 배운 걸 어디서 써먹을 수 있지?” |
