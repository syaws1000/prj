# 🌱 Spring Boot 게시판: 답글 달기 기능 구현 학습 교안

## 1. 🎯 주의 집중 끌기 및 학습 연결성 제공 (Gagné 1 / ARCS: Attention, Relevance)

### ❓ 의문 제기

> “여러분, 게시판에서 댓글은 많이 달아봤죠?
> 그런데 댓글의 댓글, 즉 \*답글(대댓글)\*은 어떻게 구현될까요?”

### 💡 상황극 예시

```text
👦: ‘이 글에 의견을 추가하고 싶은데...’
👧: ‘그냥 댓글 다는 건가요?’  
👨‍🏫: ‘아니죠~ 이건 답글(Reply)!’
```

### 📌 학습 연결

* 기본 게시판 CRUD는 완료했으니, 이제 **계층형 게시판(답글)** 기능을 통해 실무형 스킬을 업그레이드합니다!

---

## 2. 🥅 학습 목표 (Gagné 2 / ARCS: Confidence)

### 🎯 오늘의 학습 목표

1. 게시판에서 **부모 글과 자식 글(답글)의 관계 구조**를 이해한다.
2. **Spring Boot + JSP + DAO**를 활용해 답글 기능을 구현한다.
3. 계층형 게시판의 **실무 적용 예시**를 통해 응용력을 기른다.

---

## 3. 🔁 선수 학습 상기 및 실생활 연결 (Gagné 3 / ARCS: Relevance)

### 🧠 선수학습 되짚기

* 지난 시간: `게시판 글 등록/수정/삭제/조회`
* 필요 개념: `게시판 테이블 구조`, `Spring Controller`, `DAO`, `JSP 폼 처리`

### 🏠 실생활 연결

> “카페 리뷰에 또 다른 사람이 답글을 다는 구조,
> 그게 바로 우리가 구현할 **계층형 답글 시스템**이에요!”

---

## 4. 🧠 주요 개념 및 핵심 키워드 (Gagné 4 / ARCS: Confidence)

### 💡 핵심 키워드

| 키워드     | 의미          | 암기 팁 (웃음 포함 😄)                |
| ------- | ----------- | ------------------------------ |
| `refno` | 참조글번호 (부모글) | “**Ref는 참고하라!** 답글은 부모를 참조해\~” |
| `step`  | 출력 순서       | “**Step by Step**, 차례차례\~”     |
| `level` | 들여쓰기 깊이     | “**Level이 깊으면** 깊은 관계지\~👀”    |
| `Reply` | 답글 처리 로직    | “누구세요\~? **답글이요\~!**”          |

---

## 5. 🔍 학습 목표별 탐구형 학습 (Gagné 5 / ARCS: Satisfaction)

### 🧭 탐구 미션

#### Q1. 왜 refno/step/level이 필요할까?

> ✔ 힌트: 글이 어떤 글의 자식인지, 몇 번째로 출력할지, 들여쓰기는 어떻게 할지 정해야 한다!

#### Q2. 답글을 달면 어떤 값이 자동으로 달라질까?

> ✔ 힌트: `refno`는 부모의 번호, `step`은 부모보다 +1, `level`도 +1!

---

## 6. 🛠 실습 활동 및 협력 학습 유도 (Gagné 6 / ARCS: Attention + Satisfaction)

### 👨‍💻 실습: 답글 처리 단계

1. **화면단 JSP**

   * `답글 버튼` 클릭 시, hidden으로 부모글 정보(refno, step, level)를 전달
2. **Controller**

   * `답글 등록` 요청을 받아 DAO 호출
3. **DAO/Mapper**

   * 기존 step 밀어내기 (`UPDATE`)
   * 새로운 답글 INSERT (`refno`, `step`, `level` 처리)
4. **View 단 확인**

   * `들여쓰기 + 순서`를 기준으로 출력 확인

> 💬 협력 과제: 2인 1조!
> 한 명은 부모글을, 다른 한 명은 자식글(답글)을 등록해보고 구조를 분석해보세요!

---

## 7. 📩 단계별 피드백 및 자기평가 (Gagné 7)

### 📘 피드백 질문

* 답글이 부모글 아래 잘 출력되나요?
* 들여쓰기가 자연스러운가요?
* step 처리가 정확히 되셨나요?

### ✅ 자기 평가 체크리스트

| 항목                    | 예 / 아니오 |
| --------------------- | ------- |
| 답글의 refno가 부모글 번호인가요? | ✔ / ✘   |
| 출력 순서(step)가 맞나요?     | ✔ / ✘   |
| level이 들여쓰기로 반영되었나요?  | ✔ / ✘   |

---

## 8. 🧪 수행 평가 및 피드백 제공 (Gagné 8 / ARCS: Confidence + Satisfaction)

### ✍️ 실무형 과제

> **“‘우리 학원 후기 게시판’에 답글 기능 추가하기”**

* 글 등록 > 댓글 > 답글 흐름까지 테스트
* 테스트 사용자: `학생1`, `학생2` 시나리오로 검증

### 🎁 피드백 포인트

* 실무에선 이런 계층형 구조가 **Q\&A 게시판**, **공지사항 답변**, **상담게시판**에 자주 활용됩니다!

---

## 9. 🌐 학습 전이 강화 및 실제 문제 적용 (Gagné 9 / ARCS: Relevance + Satisfaction)

### 🔁 실제 확장 문제

> “댓글이 여러 개 달리고, 그 댓글에도 댓글이 계속 달리면?”
> ➤ 무한 계층형 구조 처리!

#### 🧩 도전 과제

* level이 3 이상일 때 CSS로 색 바꾸기
* 답글 삭제 시, 자식글 처리는?

---

## 10. 🪞 학습 반성 및 향후 준비

### 🗣 회고 질문

* 오늘 배운 것 중 가장 헷갈렸던 부분은?
* 실무에서 이 기능을 써야 한다면 어떤 서비스에 적용할 수 있을까요?

### 📚 다음 시간 예고

> **파일 첨부 기능 + 답글 포함 출력 정렬 구현!**

---

## 🧡 학습자와 공유할 수 있는 강조 포인트 요약

* **답글은 부모(refno)를 기억하고, step으로 줄을 서고, level로 깊이를 가진다.**
* **Spring Boot와 JSP는 환상의 콤비!** 실무형 게시판 만들기엔 딱!
* **혼자도, 둘이도, 조별로도 OK!** 댓글 달기 놀이처럼 재밌게 구현하며 실력 쌓기!
* **웃음은 기억력의 친구!** — refno는 ‘참고하세요\~’, step은 ‘차례차례\~’, level은 ‘들어가세요\~’
