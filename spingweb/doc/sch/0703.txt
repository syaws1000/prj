# 🌟 Spring Boot: 파일 업로드/다운로드 및 세션 처리 수업 교안

> **구현 목표**:
> 사용자 세션을 기반으로 로그인된 사용자만 첨부파일을 업로드 및 다운로드할 수 있도록 기능을 개발한다.

---

## 1. 🎯 주의 집중 끌기 및 학습 연결성 제공 *(Gagné 1단계, ARCS Attention)*

**도입 질문**:

> 📦 “어떤 웹사이트에서 파일을 업로드하려고 했는데, 로그인을 안 하면 ‘403 forbidden’ 메시지가 떴던 적이 있나요? 왜 그럴까요?”

**활동 제안 (흥미 요소)**:

* ‘누가 내 파일을 업로드했나?’ 추리게임
* 학생의 이름으로 임의 업로드된 파일을 보고 '범인 찾기'
* “로그인 정보 없이 업로드되면 어떤 문제가 발생할까?” 🤔

## ##학습자와 공유할 수 있는 내용(강조)#\#

> 👉 실제 서비스에서는 ‘로그인 정보가 세션에 저장되어야’ 안전하게 파일을 관리할 수 있다!

---

## 2. 🎯 학습 목표 명시 *(Gagné 2단계, ARCS Relevance)*

* 세션을 통해 로그인한 사용자 정보를 처리할 수 있다.
* MultipartFile을 이용하여 파일을 업로드하고 저장할 수 있다.
* 업로드된 파일을 서버에서 다운로드할 수 있도록 구현할 수 있다.

---

## 3. ⏪ 선수 학습 상기 및 실생활 연결 *(Gagné 3단계)*

**복습 유도 질문**

* ✅ Controller에서 요청을 받을 때 어떤 Annotation을 사용하죠? (`@RequestMapping`, `@GetMapping`, `@PostMapping`)
* ✅ JSP나 HTML에서 파일을 전송할 때 필요한 form 속성은? (`enctype="multipart/form-data"`)

**실생활 연결**

> 파일 올리는 기능, 누구나 다 쓰죠! 과제 제출, 이미지 업로드, 이력서 제출까지…
> 그런데 로그인 없이 업로드되면 **누구나 아무 파일을 올릴 수 있다는 점**, 상상해보셨나요?

---

## 4. 🧠 주요 개념/핵심 키워드 제시 및 암기법 *(Gagné 4단계, ARCS Confidence)*

| 개념                   | 설명                      | 암기법                             |
| -------------------- | ----------------------- | ------------------------------- |
| `MultipartFile`      | 업로드된 파일을 처리하는 객체        | **"Multi" → 파일이 여러 개 올 수도 있다!** |
| `@SessionAttributes` | 세션 유지용 어노테이션            | **Session = 기억장치!**             |
| `@ModelAttribute`    | 세션 객체를 컨트롤러에서 받을 때 사용   | **Model에 저장된 Attribute 꺼내기!**   |
| `FileSystemResource` | 파일 다운로드를 위한 파일 경로 자원 처리 | **파일시스템에 저장된 자원 = 다운로드 가능!**    |

---

## 5. 🔍 학습 목표별 탐구형 학습 *(Gagné 5단계)*

### 의문 제기 & 힌트 기반 탐색

1. ❓ "서버에 파일을 올릴 때 사용자가 누구인지 어떻게 알 수 있을까요?"
   💡 *힌트: 로그인 정보를 어딘가에 저장해야 해요!*

2. ❓ "파일은 어디에 저장되어야 할까요?"
   💡 *힌트: Spring의 application.properties에서 경로를 설정해볼까요?*

3. ❓ "다른 사람은 이 파일을 어떻게 다운로드하게 할까요?"
   💡 *힌트: 파일의 경로를 ResponseEntity로 넘겨줘야 합니다!*

---

## 6. 🛠 실습 활동 및 협력 학습 유도 *(Gagné 6단계, ARCS Satisfaction)*

### 실습 1: 로그인 세션 처리

* `LoginController`: 세션에 사용자 정보 저장

```java
@SessionAttributes("user")
public class LoginController {
    @PostMapping("/login")
    public String login(@RequestParam String id, Model model) {
        model.addAttribute("user", id);
        return "redirect:/uploadForm";
    }
}
```

### 실습 2: 파일 업로드 처리

* `UploadController.java`

```java
@PostMapping("/upload")
public String upload(@RequestParam MultipartFile file, @SessionAttribute("user") String user) {
    Path path = Paths.get("C:/upload/" + file.getOriginalFilename());
    file.transferTo(path);
    System.out.println(user + "가 파일 업로드!");
    return "uploadSuccess";
}
```

### 실습 3: 파일 다운로드 처리

```java
@GetMapping("/download")
public ResponseEntity<Resource> downloadFile(@RequestParam String filename) {
    Path path = Paths.get("C:/upload/" + filename);
    Resource resource = new FileSystemResource(path);
    return ResponseEntity.ok()
        .header(HttpHeaders.CONTENT_DISPOSITION, "attachment; filename=\"" + resource.getFilename() + "\"")
        .body(resource);
}
```

---

## 7. 🔁 단계별 피드백 제공과 자기 평가 *(Gagné 7단계)*

**자기 점검 질문**

* [ ] 파일 업로드 시 로그인 여부를 세션으로 체크했는가?
* [ ] 업로드한 파일이 지정된 위치에 저장되었는가?
* [ ] 다운로드 요청 시 해당 파일을 정상적으로 받을 수 있는가?

### 💬 팁!

오류가 났다면 `@SessionAttribute`를 누락하지 않았는지 체크!

---

## 8. 📊 수행 평가 및 피드백 제공 *(Gagné 8단계)*

**실무형 미션 과제**

> 💼 "로그인하지 않으면 업로드/다운로드 페이지 접근이 불가능하도록 코딩해보세요."

* 조건문 처리: 세션 정보가 없을 때 로그인 페이지로 redirect
* 동료 피드백: 다른 조의 기능 테스트 + 리뷰 카드 작성

---

## 9. 🔁 학습 전이 강화 및 실제 문제 적용 *(Gagné 9단계)*

**확장 활동 제안**

* 업로드 파일의 이름이 중복될 때 처리 방안은? (UUID 활용)
* 다운로드 시, 다운로드 횟수 기록 기능 추가
* 업로드된 파일 리스트 출력하기

**추가 도전 과제**

> “게시판에 첨부파일 기능 추가해보기!”
> 게시글 하나에 여러 파일을 첨부해보고, 다운로드 구현까지 확장!

---

## 10. 🔄 학습 반성 및 향후 학습 준비

**회고 질문**

* 오늘 배운 것 중 가장 흥미로웠던 점은?
* 내가 가장 어려움을 느낀 부분은?
* 다음 시간에는 이 기능을 어떻게 활용해볼 수 있을까?

**자기반성 워크시트 예시**

| 항목                | 나의 평가 (O/X) | 이유                          |
| ----------------- | ----------- | --------------------------- |
| 세션을 활용해 로그인 처리 성공 | O           | 컨트롤러에서 @SessionAttribute 사용 |
| 업로드된 파일이 저장되었음    | X           | 경로가 잘못됨                     |
| 다운로드 처리 성공        | O           | ResponseEntity 설정 완료        |


