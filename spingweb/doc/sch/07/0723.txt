### 📘 교안 주제: Spring Boot로 메일 발송 기능 구현하기

---

### **1. 주의 집중 끌기 및 학습 연결성 제공 (Gagné 1단계, ARCS - Attention)**

* **질문 던지기**:
  "회사 면접 합격 통보 메일을 자동으로 보내려면, 어떻게 해야 할까요?"
* **흥미 요소**:
  “🤔 나도 개발자로 메일 발송 시스템 만들어서 ‘합격 메일’을 스스로 보내본다면?”
* **짧은 시연**:
  `메일 전송 버튼 클릭 → 이메일 도착!` 실시간 데모



### **2. 학습 목표 명확히 하기 (Gagné 2단계, ARCS - Relevance)**

* 메일 전송 로직에 필요한 Spring Boot 구성 요소를 이해한다.
* SMTP 서버 연결 설정을 구성할 수 있다.
* 사용자 입력을 기반으로 메일을 전송하는 기능을 구현할 수 있다.
* HTML 메일 또는 첨부파일도 처리할 수 있다.

---

### **3. 선수 학습 상기 및 실생활 연결 (Gagné 3단계, ARCS - Relevance + Confidence)**

* “메일 전송 = form + controller + service!”
* HTML form, Controller 매핑, Service 계층 분리 방식 복습
* SMTP 용어 퀴즈:

  > Q. SMTP는 무엇의 약자일까요?
  > A. Simple Mail Transfer Protocol 📮

---

### **4. 주요 개념/핵심 키워드 제시 (Gagné 4단계, ARCS - Confidence)**

| 키워드                      | 뜻              | 암기 코드                      |
| ------------------------ | -------------- | -------------------------- |
| `JavaMailSender`         | 메일 보내기 도구      | "메일보내는 자바 요정"              |
| `application.properties` | 설정 파일          | "속삭이는 설정서"                 |
| `SMTP`                   | 메일 전송 프로토콜     | "Simple하게 Mail을 Transfer!" |
| `MimeMessageHelper`      | HTML/첨부 메일 도우미 | "마임이 메일을 도와줘"              |

---

### **5. 학습 목표별 탐구형 학습 (Gagné 5단계, ARCS - Confidence + Satisfaction)**

* **의문**: 메일 전송은 언제, 어떤 시점에서 어떤 클래스를 통해 이루어질까?
* **힌트**: @PostMapping으로 폼을 전송받고, Service에서 JavaMailSender로 처리!
* **탐구 과제**:

```java
@PostMapping("/sendMail")
public String sendMail(MailDTO mailDTO) {
    mailService.sendMail(mailDTO);
    return "result";
}
```

---

### **6. 실습 활동 및 협력 학습 유도 (Gagné 6단계, ARCS - Satisfaction)**

* **개인 실습**:

  1. Gmail SMTP를 사용한 메일 전송 기능 구현
  2. 사용자 입력 폼 구성 및 전송 처리
* **협업 활동**:

  * 짝꿍과 서로의 코드를 리뷰하며 문제점 찾기
  * "우리는 어떤 상황에서 자동 메일 발송 기능을 써볼 수 있을까?" 사례 브레인스토밍

---

### **7. 단계별 피드백 및 자기 평가 (Gagné 7단계)**

* **CheckPoint 퀴즈**:

  * Q1. SMTP 설정은 어디에 입력해야 하나요?
  * Q2. 첨부파일을 추가하려면 어떤 도우미 클래스를 써야 할까요?
* **스스로 묻기**:

  * “메일은 잘 도착했나요?”
  * “내가 만든 기능을 팀 프로젝트에서 쓸 수 있을까?”

---

### **8. 수행 평가 및 피드백 (Gagné 8단계, ARCS - Satisfaction)**

* **실전 미션**:

  * 사용자 이름, 이메일, 내용으로 메일을 전송하는 "문의하기" 기능 만들기
* **평가 기준**:

  * SMTP 설정 정확성
  * 메일 발송 성공 여부
  * 코드의 구조화 정도 (Controller-Service 분리 여부)

---

### **9. 학습 전이 강화와 실제 문제 적용 활동 (Gagné 9단계, ARCS - Relevance + Satisfaction)**

* **확장 미션**:

  * 회원 가입 시 인증 메일 자동 발송 기능 추가
  * HTML 템플릿을 이용한 ‘예쁜’ 메일 양식 제작
* **실무 적용 사례**:

  * 병원 예약 알림, 쇼핑몰 주문 확인 메일 등 실제 서비스 분석

---

### **10. 학습 반성 및 향후 학습 준비**

* “메일이 간단해 보였는데 이렇게 많은 요소가 필요했다니!”
* “다음에는 인증 코드 전송, 이메일 인증 기능도 만들어보고 싶다.”
* ✍️ 자가 체크리스트:

  * SMTP 설정 이해 ✔
  * JavaMailSender 사용 가능 ✔
  * Controller → Service 흐름 ✔

---

## ✅ 학습자와 공유할 내용 요약

* ✅ 실무 기반 자동 메일 발송 기능을 직접 만들어본다!
* ✅ 흥미유발 → 탐구학습 → 협력과 실습 → 자기평가 → 실무 전이까지!
* ✅ 각 단계마다 질문 → 힌트 → 해결을 반복하며 집중력과 자신감 상승!
* ✅ “이메일 기능 하나 직접 만들 수 있는 개발자, 나도 될 수 있다!”

