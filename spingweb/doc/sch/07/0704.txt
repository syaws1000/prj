## 🌟 Spring Boot 세션 처리 및 답글 처리 학습 교안 🌟

> **적용 이론**: Gagné’s 9 Events + Keller’s ARCS
> **대상**: 실무 중심의 Spring Boot 개발을 배우는 학생
> **특징**: 자율 탐구 중심, 유쾌한 문제 해결, 실무 예제 기반

---

### 1. 🎯 주의 집중 끌기 및 학습 연결성 제공 (Gain Attention / Relevance)

**😲 질문!**

* “게시판에서 로그인한 사용자만 글을 쓰게 하려면 어떻게 해야 할까요?”
* “답글을 달았는데, 목록에서 순서가 꼬였어요! 어떻게 처리해야 할까요?”

**🧠 연결하기**

* “이건 단순한 웹개발이 아니라, 실제 **커뮤니티 서비스**, **Q\&A 포럼**, **사내 시스템**을 만드는 데 반드시 필요한 기술입니다!”
* "실무 현장에서는 이게 안 되면… 고객이 로그아웃 상태에서 글 써버립니다 😱"

**🎉 흥미 유도**

* “우리 오늘 **로그인 세션을 이용한 사용자 추적** + **댓글 트리 구조 만들기**라는 실무의 ‘두 마리 토끼’를 잡아볼 거예요!”

---

### 2. 📍 학습 목표 (Inform Learners of Objectives)

#### 학습자는 다음을 수행할 수 있어야 합니다:

1. Spring Boot에서 세션 처리 방식 이해 및 구현
2. 로그인 사용자 정보를 세션으로 저장하고 활용
3. 게시글에 대한 답글(댓글)을 계층적으로 처리
4. 실무형 게시판 구조 설계 및 구현

---

### 3. 🔄 선수 학습 상기 및 실생활 연결하기 (Stimulate Recall of Prior Learning)

**🔎 다시 생각해보기**

* “지난 시간에 배운 `@Controller`, `Model`, `request param` 기억나시나요?”
* “로그인 처리는 했는데… 로그인 상태 유지하는 건 어떻게 처리했었죠?”

**🏡 실생활 비유**

* 세션은 마치 “놀이공원 입장팔찌”!
  → 입장한 사람(로그인한 사용자)만 놀이기구 이용 가능(댓글 작성 등 가능)
* 답글은 “카톡 대화방에서 누가 누구 말에 답했는지 보여주는 구조”와 비슷

---

### 4. 🧠 주요 개념/핵심 키워드를 최고의 암기법에 의한 제시 (Present Content)

| 개념                       | 설명                     | 암기 코드                |
| ------------------------ | ---------------------- | -------------------- |
| `HttpSession`            | 사용자 브라우저와 서버 사이 정보를 유지 | **세션은 서랍장!**         |
| `session.setAttribute()` | 세션에 값 저장               | **세션에 넣는 건 쟁반에 올리기** |
| `session.getAttribute()` | 세션에서 값 꺼내기             | **쟁반에서 다시 꺼내먹기**     |
| `ref`, `step`, `level`   | 답글의 계층적 구조 구현          | **답글은 '레고 쌓기'**      |

---

### 5. 🧩 학습 목표별 탐구형 학습 (Provide Learning Guidance)

#### ✨ 미션 1: 세션 처리 구현

**문제**: 로그인한 사용자의 이름을 글쓰기 페이지에서 어떻게 확인할 수 있을까요?

**힌트**:

* 로그인 컨트롤러에서 `session.setAttribute("loginUser", user.getName())`
* 글쓰기 폼에서 `${sessionScope.loginUser}` 활용

#### ✨ 미션 2: 답글 트리 구조 구현

**문제**: 글에 대한 답글, 그 답글에 대한 또 다른 답글… 어떻게 구분할 수 있죠?

**힌트**:

* `ref`는 **최상위 글 번호**,
* `step`은 **글 출력 순서**,
* `level`은 **들여쓰기 수준**으로 생각하세요.

---

### 6. 🧪 실습 활동 및 협력 학습 유도 (Elicit Performance)

#### 🤝 팀별 실습

1. 로그인 → 세션 저장
2. 게시글 작성 시 로그인 사용자 표시
3. 게시판 목록에 댓글 달기 버튼 추가
4. 답글 작성 시 `ref`, `step`, `level`을 다르게 설정

> 💬 **협력 포인트**:
>
> * A학생: 로그인/세션 구현
> * B학생: 게시판 DB 설계 및 SQL
> * C학생: 답글 트리 구조 처리 로직

---

### 7. 💬 단계별 피드백과 자기 평가 (Provide Feedback & Self-Assessment)

**✅ 중간 점검 체크리스트**

* [ ] 로그인 시 세션에 사용자 정보가 저장된다
* [ ] 글쓰기 페이지에서 사용자 이름을 출력할 수 있다
* [ ] 답글이 원글 아래로 잘 정렬되어 출력된다

**❓ 내가 잘하고 있는가?**

* *"답글이 들어가긴 하는데, 순서가 이상해요!"* → `step` 값 확인
* *"글은 써지는데, 로그인 안 해도 써져요!"* → `session.getAttribute("loginUser")` 체크

---

### 8. 📝 수행 평가 및 피드백 제공 (Assess Performance)

#### 📌 과제:

**“세션 기반 로그인 사용자 전용 게시판 + 계층형 답글” 구현 미니 프로젝트**

* 기능 요구사항 체크리스트 제공
* 코드 리뷰와 피드백 시간 마련

---

### 9. 🛠 학습 전이 강화 및 실제 문제 적용 (Enhance Retention and Transfer)

**💡 실전 적용 예시**

* 기업 내부 Q\&A 게시판
* 상담 시스템에서 질문-답변 처리
* 고객센터의 게시판 시스템

**⚙ 확장 적용 아이디어**

* “비회원은 읽기만 가능, 회원만 작성 가능”
* “답글에 다시 답글 달 수 있는 트리형 구조”

---

### 10. 🪞 학습 반성 및 향후 학습 준비 (Encourage Retention and Future Learning)

#### 🔍 오늘 배운 내용 정리

* 세션으로 사용자 인증 상태 관리
* 답글의 구조적 저장과 출력
* 실무형 게시판 구조에 대한 이해

#### ✨ 다음 시간 예고

> “댓글에 좋아요 기능을 붙이자!”
> – **AJAX와 Spring Boot 연동**으로 더 멋진 게시판 만들기 GO!

---

## ✅ 학습자와 공유할 수 있는 핵심 내용 요약 (카드형 요약용)

| 핵심 요소     | 요약                                    |
| --------- | ------------------------------------- |
| 🎯 목표     | 세션 처리와 댓글 계층 구조 실무 구현                 |
| 🧠 핵심 키워드 | `HttpSession`, `ref`, `step`, `level` |
| 🛠 실습 포인트 | 로그인 유지 → 글 작성 → 답글 트리 구현              |
| 💡 유쾌한 비유 | 세션 = 놀이공원 팔찌 / 답글 = 카톡 대화방            |
| 🚀 확장 가능성 | 사내 포털, 고객센터, 게시판 서비스 등                |

---
