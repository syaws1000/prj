# 📚 Spring Boot + AJAX + FullCalendar 수업 교안

**(학습 체계이론 기반 수업 설계안)**

---

### **1. 주의 집중 끌기 및 학습 연결성 제공 (Gain Attention + ARCS Arousal)**

#### 👀 의문 제기:

"캘린더 앱은 많이 쓰는데, **직접 만들 수는 없을까?** 구글 캘린더처럼 일정 등록, 수정, 삭제까지?"

#### 😄 유머 요소:

“만약 약속 안 잡았다고 혼나는 AI 스케줄러가 있다면? 우리 캘린더에 AJAX를 심자!”

#### 🎯 실무 연결 예시:

* 병원 예약 시스템
* 학원 시간표 시스템
* 근무일정 조정 웹앱 등

✅ **학습 연결성 강조**:
→ “지금 배우는 내용이 실제 **예약 관리 시스템** 개발의 핵심이 됩니다.”

---

### **2. 학습 목표 제시 (Inform Learner of Objectives + ARCS Relevance)**

🔍 **오늘의 목표**

* FullCalendar 라이브러리 구조 이해
* Spring Boot + AJAX 연동을 통한 일정 불러오기/추가/수정/삭제 구현
* 실제 프로젝트에 활용할 수 있도록 응용 능력 키우기

🎯 **성과 기반 목표**

* JSON 데이터 교환 구조 이해
* Controller, Service, DAO 계층 분리 구조 구현
* FullCalendar의 `eventSources`와 AJAX 연결

---

### **3. 선수 학습 상기 및 실생활 연결 (Stimulate Recall + ARCS Relevance)**

❓ "AJAX는 왜 필요하죠?"
→ “페이지 새로고침 없이 데이터를 주고받기 위해!”

🧠 복습 퀴즈

* AJAX란?
* REST API의 기본 동작 구조?
* Spring Controller에서 JSON 응답하는 방법?

📌 실제 적용 상황 예시

* 카카오톡 새 메시지 자동 수신
* 병원 예약현황 즉시 반영 시스템

---

### **4. 주요 개념/핵심 키워드를 최고의 암기법에 의한 제시 (Present Content + ARCS Confidence)**

🎯 **핵심 키워드와 암기팁**

| 개념              | 설명                    | 암기법                      |
| --------------- | --------------------- | ------------------------ |
| `FullCalendar`  | JS 라이브러리, 일정표 출력      | "달력을 Full하게 관리한다!"       |
| `AJAX`          | 비동기 요청                | "안 보이게 자\~알 통신해요, AJAX!" |
| `@ResponseBody` | Controller 응답 JSON 처리 | "응답할 땐 바디를 던져요\~"        |
| `eventSources`  | 이벤트 불러오기 포인트          | "이벤트의 샘물\~ 소스는 여기!"      |

---

### **5. 학습 목표별 탐구형 학습 (Provide Learning Guidance + ARCS Confidence)**

📌 단계별 질문 → 직접 탐색 유도

1. “이 달력은 어디서 데이터를 가져오지?”
   👉 힌트: `eventSources`, AJAX, Controller
   👉 🔍 JSON으로 불러오는 서버 응답 구조 파악

2. “어떻게 새로운 일정을 추가할까?”
   👉 힌트: FullCalendar `eventAdd` → `POST`로 전송

3. “수정하려면 어떻게 하지?”
   👉 힌트: `eventClick` 이벤트 리스너 활용 + `PUT` or `PATCH` 방식

---

### **6. 실습 활동 및 협력 학습 유도 (Elicit Performance + ARCS Satisfaction)**

🧩 **미션**

> 🎯 “스스로 만드는 일정 캘린더!”

✅ 실습 1: FullCalendar 연동 후 일정 목록 출력
✅ 실습 2: 일정 등록/수정/삭제 기능 구현
✅ 실습 3: 오늘 날짜 기준 강조 스타일 추가

🤝 **협력학습 팁**

* 2인 1조 → 각자 Controller / View 역할 나눠 구현
* 서로 다른 날짜에 일정 설정 → 테스트 케이스 공유

---

### **7. 단계별 피드백 제공과 자기 평가 기회 (Provide Feedback + ARCS Satisfaction)**

💬 실시간 피드백 질문 예시:

* “AJAX 호출했는데 데이터가 안 들어와요!”
  → 콘솔 확인 → 네트워크 탭 점검
* “캘린더에 바로 반영이 안 돼요!”
  → `eventRender` vs `refetchEvents` 사용 여부 확인

📝 **자기 점검표**

* [ ] AJAX 요청 후 정상 응답 받았는가?
* [ ] JSON 포맷 오류 없이 파싱되는가?
* [ ] 캘린더에 새 일정이 바로 반영되는가?

---

### **8. 수행 평가 및 피드백 제공 (Assess Performance + ARCS Satisfaction)**

🎓 **미니 프로젝트 평가**

* 주제: “동아리 모임 관리 캘린더 만들기”
* 조건:

  * 일정 조회, 추가, 수정, 삭제
  * 오늘 날짜 강조
  * 전송 데이터 콘솔 출력 확인

💡 **피드백 방식**

* 코드 리뷰 피드백
* API 동작 시나리오 설명
* 개선 포인트 제안 (UI/UX, 효율성 등)

---

### **9. 학습 전이 강화와 실제 문제 적용 활동 (Enhance Retention & Transfer)**

🌐 **실전 시나리오**

* “병원 예약 캘린더를 만들어야 한다면?”
* “다중 사용자 일정 관리 기능을 추가하려면?”

💡 **확장 아이디어**

* Drag & Drop으로 일정 시간 변경
* 일정 유형별 색상 구분
* DB에 저장되는 방식으로 전환

---

### **10. 학습 반성 및 향후 학습 준비 (Reflect & Prepare for Future Learning)**

🧠 **마무리 질문**

* “AJAX와 FullCalendar 연결하면서 가장 어렵던 점은?”
* “실제 업무에 적용하려면 어떤 기능을 더 추가해야 할까?”
