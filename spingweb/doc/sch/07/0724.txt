## 🌟 파이썬 클래스 객체 - 체계적 수업 교안

### 1. 🧠 주의 집중 끌기 및 학습 연결성 제공 (Gain Attention & Relevance)

* 🎬 “혹시 여러분, 같은 설정을 가진 게임 캐릭터를 여러 번 만들면서 지겨웠던 적 있나요?”
* 🤔 “여러분이 좋아하는 드라마 등장인물을 한 줄 코드로 소환할 수 있다면?”
* 💬 강의 오프닝: “여러분은 이미 객체를 좋아하고 있었어요. 다만 몰랐을 뿐이죠!”

### 🔑 ARCS 요소: 주목(Attention), 관련성(Relevance)

---

### 2. 🎯 학습 목표 (Inform Learners of Objectives)

* 클래스와 객체의 개념을 이해하고 설명할 수 있다.
* 생성자와 인스턴스 변수를 사용할 수 있다.
* 메서드를 정의하고 호출하여 객체의 동작을 구현할 수 있다.
* 실생활 문제를 객체지향으로 모델링할 수 있다.

---

### 3. 📦 선수 학습 상기 및 실생활 연결하기 (Stimulate Recall of Prior Learning)

* “함수는 기억하나요? 데이터와 동작을 묶을 수 있으면 좋겠죠?”
* 예시 회상: `def greet(name): return f"Hello, {name}!"`
* 질문: “만약 여러 명의 학생을 관리해야 한다면 어떻게 해야 할까요?”

### 🔎 Hint: “학생마다 이름, 학번, 점수가 있다면, 이걸 하나의 틀로 만들 수 없을까요?”

---

### 4. 🧠 주요 개념/핵심 키워드를 최고의 암기법으로 제시 (Present the Content)

| 핵심 개념     | 암기 키워드                               | 기억 기술 (Acronym)    |
| --------- | ------------------------------------ | ------------------ |
| 클래스 정의    | `class`                              | “클래스룸은 class로 시작”  |
| 생성자 메서드   | `__init__()`                         | “처음 만나면 인사(init)”  |
| self      | 자기 자신을 가리킴                           | “셀카(selfie)는 자신”   |
| 인스턴스 변수   | `self.name`, `self.age` 등            | “나만의 정보는 self.xxx” |
| 메서드 정의/호출 | `def method(self):` / `obj.method()` | “객체가 직접 행동해!”      |

---

### 5. 🧪 학습 목표별 탐구형 학습 (Provide Learning Guidance)

#### 🔎 의문 제기:

> “왜 self가 꼭 있어야 할까요? 없어도 되지 않나요?”

#### 💡 힌트:

> “클래스는 설계도일 뿐, self는 진짜 ‘나’에 해당하는 실물이에요.”

#### 🌈 탐구 미션:

```python
class Student:
    def __init__(self, name, grade):
        self.name = name
        self.grade = grade

    def introduce(self):
        print(f"저는 {self.name}이고, {self.grade}학년이에요!")

# 객체 생성 및 호출
s1 = Student("유리", 2)
s1.introduce()

s2 = Student("지호", 3)
s2.introduce()
```

---

### 6. 🧩 실습 활동 및 협력 학습 유도 (Elicit Performance & Provide Guidance)

* **미션 1**: 캐릭터 생성기 만들기 (이름, 직업, 체력)
* **미션 2**: 커피 주문 클래스 만들기 (메뉴명, 가격, 주문 메서드)
* **짝활동**: 서로의 객체를 테스트하고 역할극처럼 발표하기 (“나는 커피 객체야!”)

💬 예시 출력:

```
고객님, 아메리카노 한 잔 나왔습니다. 가격은 3000원입니다.
```

---

### 7. 🛠 단계별 피드백 제공과 자기 평가 기회 (Provide Feedback)

* 실습 후 아래와 같은 질문 제시:

  * “self는 없으면 어떤 에러가 나왔나요?”
  * “객체는 몇 개까지 생성 가능한가요?”
  * “여러 개의 객체가 독립적으로 작동했나요?”

✅ 자기 확인표 제공:

| 항목                 | 체크 |
| ------------------ | -- |
| 클래스와 객체를 구분할 수 있다  | ☐  |
| 생성자에서 self를 쓸 수 있다 | ☐  |
| 메서드를 작성하고 호출할 수 있다 | ☐  |

---

### 8. 📊 수행 평가 및 피드백 제공 (Assess Performance)

* **평가 과제**: 아래 요구 조건을 만족하는 클래스를 작성하세요.

  * 이름, 나이, 반 정보를 가진 `SchoolMember` 클래스
  * 자기소개 메서드 포함
* **구현 후 발표 및 피드백** (학생끼리 리뷰 포함)

---

### 9. 🔁 학습 전이 강화와 실제 문제 적용 활동 (Enhance Retention and Transfer)

* 실전 미션:

  * “헬스장 회원관리 시스템 만들기”
  * “주문 내역 클래스로 정리하기”
* 팀 프로젝트로 실제 요구사항 기반 클래스 설계 및 발표

---

### 10. 🌱 학습 반성 및 향후 학습 준비 (Enhance Retention and Transfer)

* 반성 저널:

  * “오늘 배운 내용 중 기억에 남는 개념은?”
  * “클래스를 사용하니 어떤 점이 편했나요?”
  * “다음 수업에서 객체 간 관계를 어떻게 연결할 수 있을까요?”

* 예고편: **“다음 시간에는 클래스와 클래스가 대화하는 방법을 배워볼 거예요! (객체 간 상호작용)”**

