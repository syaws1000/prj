# 🌱 Spring Boot + AJAX 연동 CRUD 예제 학습 교안


## 1. 🎯 주의 집중 끌기 및 학습 연결성 제공 (Gain Attention / A - Attention)

**💡 질문:**
“화면 전환 없이 데이터를 추가/수정/삭제할 수 있다면 얼마나 편리할까요?”

**🧠 활동 제안:**
*‘새로고침이 지겨운 사람 모여라!’ 1분 토크쇼*
→ 비동기(AJAX) 방식과 새로고침 방식의 비교 영상 짧게 보여주기.

**🎉 유머 요소:**
“이젠 'F5' 키에게도 휴식을 줘야 할 시간입니다.”

---

## 2. 🧭 학습 목표 (Inform Learners of Objectives / R - Relevance)

**📌 오늘의 목표!**

* Spring Boot와 jQuery AJAX를 연동하여 CRUD를 처리할 수 있다.
* Controller, Service, DAO 계층 구조를 이해하고 사용할 수 있다.
* 클라이언트에서 비동기적으로 요청하고 결과를 처리할 수 있다.

**🧠 학습 포인트 공유:**

> “오늘 수업 끝나면, 여러분은 *리얼* 개발자처럼 화면을 새로고침 없이 데이터도 만들고, 수정도 하고, 삭제도 합니다!”

---

## 3. 🕹 선수 학습 상기 및 실생활 연결하기 (Stimulate Recall / R - Relevance)

**🧠 복습 퀴즈:**
“Controller는 뭐 하는 친구였더라? Service는 왜 나뉘어 있을까요?”
→ 미니 퀴즈 3문제, Kahoot 또는 O/X 카드 활용

**📌 실생활 예시 연결:**
“스마트폰에서 게시글 수정할 때, 전체 페이지가 리로드 되던가요?”
→ AJAX가 실제 앱/웹에서 어디서 쓰이는지 사례로 보여주기 (인스타 댓글, 쇼핑몰 장바구니 등)

---

## 4. 🧠 주요 개념/핵심 키워드 (Present Content / C - Confidence)

**💎 최고의 암기법 제시:**

| 개념                | 암기 키워드             | 기억팁                  |
| ----------------- | ------------------ | -------------------- |
| `@RestController` | **REST한 컨트롤러**     | 화면 대신 데이터만 보내주는 컨트롤러 |
| `@ResponseBody`   | **JSON 응답 바디**     | 응답을 HTML이 아닌 JSON으로! |
| `$.ajax()`        | **자바스크립트의 특급 배달부** | 서버에게 몰래 메시지 보내기      |

**💡 의문 유도:**
“Controller에서 바로 DB에 저장하면 안 되나요?”
→ 힌트: “누가 중간에서 조율하지 않으면 일이 꼬이기 쉬워요\~” (Service 설명 유도)

---

## 5. 🔍 학습 목표별 탐구형 학습 (Provide Learning Guidance / C - Confidence)

**🧠 주제별 탐구 유도 질문:**

* “왜 비동기 통신에서는 `contentType`과 `dataType`을 명시할까?”
* “PUT과 POST 방식의 차이는 뭘까?”

**💬 힌트 제공:**

* “POST는 새 친구 소개, PUT은 옛 친구 변경!”
* “AJAX가 말을 잘 전하려면 정확한 포맷을 알려줘야 해요!”

**📁 학습 시나리오 실습:**

* “회원 정보 등록/조회/수정/삭제” 미니 프로젝트 구조 설계 → 조별 혹은 개별 탐구

---

## 6. 🧑‍🤝‍🧑 실습 활동 및 협력 학습 유도 (Elicit Performance / A - Attention, S - Satisfaction)

**🧪 실습 주제:**
`/member`로 CRUD 구현

* \[POST] `/member` → 회원 추가
* \[GET] `/member/list` → 전체 목록
* \[PUT] `/member` → 수정
* \[DELETE] `/member/{id}` → 삭제

**💬 협력 미션:**
짝을 이뤄 “나는 Controller, 너는 AJAX 개발자!” 역할 나눔 협동 실습

**🎉 웃음포인트:**
“Controller가 AJAX한테 메시지 안 받으면, 싸운 거야? 확인해봐\~ 😅”

---

## 7. 📝 단계별 피드백 제공과 자기 평가 기회 (Provide Feedback / C - Confidence)

**🧠 자기 점검 질문:**

* “AJAX 요청이 실패했다면 어디서부터 점검해야 할까?”
  → 힌트: “URL, 메서드, JSON 포맷, 서버 응답 로그!”

**✅ 미션 후 확인 시트:**

* 각 단계별 로그 출력, 콘솔 확인, alert 출력 등으로 결과 점검

---

## 8. 🧪 수행 평가 및 피드백 제공 (Assess Performance / S - Satisfaction)

**📋 평가 방식:**

* 실습 완료 후 각자 기능별 코드 리뷰
* 서로 코드 설명하면서 오류 찾기

**📢 피드백 팁:**

> “성공한 AJAX도 멋지지만, 실패했을 때 원인을 찾는 당신은 이미 고수!”

---

## 9. 🔄 학습 전이 강화와 실제 문제 적용 활동 (Enhance Retention / S - Satisfaction)

**🚀 실무 전이 과제:**

* “쇼핑몰 상품 관리”, “학생 출결 관리”, “댓글 시스템” 중 하나 선택해 CRUD 적용
* 팀별 주제 선정 후 프로젝트 시작

**🧠 실제 문제 예시 제시:**

> “관리자가 상품을 수정하고 나면, 목록이 바로 갱신되어야 하지 않을까요?”

---

## 10. 🔍 학습 반성 및 향후 학습 준비 (Future Learning / S - Satisfaction, A - Attention)

**💬 회고 질문:**

* “오늘 내가 가장 많이 배운 개념은?”
* “에러가 났을 때, 나는 어떤 접근으로 해결했는가?”

**📘 다음 학습 안내:**

* React나 Vue.js 등 **SPA와 AJAX 연계**
* Axios vs jQuery 비교 실습

---

## ✅ 학습자와 공유할 핵심 요약 (학습자용 강조 내용)

> ### 오늘의 핵심 미션:
>
> 비동기 통신으로 화면을 리로드하지 않고 데이터를 자유롭게 주고받는 시스템 만들기!

> ### 꼭 기억하자!
>
> * `@RestController`와 `@ResponseBody`는 JSON 친구
> * `$.ajax()`는 몰래 서버에게 말 거는 법
> * URL/Method/Headers/JSON 포맷을 꼭 확인하기!

> ### 💬 오늘의 유머로 복습!
>
> “Controller: 누가 AJAX 보냈어?
> AJAX: 저요, JSON이랑 같이요! 📦”
