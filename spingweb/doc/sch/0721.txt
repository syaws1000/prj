
## 🐍 파이썬 조건문과 반복문 교안

---

### 1. 🧲 주의 집중 끌기 및 학습 연결성 제공 (Gain Attention / ARCS-A)

* ❓의문 제기:
  “로봇청소기가 스스로 장애물을 피해 다니는 원리는 뭘까요? 그것도 반복해서요!”

* 😄흥미 요소:
  “조건을 잘못 짜면 청소기가 계속 벽에 박아요. 우리도 그런 코드를 만들 수 있어요(?)... 아니, 안 만들게 해드릴게요.”

* 🎯ARCS 연결성(Attention & Relevance):
  "게임, 챗봇, 자율주행 등 거의 모든 프로그램엔 조건문과 반복문이 꼭 쓰여요!"

---

### 2. 🎯 학습 목표 (Inform Learners of Objectives)

* 조건문(`if`, `elif`, `else`)의 구조와 동작을 이해하고 작성할 수 있다.
* 반복문(`for`, `while`)의 구조를 이해하고 다양한 상황에 적용할 수 있다.
* 조건과 반복의 조합을 활용하여 간단한 자동화 로직을 작성할 수 있다.

---

### 3. 🔄 선수 학습 상기 및 실생활 연결하기 (Stimulate Recall / ARCS-R)

* “숫자 비교 기억나죠? `10 > 3`은 True!”
* “청소기가 ‘더럽다 -> 닦자’, ‘깨끗하다 -> 이동하자’ 이렇게 조건 따라 행동해요.”

---

### 4. 🧠 주요 개념/핵심 키워드를 최고의 암기법에 의한 제시 (Present Content / ARCS-C)

| 개념      | 설명              | 기억법                       |
| ------- | --------------- | ------------------------- |
| `if`    | 조건이 맞으면 실행      | “**이프(IF) 말고 이거 실행해**!”   |
| `else`  | 조건이 안 맞으면 실행    | “**엘사(else)는 반대 방향 눈보라**” |
| `elif`  | 여러 조건 중간 판단     | “**엘리베이터 중간 정차(elif)**”   |
| `for`   | 정해진 횟수 반복       | “**포문은 for(몇 번)**”        |
| `while` | 조건이 True인 동안 반복 | “**와\~일 때만 반복!**”         |

---

### 5. 🔍 학습 목표별 탐구형 학습 (Provide Learning Guidance)

* ❓질문 유도형:

  * “만약 사용자가 ‘나가기’를 입력할 때까지 반복하게 하려면?”
  * “for문과 while문의 차이, 언제 어떤 걸 써야 할까요?”

* 💡힌트:

  * “조건이 언제 끝날지 모르겠다면? → while!”
  * “딱 반복 횟수가 보인다면? → for!”

---

### 6. 💻 실습 활동 및 협력 학습 유도 (Elicit Performance / ARCS-S)

* 🧪실습 예제:

  * \[조건문] 사용자에게 나이를 입력받고 "성인"인지 "미성년자"인지 출력
  * \[반복문] 1\~10까지 숫자를 더해서 총합 출력
  * \[조건+반복] 사용자가 "종료" 입력 시까지 계속 질문 받기

* 👥협업 활동:

  * “똑같은 동작을 세 가지 방식으로 풀어보기” 팀 대결
  * “조건문 만화 그리기” 팀 과제: if-else를 캐릭터로 표현!

---

### 7. 🧭 단계별 피드백 제공과 자기 평가 기회 (Provide Feedback)

* ✅피드백 예시:

  * “조건문의 들여쓰기 오류가 자주 보이네요. 파이썬은 들여쓰기 생명!”
  * “조건 순서를 바꾸면 출력이 달라질 수도 있어요. 순서를 바꿔보세요.”

* 🪞자기 점검:

  * 내가 만든 반복문이 무한루프는 아닌지 확인해보기
  * “조건이 참일 때만 실행되는가?” 체크리스트 제공

---

### 8. 📊 수행 평가 및 피드백 제공 (Assess Performance)

* 🔍미션: 아래 문제 중 2개 이상 해결

  1. 1부터 100까지의 숫자 중 짝수의 합을 구해보자.
  2. 사용자에게 비밀번호를 계속 입력받되, “exit” 입력 시 종료.
  3. 가위바위보 게임 만들기 (1인용 vs 컴퓨터)

* 📩코드 리뷰 피드백:

  * 로직의 정확성 + 가독성 + 조건 처리 방식 피드백

---

### 9. 🚀 학습 전이 강화와 실제 문제 적용 활동 (Enhance Retention and Transfer)

* 💡실무 연결:

  * “ATM에서 ‘출금’, ‘입금’, ‘잔액조회’ 반복 처리할 때 어떤 구조를 써야 할까?”
  * “게임에서 ‘체력 0이면 게임오버’ 로직은 어떻게 구현할까?”

* 🧩퀘스트:
  "나만의 자판기 프로그램 만들기"

  * 조건문으로 메뉴 선택, 반복문으로 계속 주문받기

---

### 10. 🔄 학습 반성 및 향후 학습 준비 (Enhance Future Learning)

* ✍️Reflection 카드 작성:

  * “오늘 가장 어려웠던 개념은?”
  * “조건문/반복문을 쓸 수 있는 나만의 아이디어는?”

* 📘예고:

  * “다음 시간에는 ‘함수’와 조건/반복을 조합해서 코드 재사용을 배워볼 거예요!”

