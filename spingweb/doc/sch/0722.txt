## 📘 파이썬 반복문 학습 교안

> 💡 주제: `for`, `while` 반복문, `range()` 및 `randrange()` 활용

---

### 1. 🧠 주의 집중 끌기 및 학습 연결성 제공 (Gagné: 주의집중 유도 | ARCS: A-주의)

**질문:**

> “아침에 눈을 몇 번이나 뜨고 감았을까요?”
> “게임에서 몬스터 10마리 잡으려면 똑같은 행동 몇 번 해야 할까요?”

**흥미 요소:**

* 💡 미션: "코딩으로 학교까지 5걸음 걷기! 어떻게 해야 할까?"

---

### 2. 🎯 학습 목표 (Gagné: 학습 목표 제시 | ARCS: R-관련성)

| 목표                          | 설명                                |
| --------------------------- | --------------------------------- |
| 반복문의 개념 이해                  | `for`, `while` 반복문을 구분하고 사용할 수 있다 |
| 반복 제어문 사용                   | `break`, `continue`의 작동 원리를 안다    |
| `range()`와 `randrange()` 사용 | 반복 범위 및 난수 범위를 제어할 수 있다           |
| 실생활 문제 해결                   | 반복문을 사용한 문제 해결 예시를 적용할 수 있다       |

---

### 3. 🔁 선수 학습 상기 및 실생활 연결 (Gagné: 선수학습 자극 | ARCS: R-관련성)

**이전 내용 복습 퀴즈 (OX 퀴즈)**

* `if`문은 반복을 위한 문장이다 (X)
* `range(5)`는 0부터 4까지 반복한다 (O)

**실생활 연결:**

* 양치질할 때 반복하는 횟수 = 반복문
* 지하철 정차역 안내 = for문

---

### 4. 🧩 주요 개념/핵심 키워드 제시 (Gagné: 자극 제시 | ARCS: C-자신감)

| 개념                         | 설명                    | 기억 암기 팁                  |
| -------------------------- | --------------------- | ------------------------ |
| `for`                      | 정해진 횟수 반복             | "포문은 포장된 만큼 돈다!"         |
| `while`                    | 조건이 참인 동안 반복          | "와일은 와이파이처럼 계속 연결되면 돈다!" |
| `range(start, stop, step)` | 숫자 범위 생성              | "range는 시작-끝-간격의 삼총사"    |
| `randrange(a, b)`          | a 이상 b 미만의 정수 중 랜덤 선택 | "랜덤하게 a\~b 사이 숫자 뽑기"     |

---

### 5. 🔍 학습 목표별 탐구형 학습 (Gagné: 학습 안내 제공)

**Q1. `for i in range(3)`은 몇 번 반복될까?**
**힌트:** 출력 전에 i가 무엇을 의미하는지 출력해보자.

```python
for i in range(3):
    print(f"i는 {i}입니다.")
```

**Q2. `while`문으로 “점심 뭐 먹지?” 3번 물어보려면?**

```python
count = 0
while count < 3:
    print("점심 뭐 먹지?")
    count += 1
```

**Q3. `randrange()`로 주사위 만들기**

```python
from random import randrange
dice = randrange(1, 7)
print(f"주사위 눈: {dice}")
```

---

### 6. 🤝 실습 활동 및 협력 학습 유도 (Gagné: 수행 유도)

**미션 활동:**
“랜덤한 숫자 맞히기 게임 만들기”

* 컴퓨터가 1\~10 사이 랜덤 숫자를 선택
* 사용자가 입력한 숫자가 맞을 때까지 반복

**협력학습:**

* 2인 1조로 각자 역할 분담 (코딩 vs 설명)

---

### 7. 🧭 단계별 피드백 제공과 자기 평가 기회 (Gagné: 피드백 제공)

* ❓ 코드가 무한루프 도는 이유는?
  → 조건이 언제 False 되는지 확인
* ✅ 출력이 예상과 다를 때, `print(i)`를 꼭 넣어서 체크!

**자기평가 예:**
✔️ 반복문 종류를 구분할 수 있다
✔️ `break`, `continue`를 이해하고 적절히 사용할 수 있다

---

### 8. 📝 수행 평가 및 피드백 제공 (Gagné: 수행 측정 및 피드백)

**평가 예제:**
아래 조건에 맞는 프로그램을 작성하세요.

* 1부터 10까지 홀수만 출력
* 사용자가 "종료"를 입력할 때까지 계속 물어보는 프로그램

**피드백 예:**

* 반복의 종료 조건을 잘 설정했는가?
* 사용자 입력을 올바르게 활용했는가?

---

### 9. 🔄 학습 전이 강화 및 실제 문제 적용 활동 (Gagné: 파지 및 전이 촉진 | ARCS: S-만족감)

**적용 활동:**

* **자기소개 봇** 만들기: 사용자 이름, 나이, 좋아하는 음식 등을 입력받아 반복 출력
* **계산기 만들기:** 덧셈 반복 계산, 종료 시 "끝났어요\~!"

