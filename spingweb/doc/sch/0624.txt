# Spring Boot 답변형 게시판 구축 교안

*(Gagné 9 Events ✕ Keller ARCS ⇒ 학습 체계 이론 적용)*

---

## 1. 주의 집중 끌기 및 학습 연결성 제공  *(Gagné #1 Gain Attention · ARCS A–Attention)*

* **도발 질문** : “게시글이 10만 개 넘으면 `SELECT * FROM board` 로도 버틸 수 있을까?!”
* **밈 & 웃음** : “한 페이지에 1만 개씩 보여 주는 건 ‘스압(스크롤 압사)’ 금지법 위반!”
* **즉시 체험 링크** : 미리 준비한 느려터진 ‘나쁜 예’ 데모 URL 공유 → 5 초 이상 로딩을 직접 경험하게 함.
* **연결 고리** : 스마트폰으로 SNS 피드 스크롤할 때 느끼는 ‘끊김’ → 페이징과 계층형 쿼리의 필요성에 자연스레 연결.

---

## 2. 학습 목표  *(Gagné #2 Inform Objectives · ARCS R–Relevance)*

| 목표 ID     | 도달 성취 수준 (SMART)                                                           |
| --------- | -------------------------------------------------------------------------- |
| **OBJ-1** | Spring Boot 3.x 프로젝트 생성 & 필수 의존성 설정을 **20 분** 안에 완수한다.                     |
| **OBJ-2** | JPA + `Pageable` 로 **페이징 API** 를 구현하고, 1 초 이하 응답을 확보한다.                    |
| **OBJ-3** | **Self-join**(Adjacency List) 방식으로 **계층형 SQL** 을 작성하여 댓글을 3단계 이상 트리로 출력한다. |
| **OBJ-4** | Multipart 업로드를 통해 **10 MB 이하 파일** 을 글에 첨부하고 DB·로컬 중 선택 저장한다.               |
| **OBJ-5** | CI/CD 파이프라인에서 3개 이상의 **JUnit 테스트** 를 통과시켜 ‘실무 적용’ 체크리스트를 통과한다.             |

> ### 학습자 공유용 강조
>
> **“오늘 목표 = SNS 속도로 + 카페 댓글 구조로 + 과제 제출용 파일 첨부까지 한 방!”**

---

## 3. 선수 학습 상기 및 실생활 연결하기  *(Gagné #3 Stimulate Recall · ARCS R)*

* **퀵 퀴즈** ( Kahoot / Mentimeter )

  1. *“HTTP GET 과 POST 의 차이?”*
  2. *“RDB 테이블에서 `parent_id` 가 가리키는 건 누구?”*
* **생활 비유** :

  * 페이징 → 관람객이 많을 때 엘리베이터 ‘순번표’
  * 계층형 쿼리 → 가족 족보표
  * 파일 첨부 → 택배 송장 + 박스(메타데이터 + 바이너리)

---

## 4. 주요 개념/핵심 키워드를 최고의 암기법에 의한 제시

*(Gagné #4 Present Stimulus · ARCS C–Confidence)*

| 키워드                     | 🔑 기억 암호 (웃음 포함)                                 |
| ----------------------- | ------------------------------------------------ |
| **Pageable**            | **“페이지요! 밥은 20줄에 한 끼!”** – 한 번에 20줄만 가져오자        |
| **Self-Join**           | **“나에게 반했다, parent\_id=*me***” – 자신을 참조해 계보를 이룬다 |
| **Multipart**           | **“택배맨 Mr. Multipart”** – 헤더에 물품명, 바디에 짐 싣기      |
| **Content-Disposition** | **“옷걸이(tag)=옷(파일)”** – 헤더가 파일 이름을 걸어 둔다          |
| **N+1 문제**              | **“떡볶이 1개 시켰는데 배달비 N번”** – 즉시로딩 대신 fetch join    |

> **TIP 암기법** : 스터디원과 “웃긴 라임 퀴즈” 대결 → 최종 우승자에게 치킨 쿠폰 🎉

---

## 5. 학습 목표별 탐구형 학습  *(Gagné #5 Provide Guidance · ARCS C)*

### OBJ-1 프로젝트 부트업

* **의문점** : “Gradle vs Maven, 무엇을 골라야 CI 빌드가 빠를까?”
* **힌트** : ‘dependency-locking’ 키워드를 찾아보세요.
* **Check-in** : 프로젝트 구조 스샷을 Discord #show-your-workspace 채널에 자랑!

### OBJ-2 페이징 API

* **의문점** : “`SELECT COUNT(*)` 는 언제 호출돼?”
* **힌트** : `Page<T>` 내부 흐름을 디버깅 모드로 열어보라.
* **도전 과제** : 10만 건 Mock 데이터 insert → 500 ms 목표.

### OBJ-3 계층형 SQL

* **의문점** : “트리 깊이 무제한이면 조회 성능은?”
* **힌트** : ‘CTE WITH RECURSIVE’ 와 ‘쿼리 캐싱’ 키워드를 비교.

### OBJ-4 파일 첨부

* **의문점** : “DB BLOB vs 로컬 FS, 언제 무엇을 쓸까?”
* **힌트** : ‘백업 정책’ 과 ‘CDN 연동’ 체크리스트 작성.

### OBJ-5 테스트 & 배포

* **의문점** : “게시판 글 쓰기 테스트에 MockMvc와 RestAssured 차이는?”
* **힌트** : ‘fluent API’ 검색, 팀이 이해하기 쉬운 쪽 선택.

---

## 6. 실습 활동 및 협력 학습 유도  *(Gagné #6 Elicit Performance · ARCS C + S)*

| Sprint            | 미션                                   | 페어/모브 규칙                      |
| ----------------- | ------------------------------------ | ----------------------------- |
| **Sprint 1 (1h)** | CRUD 엔드포인트 생성 (`/posts`, `/replies`) | 랜덤 짝꿍 페어 – 15 분마다 드라이버/내비 교대  |
| **Sprint 2 (1h)** | 페이징 + 검색 조건 필터                       | ‘코드리뷰 로또’ – PR 리뷰에 웃긴 이모지 달기  |
| **Sprint 3 (1h)** | 댓글 트리 & 대댓글 UI                       | Figma 화이트보드로 구조 스케치 후 구현      |
| **Sprint 4 (1h)** | 파일 첨부 & 썸네일 생성                       | 모브 프로그래밍 – 실패하면 다 같이 벌러덩 스트레칭 |

---

## 7. 단계별 피드백 제공과 자기 평가 기회  *(Gagné #7 Provide Feedback)*

* **Bot CI** : PR 올리면 GitHub Actions 가 코드 스타일 + 테스트 자동 코멘트.
* **팝퀴즈** : 각 단계 종료 직전 Kahoot 퀴즈 → 틀리면 ‘밈 벌칙 이모지’ 프로필 1일 착용.
* **자기 체크리스트** :

  1. “오늘 새로 배운 SQL 키워드 3개 적기”
  2. “30줄 이하 리팩터링 성공 여부”
  3. “웃음 포인트 🤣 를 몇 번 만들었나?”

---

## 8. 수행 평가 및 피드백 제공  *(Gagné #8 Assess Performance · ARCS S)*

| 평가 항목                            | 배점 | 피드백 방식                 |
| -------------------------------- | -- | ---------------------- |
| 기능 완성도 (CRUD, 페이징, 계층, 첨부)       | 40 | 코드리뷰 + 시연 데모           |
| 코드 품질 (N+1, 예외 처리, 테스트 커버리지)     | 30 | SonarLint 리포트 + 튜터 코멘트 |
| 협업 & 문서화 (README, API Spec, ERD) | 20 | 동료 피드백 · 점수 평균         |
| 창의/유머 요소 (UI 이스터에그, 밈 활용)        | 10 | ‘웃음지수’ 현장 투표           |

---

## 9. 학습 전이 강화와 실제 문제 적용 활동  *(Gagné #9 Enhance Retention & Transfer · ARCS S)*

1. **실무 상황 롤플레이** : PM 역할 → “파일 100 MB 업로드 요구 사항이 추가됐어요!” 팀이 즉석 회의 후 해결책 설계.
2. **기술 스택 비교 토론** : “게시판, RDB vs NoSQL 계층형 컬렉션 중 어느 쪽?” – 찬반 나뉘어 라이트닝 토론.
3. **포트폴리오 업로드 챌린지** : 구현 결과를 개인 GitHub Page/Velog 에 게시 → 서로 ‘좋아요’ 릴레이.

---

## 10. 학습 반성 및 향후 학습 준비

* **3-줄 회고** *(Liked · Learned · Lacked)* 를 Notion 템플릿에 기록.
* **다음 스텝 제안**

  1. *“WebSocket 알림으로 실시간 댓글 알림 붙여 보기”*
  2. *“S3 + CloudFront 로 첨부 파일 CDN 전환”*
****긍정 의례** : 끝맺음 파티—‘버그 1등’/‘성능왕’/‘웃음 제조기’ 시상 & 치맥 사진 인증.

---

####📌 학습자와 공유할 수 있는 내용 (강조)

> 1. **“오늘 배운 핵심 : ‘빠른 피드백 + 작은 승리’가 개발 속도를 끌어올린다!”**
> 2. **암기법 포스터** : Pageable/Multipart/CTE 라임 카드 PDF 업로드 예정.
> 3. **라이브 링크** : 느린 vs 빠른 게시판 데모 URL 두 개, 직접 비교하며 복습.
> 4. **체크리스트** : ‘게시판 배포하기 D-7’ 준비용 To-Do 스프레드시트 공유.
> 5. **커뮤니티** : Discord `#help-me-I-am-stuck` 채널 24h 열려 있으니 질문을 밈과 함께! 🤖
