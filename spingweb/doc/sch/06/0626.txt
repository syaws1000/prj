# 📘 Spring Boot 게시판 첨부파일 처리 교안

> **수업 주제**: Spring Boot 게시판 구현에서 첨부파일 처리 기능 학습
> **적용 이론**: Gagné의 9가지 수업사태 + Keller의 ARCS 동기이론
> **대상**: 다양한 학습 수준의 웹 개발 학습자
> **학습 환경**: Spring Boot, JSP, MultipartFile, MyBatis (또는 JPA), HTML Form

---

## 1. 🧠 주의 집중 끌기 및 학습 연결성 제공 (Gagné #1 / ARCS Attention & Relevance)

### 💡 질문으로 시작하기:

> "여러분, 게시판 글을 썼는데 **이미지나 PDF 파일이 첨부되지 않는다면**, 얼마나 답답할까요?"

### 🎯 흥미 요소:

* 실제 블로그/카페 게시판 사례 보여주기 (Naver, Daum 등)
* “한 유저가 하루에 10번이나 게시글을 올리는데, 매번 고양이 사진을 첨부해요. 그럼 서버는 어떻게 감당할까요?”

### 📌 강조:

* **"오늘은 여러분이 고양이 사진을 안전하게 서버에 보관하게 만드는 마법사가 되는 날입니다!"**

---

## 2. 🎯 학습 목표 제시 (Gagné #2 / ARCS Relevance & Confidence)

> ✔ 첨부파일 업로드와 다운로드 기능의 작동 원리를 이해한다.
> ✔ HTML form과 Spring Controller에서 파일 처리 흐름을 구현한다.
> ✔ MultipartFile을 활용해 서버에 파일을 저장하고 DB에 파일 정보를 등록한다.
> ✔ 실무형 게시판 프로젝트에 적용할 수 있는 파일 업로드/다운로드 로직을 완성한다.

---

## 3. 🧠 선수 학습 상기 및 실생활 연결하기 (Gagné #3 / ARCS Relevance)

### ❓의문 제기:

> “form 태그 안에 `type="file"`만 넣으면 되는 거 아냐?”

### 🔄 연결 개념:

* HTML `<form enctype="multipart/form-data">` 구조
* Spring Controller의 `@RequestParam MultipartFile`
* application.properties에 업로드 경로 지정

### 💡실생활 비유:

* 택배 상자를 보내는 과정과 유사:
  **물건 포장 → 주소 작성 → 택배사 접수 → 창고 저장 → 수취인에게 전달**

---

## 4. 🧠 핵심 키워드 암기 전략 (Gagné #4 / ARCS Confidence)

| 키워드                             | 의미              | 암기법(웃음포인트 포함)      |
| ------------------------------- | --------------- | ------------------ |
| `MultipartFile`                 | 여러 개의 파일을 받는 객체 | "멀티(많은) 파\~잇!(파일)" |
| `enctype="multipart/form-data"` | 파일 전송 허용 방식     | "엔터키 치면 데이터가 간다\~" |
| `uploadPath`                    | 저장 경로 설정        | “업로드는 집 주소부터!”     |
| `@RequestParam`                 | 요청값 받는 방식       | "파라미터 주세요\~ 🙏"    |

---

## 5. 🕵️‍♀️ 목표별 탐구형 학습 (Gagné #5 / ARCS Confidence)

### 🎯 목표 1: HTML에서 파일 업로드 설정

> 💡질문: form 태그에 어떤 속성을 추가해야 파일이 전송될까?

🔍 힌트:

```html
<form method="post" enctype="multipart/form-data">
```

---

### 🎯 목표 2: Spring Boot에서 파일 받기

> 💡질문: 파일을 받는 자바의 타입은 무엇일까?

🔍 힌트:

```java
public String upload(@RequestParam MultipartFile file) { ... }
```

---

### 🎯 목표 3: 파일 저장 및 DB에 정보 등록

> 💡질문: 파일은 어디에 저장되고, DB에는 무엇이 저장되나요?

🔍 힌트:

* 파일은 `/resources/upload/` 또는 외부 경로
* DB에는 `파일명`, `경로`, `업로드일자`, `파일크기`

---

## 6. 🛠️ 실습 활동 및 협력 학습 유도 (Gagné #6 / ARCS Satisfaction)

### 실습 1. 파일 업로드 화면 만들기

👉 `upload.jsp` 페이지에 form 구성하기

### 실습 2. 업로드 컨트롤러 작성

👉 `UploadController.java`에서 파일을 저장하는 메서드 만들기

### 실습 3. DB 저장 로직 작성

👉 `uploadService.fileInsert()`에서 파일 메타데이터 저장

### 실습 4. 업로드한 파일 목록 보여주기

👉 JSP에서 업로드된 파일 리스트 출력 & 다운로드 링크 만들기

👨‍👧 **협력 학습 미션**:
짝을 지어 한 명은 업로드 담당, 한 명은 다운로드 페이지 담당 → 결과 교환!

---

## 7. 🔍 피드백과 자기평가 기회 제공 (Gagné #7)

### ❓ 자가진단 체크리스트:

* [ ] form 태그에 `enctype` 설정했나요?
* [ ] MultipartFile을 Controller에서 잘 받았나요?
* [ ] 파일이 서버에 저장되었나요?
* [ ] DB에 파일 정보가 저장되었나요?
* [ ] 다운로드가 잘 작동하나요?

### 💬 간단 피드백 질문:

> “파일이 저장은 되는데 다운로드가 안 돼요. 어떤 부분을 먼저 점검해야 할까요?”

---

## 8. 📝 수행 평가 및 피드백 제공 (Gagné #8)

### ✔ 미니 프로젝트:

**‘우리 반 공지 게시판 만들기’**

* 제목/내용/첨부파일 포함 게시글 등록
* 첨부파일 다운로드 처리
* DB 연동

### ✔ 평가 기준:

| 항목           | 배점  | 평가 기준         |
| ------------ | --- | ------------- |
| 파일 업로드 동작 여부 | 30점 | 실제 저장 여부      |
| 다운로드 구현      | 30점 | 파일 링크 및 응답 처리 |
| DB 연동 처리     | 20점 | 파일 메타데이터 저장   |
| UI 디자인       | 10점 | 부트스트랩 활용      |
| 협력 및 발표      | 10점 | 팀 활동 피드백      |

---

## 9. 🔄 학습 전이와 실전 문제 적용 (Gagné #9 / ARCS Satisfaction)

### 🛠 실전 문제:

> "취업 사이트 게시판에 이력서 PDF 파일을 첨부하도록 처리하려면 어떻게 응용해야 할까요?"

### 🚀 연계 프로젝트 제안:

* 이력서 제출 폼 구현
* 포트폴리오 게시판에 이미지/파일 업로드 구현
* AI 이력서 분석기 연결해보기 (깊이 확장)
