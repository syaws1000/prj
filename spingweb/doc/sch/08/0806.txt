## **🐍 파이썬으로 오라클 DB 정복하기: 여러분의 첫 데이터베이스 연동 프로젝트 🚀**

안녕하세요, 미래의 데이터 마법사 여러분\! 🧙‍♀️

혹시 여러분이 즐겨 하는 게임의 캐릭터 정보나, 넷플릭스에서 '내가 찜한 콘텐츠' 목록이 어떻게 저장되는지 궁금한 적 없나요? 
그 비밀의 열쇠는 바로 **데이터베이스**에 있습니다. 이번 시간에는 파이썬이라는 강력한 도구로 오라클 데이터베이스의 문을 열고, 
데이터를 자유자재로 다루는 방법을 배워볼 거예요. 지루한 이론은 최소화하고, 여러분이 직접 문제를 해결하며 실무 능력을 키울 수 있도록 안내하겠습니다. 준비되셨나요? 자, 함께 출발해 봅시다\!

-----
분석 및 예측을 위한 자료 : springboot 웹 프로그램에서 DB로 저장(java)
DB 저장된 내용 ==> python에서 웹(flask)을 이벤트(클릭..) ==> python프로그램의 예측 알고리즘으로 수행 
==> 그 결과를 DB에 할당.
최종적으로 DB에 예측된 데이터 ==> ajax로 데시보드를 통해서 여러가지 chart로 표현..




### **1. (주의 집중) 어서 와, DB 연동은 처음이지? 🤔**

> **(가네 1단계: 주의 획득 / 켈러: 주의 Attention)**

혹시 이런 상상 해보셨나요? 내가 만든 파이썬 프로그램에 오늘 배운 단어, 읽은 책, 혹은 게임 점수를 기록했는데,
 컴퓨터를 끄고 나니 모두 사라져 버리는 허무한 경험\! 😭

**\#\# 학습자와 공유할 수 있는 내용 \#\#**

> **질문 🧐:** 내 프로그램의 소중한 데이터를 영구적으로 저장하려면 어떻게 해야 할까요? 
파일에 저장하는 것보다 더 똑똑하고, 안전하고, 빠른 방법은 없을까요?
>
> **힌트 😉:** 은행은 어떻게 수많은 사람의 계좌 정보를 절대 잃어버리지 않을까요?
 쇼핑몰은 어떻게 수백만 개의 상품 재고를 실시간으로 관리할까요? 그들이 사용하는 '거대한 전자 금고'를 우리도 이용해 보는 거예요\!
>
> **오늘의 미션:** 파이썬으로 이 '전자 금고(데이터베이스)'에 접속해서 데이터를 가져오는 탐험을 시작합니다\! 이 기술 하나면 여러분의 프로그램이 '기억력'을 갖게 된답니다. "오, 이제 내 프로그램도 똑똑해지겠군\!" 하고 기대해주세요\!

-----

### **2. (학습 목표) 이 수업이 끝나면, 당신은... ✨**

> **(가네 2단계: 학습 목표 제시 / 켈러: 관련성 Relevance)**

뜬구름 잡는 이야기는 그만\! 이 시간이 끝나면 여러분이 '실제로' 할 수 있게 될 것들을 명확히 알려드릴게요.

**\#\# 학습자와 공유할 수 있는 내용 \#\#**

  * **설명할 수 있다\!** 파이썬과 데이터베이스가 어떻게 '대화'하는지 그 원리를 친구에게 쉽게 설명할 수 있습니다. (마치 레스토랑에서 손님과 주방장이 웨이터를 통해 소통하는 것처럼요\!)
  * **연결할 수 있다\!** 파이D썬 코드를 이용해 오라클 데이터베이스에 성공적으로 접속할 수 있습니다.
  * **가져올 수 있다\!** 간단한 명령(SQL)으로 데이터베이스에 저장된 데이터를 파이썬으로 불러올 수 있습니다.
  * **자신감을 얻는다\!** 데이터 기반 애플리케이션 개발의 첫걸음을 떼며, "나도 할 수 있다\!"는 자신감을 얻게 됩니다.

-----

### **3. (선수 학습 상기) 우리에게는 이미 무기가 있다\! ⚔️**

> **(가네 3단계: 선수 학습 자극 / 켈러: 관련성 Relevance)**

"저는 파이썬 초보인데 괜찮을까요?" 걱정 마세요\! 여러분은 이미 필요한 기본 지식을 갖추고 있습니다.

**\#\# 학습자와 공유할 수 있는 내용 \#\#**

> **질문 🧐:** 파이썬에서 변수(`my_age = 20`)는 왜 쓰나요? `print()` 함수는 무슨 역할을 하죠?
>
> **힌트 😉:** 변수는 데이터를 잠시 담아두는 '바구니'였고, `print()`는 그 바구니 안의 내용물을 '눈으로 확인'하는 도구였죠. 데이터베이스 연동은 이 바구니를 '영원히 기억하는 마법 상자'로 업그레이드하는 것과 같아요. 여러분이 아는 `print()`는 마법 상자에서 꺼낸 보물을 확인하는 데 아주 유용하게 쓰일 겁니다\!

-----

### **4. (핵심 개념 제시) 최고의 암기법: '레스토랑 비유' 🍽️**

> **(가네 4단계: 자극 제시 / 5단계: 학습 안내)**

복잡한 용어 때문에 포기하면 안 되죠\! 파이썬과 오라클의 만남을 '레스토랑 방문'에 비유해 볼게요. 이거 하나면 끝납니다\!

**\#\# 학습자와 공유할 수 있는 내용 \#\#**

| 레스토랑 비유 | 실제 기술 용어 | 설명 |
| :--- | :--- | :--- |
| **손님 (나)** | **파이썬 프로그램** | 데이터를 요청하는 주체입니다. "스테이크 주세요\!" |
| **웨이터** | **`oracledb` 라이브러리** | 손님(파이썬)의 주문을 주방(DB)에 전달하고, 음식을 가져다주는 중간 역할\! |
| **레스토랑 주소** | **DSN (접속 정보)** | `id/pw@ip:port/sid` - 웨이터가 찾아갈 정확한 주소\! |
| **주문서 (메모장)** | **커서 (`cursor`)** | 주문(SQL)을 적고, 결과를 받아 적는 깔끔한 메모장입니다. |
| **주문 내용** | **SQL 쿼리문** | `"SELECT * FROM ..."` - "메뉴판에서 제일 잘나가는 거 주세요\!" 같은 구체적인 요청. |
| **주방** | **오라클 데이터베이스** | 주문을 받아 실제 요리(데이터 처리)를 하는 곳입니다. |
| **완성된 요리** | **결과 데이터 (튜플/리스트)** | 주방에서 나온 맛있는 스테이크\! 우리가 눈으로 볼 수 있는 결과물입니다. |

> **웃음 포인트 😄:** 웨이터(`oracledb`) 없이 주방(DB)에 소리치면 어떻게 될까요? 아마 주방장은 화를 내거나 무시하겠죠? 코딩 세계도 예의가 필요하답니다\!

-----

### **5. (탐구 학습) 직접 탐험가가 되어보자\! 🧭**

> **(가네 5단계: 학습 안내)**

이제 직접 코드를 한 줄 한 줄 탐험할 시간입니다. 각 단계마다 질문을 드릴 테니, 스스로 답을 찾아보세요\!

**\#\# 학습자와 공유할 수 있는 내용 \#\#**

**Mission 1: '웨이터'(`oracledb`)를 고용하자\!**

> **질문:** 파이썬에 기본적으로 없는 기능(라이브러리)을 사용하려면 어떻게 해야 할까요?
> **힌트:** 새로운 스마트폰 앱을 설치할 때 '앱 스토어'에 가죠? 파이썬의 앱 스토어는 `pip` 입니다\!
> **탐구 코드:** 터미널이나 명령 프롬프트에 `pip install oracledb` 입력해보기

**Mission 2: 레스토랑(DB)에 찾아가자\!**

> **질문:** 웨이터에게 레스토랑 주소, ID, 비밀번호를 어떻게 알려줄까요?
> **힌트:** `connect()`라는 함수가 있지 않을까요? 레스토랑 비유의 '레스토랑 주소' 형식을 참고해보세요\!
> **탐구 코드:**
>
> ```python
> import cx_Oracle
> dsn = "여러분의_DB_주소" # 예: "localhost:1521/xe"
> conn = cx_Oracle.connect(user="hr", password="hr", dsn=dsn)
> print("연결 성공! 버전:", conn.version)
> ```

**Mission 3: 주문(SQL)하고 결과 받기\!**

> **질문:** 연결은 했는데, 이제 어떻게 주문을 넣고 음식을 받아올까요? '주문서'와 '주문하기'가 필요해요\!
> **힌트:** 레스토랑 비유에서 '커서'와 '쿼리 실행'에 해당하는 객체와 함수는 무엇일까요?
> **탐구 코드:**
>
> ```python
> cursor = conn.cursor() # 주문서 준비!
> cursor.execute("SELECT first_name FROM employees WHERE employee_id = 100") # 주문!
> for row in cursor: # 완성된 요리(데이터) 하나씩 확인!
>   print("결과:", row)
> ```

-----

### **6. (실습) 동료와 함께\! '직원 정보'를 훔쳐보자\! 🕵️**

> **(가네 6단계: 수행 유도 / 켈러: 만족감 Satisfaction)**

이제 여러분이 직접 코드를 완성해볼 차례입니다. `employees` 테이블에서 원하는 정보를 가져와 보세요.

**\#\# 학습자와 공유할 수 있는 내용 \#\#**

**도전 과제:** 아래 코드의 `____` 부분을 채워서, `employees` 테이블의 모든 직원의 `이름(first_name)`과 `급여(salary)`를 출력하는 코드를 완성해 보세요.

```python
import cx_Oracle

# 1. DB 연결 정보 (여러분의 환경에 맞게 수정)
db_info = {
    'user': 'hr',
    'password': 'hr',
    'dsn': 'localhost:1521/xe'
}

# 2. DB 연결 및 커서 생성
conn = cx_Oracle.connect(**db_info)
cursor = conn.cursor()

# 3. SQL 쿼리 작성 (이 부분을 채워보세요!)
sql = "SELECT ____, ____ FROM employees"

# 4. 쿼리 실행 및 결과 가져오기
cursor.execute(sql)

print("== 직원 이름과 급여 목록 ==")
for name, salary in cursor:
    print(f"이름: {name}, 급여: ${salary}")

# 5. 연결 종료 (중요!)
cursor.close()
conn.close()
print("\n탐색 완료! 흔적을 지웠습니다. (연결 종료)")
```

> **협력 학습:** 만약 막히는 부분이 있다면? 옆자리 동료에게 "혹시 SQL 주문서 어떻게 쓰셨어요?" 라고 물어보세요\! 자신의 코드를 설명해주다 보면 막혔던 부분이 풀리기도 한답니다\!

-----

### **7. (피드백) 잘 가고 있나요? 중간 점검\!  checkpoints\! 📍**

> **(가네 7단계: 피드백 제공 / 켈러: 자신감 Confidence)**

**\#\# 학습자와 공유할 수 있는 내용 \#\#**

  * **성공적인 결과:** 위 코드를 실행했을 때, 아래와 비슷한 형식으로 직원들의 이름과 급여 목록이 쭉 출력되었나요?

    ```
    == 직원 이름과 급여 목록 ==
    이름: Steven, 급여: $24000
    이름: Neena, 급여: $17000
    ... (이하 생략)
    ```

  * **자기 평가:**

      * [ ] `import cx_Oracle`를 코드 맨 위에 작성했나요?
      * [ ] `connect()` 함수로 연결에 성공했나요? (에러 메시지가 뜨지 않았나요?)
      * [ ] `SELECT` 문에 `first_name`과 `salary`를 정확히 입력했나요?
      * [ ] **가장 중요\!** 모든 작업이 끝난 후 `cursor.close()`와 `conn.close()`로 뒷정리를 잘 했나요? (레스토랑에서 밥만 먹고 그냥 나가면 안 되겠죠? 😂)

-----

### **8. (수행 평가) 진짜 실력 발휘\! 미니 챌린지 🏆**

> **(가네 8단계: 수행 평가)**

이제 배운 것을 응용해볼 시간입니다. 여러분의 문제 해결 능력을 보여주세요\!

**\#\# 학습자와 공유할 수 있는 내용 \#\#**

**Mission:** `departments` 테이블에서, 부서 ID(`department_id`)가 90번인 부서의 이름(`department_name`)을 찾아 출력해 보세요\!

> **질문 🧐:** 모든 데이터를 가져오는 것이 아니라 '특정 조건'에 맞는 데이터만 가져오려면 SQL 문을 어떻게 바꿔야 할까요?
>
> **힌트 😉:** "메뉴판의 모든 메뉴"가 아닌 "스테이크만 주세요"라고 특정하려면 `WHERE` 라는 조건절을 사용해요. `WHERE department_id = 90` 과 같은 형식을 시도해 보세요\!

*(잠시 후 정답 코드를 함께 확인하며 피드백 제공)*

-----

### **9. (전이 강화) 이 능력, 어디에 써먹을 수 있을까? 🌍**

> **(가네 9단계: 파지 및 전이 향상 / 켈러: 만족감 Satisfaction)**

여러분은 오늘 단순히 코드 몇 줄을 배운 게 아닙니다. 무한한 가능성을 가진 '기술'을 얻은 것입니다\!

**\#\# 학습자와 공유할 수 있는 내용 \#\#**

  * **나만의 포트폴리오:** 내가 본 영화 목록과 별점을 기록하는 프로그램을 만들고, 데이터를 DB에 저장해보세요.
  * **미니 웹사이트:** 파이썬 웹 프레임워크(Flask, Django)와 연동하여 간단한 회원가입/로그인 기능을 구현할 수 있습니다.
  * **데이터 분석:** 공공데이터 포털의 데이터를 DB에 저장하고, 파이썬으로 분석하여 의미 있는 인사이트를 찾아낼 수 있습니다. (예: 우리 동네 날씨 데이터 분석)

> **상상해보세요\!** 여러분이 만든 프로그램이 사용자 데이터를 안전하게 저장하고, 필요할 때마다 꺼내 보여주는 모습을요. 정말 멋지지 않나요? 여러분은 이제 '데이터를 다루는 개발자'의 첫걸음을 내디딘 것입니다\!

-----

### **10. (학습 반성) 우리의 탐험을 돌아보며 🗺️**

> **(메타인지 및 향후 학습 준비)**

마지막으로, 오늘의 학습 여정을 되돌아보며 스스로를 칭찬하고 다음 단계를 준비해 봅시다.

**\#\# 학습자와 공유할 수 있는 내용 \#\#**

  * **오늘의 '아하\!' 순간:** 오늘 배우면서 "아하\! 이렇구나\!" 하고 무릎을 탁 쳤던 순간은 언제인가요?
  * **가장 어려웠던 점:** 어떤 부분이 가장 헷갈리고 어려웠나요? 그 이유는 무엇일까요?
  * **다음 스텝:** 오늘 우리는 데이터를 '읽기(`SELECT`)'만 해봤습니다. 그렇다면 데이터를 '쓰기(`INSERT`)', '수정하기(`UPDATE`)', '삭제하기(`DELETE`)'를 하려면 어떻게 해야 할까요? 다음 탐험의 주제는 바로 이것입니다\!

  
  