# 파일 다운로드..
1. 스프링에서 파일을 다운로드 처리하는 것은 특정한 controller에 요청값을 파일명을 전송하면,
	해당 파일을 stream으로 client에 전송하게 처리하는 것을 말한다.
2. 핵심적인 내용을 아래와 같은 객체와 속성/메서드에 의해서 처리되고 있다.
3. 처리 프로세스 별로 속성 이해
	1) 요청값 처리 
		http://localhost:5050/download?fname=다운할파일
	2) controller단 메서드 선언
		@GetMapping("download")
		public ResponseEntity<?> download(@RequestParam("fname") String fname)
	3) controller 클래스
		spring mvc 애플리케이션에서 파일 다운로드를 처리하는 역할을 한다. 클라이언트 서버에 저장된 파일을
		http(전송 규칙-웹화면에 최적화됨)를 통해 다운로드 할 수 있다.
	4) @Value("${user.upload4}") 
	   private String path; 
	   이 속성은 application.properties에서 user.upload4값을 주입받아 이 값은 서버에 저장된 파일들이
	   위치한 디렉토리 경로를 지칭하여 처리하게 도와 준다.
	5) @GetMapping("download")
		 이 어노테이션을 HTTP get 요청을 /download 앤드포인트에 매핑한다. 즉, /download url로
		 요청이 오면 이 메서드가 호출되어 파일을 다운로드 처리
	6) Paths.get(path).resolve(fileName).normalize() : 다운로드할 파일의 경로를 Path 객체로 생성한다.
	7) Resource resource = new FileSystemResource(filePath) : 파일을 나타내는 Reource 객체를 생성한다.
	8) if(!resource.exists())
		return ResponseEntity.noFound().build();
		요청한 파일이 존재하지 않으면 404 not Found 응답을 반환한다.
	9) String contentType = Files.probeContentType(filePath);
		파일의 확장자를 기반으로 파일의 MIME타입을 결정한다. 만약 MIME 타입을 찾을 수 없으면 application/octet-stream으로 기본설정한다.
	10) return ResponseEntity.ok()...
		파일이 존재하면 ResponseEntity를 생성하여 HTTP 200 ok 응답을 반환하고,
		파일의 contentType을 MediaType.parseMediaType(contentType)로 설정하고, 다운로드할 파일 이름을 Content-Dispositon
		헤더를 설정한다.
	    파일을 응답 본문에 설정하여 클라이언트가 파일을 다운로드할 수 있도록 합니다.
	    
		
		
		
		