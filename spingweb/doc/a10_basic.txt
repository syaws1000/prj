### **Spring Boot + MyBatis 연동 수업 커리큘럼**

#### 1. **화면단 처리**

* **화면 로딩**

  * 화면을 처음 로딩할 때, 클라이언트에 필요한 데이터를 서버에서 받아오는 방식 학습.
  * Spring Boot의 `@Controller`와 `@GetMapping`을 사용하여 기본 화면을 처리.
* **요청값 처리 (단일, 객체형)**

  * GET과 POST 방식의 요청을 처리하는 방법.
  * `@RequestParam`으로 단일 파라미터를 받는 방법.
  * `@ModelAttribute`와 `@RequestBody`를 사용하여 객체형 파라미터를 처리하는 방법.
* **모델데이터 처리**

  * `Model`, `ModelAndView` 객체를 이용해 데이터를 화면에 전달.
  * 서비스 계층에서 데이터를 받아와 화면에 출력할 데이터 준비.
* **뷰단 출력**

  * Thymeleaf, JSP와 같은 템플릿 엔진을 이용한 화면 출력.
  * 데이터 바인딩을 통해 모델 데이터를 뷰에 전달하고 출력.

#### 2. **DAO 처리 (SQL 구문에 따라)**

* **단일 리턴, 단일 매개변수**

  * MyBatis에서 단일 값을 리턴하는 SQL 쿼리 작성.
  * 예: `select` 문을 사용하여 특정 조건에 맞는 단일 데이터를 조회.
  * MyBatis의 `@Select` 어노테이션을 사용하여 SQL 쿼리와 매핑.
* **객체형 리턴, 다중 매개변수**

  * 객체형 리턴을 처리하는 방법.
  * 여러 개의 파라미터를 `@Param`을 사용하여 다중 매개변수로 처리하는 방법.
  * MyBatis XML 파일에서 `select`, `insert`, `update`, `delete` 구문 작성.
* **객체형 리스트 리턴, 객체형 매개변수**

  * 객체 리스트를 리턴하는 쿼리 작성.
  * 예를 들어, 특정 조건에 맞는 데이터를 여러 개 조회하고, `List<Object>`로 리턴 처리.
  * 객체형 매개변수를 이용해 조건을 동적으로 설정.

#### 3. **화면단 처리 / DAO 연동**

* **화면과 DAO 연결**

  * 화면에서 요청한 데이터를 서비스 계층을 통해 DAO로 전달.
  * `@Service`와 `@Autowired`를 사용하여 서비스와 DAO를 연결하고, 데이터 흐름을 처리.
  * AJAX 요청을 통해 비동기적으로 데이터를 받아오는 방법.
* **CRUD 처리 구현**

  * 게시글 등록, 수정, 삭제와 같은 CRUD 연동을 실습.
  * 화면에서 입력된 데이터를 DAO를 통해 DB에 처리하고, 결과를 화면에 반영.

#### 4. **주로 발생하는 에러에 대한 대응 방법**

* **MyBatis 및 Spring Boot에서 자주 발생하는 오류**

* **에러 핸들링**


#### 5. **실무 예제 진행 (Ajax)**

* **Ajax를 활용한 비동기 처리**

  * JavaScript와 jQuery를 사용하여 Ajax 요청을 서버로 보낸 후, 서버 응답을 받아 화면에 동적으로 처리.
  * 예: 게시글 목록을 비동기적으로 불러오고, 페이지 이동 없이 데이터를 갱신하는 예제.
* **Spring Boot와 Ajax 연동**

  * `@ResponseBody`를 사용하여 JSON 응답을 반환하고, JavaScript에서 이를 처리.
  * RESTful API와 Ajax를 통해 데이터를 주고받는 방식.

#### 6. **실무 예제 진행 (게시판)**

* **게시판 시스템 구축**

  * Spring Boot + MyBatis를 사용하여 게시판 시스템을 구현.
  * CRUD 기능 (글 작성, 조회, 수정, 삭제) 구현.
  * 페이지네이션 구현 (MyBatis의 `RowBounds`나 `PageHelper` 사용).
* **첨부파일 처리**

  * 게시판 글에 첨부파일 업로드 기능 추가.
  * 파일을 서버에 저장하고, DB에 경로를 저장하여 다운로드 링크 제공.