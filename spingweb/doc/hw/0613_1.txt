### ✅ \[객관식 문제 15문제] 

---

**1. 다음 중 개념적 데이터 모델링에 해당하는 활동은 무엇인가요?**
A. 정규화 수행
#B. ER 다이어그램 작성
C. 인덱스 설정
D. 테이블 스페이스 지정

---

**2. 다음 중 고객 정보를 테이블로 정의할 때 가장 적절한 기본키 후보는?**
A. 고객이름
B. 전화번호
C. 이메일
#D. 고객ID

---

**3. 다음 중 논리적 모델링 단계에 포함되지 않는 것은 무엇인가요?**
A. ERD 작성
B. 상세 속성 정의 ==> 컬럼, 엔티티(개체) ==> 테이블
C. 정규화
#D. 테이블 공간 할당

---

**4. Spring MVC 구조에서 브라우저 요청이 가장 먼저 도달하는 곳은?**
A. Service
B. DAO
#C. Controller
D. JSP View

url요청 ==> controller(요청값) ==> service(요청값) ==> dao(요청값, 결과리턴) 
==> service(결과리턴) ==> controller ==> 모델데이터설정(결과리턴)
==> view(모델데이터 출력)


**5. 아래 중 Service 클래스에서 담당하는 역할은 무엇인가요?**
A. 사용자 요청 처리 및 화면 출력
B. JSP 뷰 렌더링
#C. 비즈니스 로직 처리 및 DAO 호출
	요청값에 대한 조건으로 알고리즘 처리
	null ==> "", 키워드검색시 ==> %
	게시판 페이지 처리 알고리즘 등..
D. SQL문 직접 실행

---

**6. 물리적 모델링 단계에서 주로 수행되는 작업은?**
A. 엔티티 간 관계 정의
#B. 컬럼의 자료형과 제약조건 설정  : 물리적으로 실제 테이블을 만들 때, 사용하는 역할을 한다.
C. 도메인 개념 도출
D. 사용자 요구사항 수집

---

**7. 다음 중 `@Autowired(required=false)`가 의미하는 것은?**
	컨테이너에서 객체가 없으면 자동할당을 설정이 에러가 기본적으로 발생하여,
	정상적으로 기동을 할 수 없으나, 위 코드로 인해 컨테이너에서 객체가 없더라도
	에러를 방지시켜준다.
A. 반드시 빈(Bean)이 있어야 한다
B. 자동주입을 방지한다
#C. 빈이 없을 경우에도 에러가 발생하지 않는다
D. 명시적으로 객체를 주입한다는 의미이다

---

**8. DAO에서 처리하는 핵심 역할은 무엇인가요?**
A. 사용자와 직접 상호작용
B. JSP View에 데이터를 전달
#C. DB 접근 및 SQL 실행
D. 요청 URI 라우팅

mybatis framework에서는 해당 내용에 대한 틀 즉, interface로 메서드의 입력과 리턴값(sql)만
선언하면, 실제 객체를 자동을 생성하여 준다.
---

**9. 다음 중 ERD의 구성요소로 올바르지 않은 것은?**
A. 개체(Entity) ==> 테이블
B. 속성(Attribute) ==> 컬럼
C. 관계(Relationship) ==> 테이블간의 연관관계 설정...
#D. 객체(Object)

---

**10. 다음 코드의 역할은 무엇인가요?**

```java
@RequestMapping("customerList")
public String customerList(Customer sch, Model d) { Customer sch 요청값 + 모델
	d.addAttribute("cuList", service.getCustomerList(sch)); cuList 모델데이터 설정
	return "WEB-INF\\views\\a04_mvc\\a01_customerList.jsp"; 화면단 호출..
}
```

A. DAO에서 데이터를 가져오는 기능
#B. 고객 리스트를 jsp에 전달하는 컨트롤러 메서드
C. 고객 입력 폼을 보여주는 메서드
D. 고객을 삭제하는 메서드

---

**11. 아래 중 ER 모델링에서 '결혼하다'는 무엇으로 표현되나요?**
	엔티티     관계엔티티    엔티티 
	(남자)     (결혼하다)   (남자)
	ex) 쇼핑몰회원    구매하다  물건
	ex) 도서대출자    대출     도서
A. 엔티티
B. 속성
#C. 관계
D. 키

---

**12. 고객 테이블에서 customer\_seq 시퀀스를 사용하는 이유는?**
A. 고객 이름 중복을 방지하기 위해
#B. 자동 증가 고객 ID 생성을 위해
C. 고객 주소를 압축하기 위해
D. 고객의 생년월일 추출을 위해

---

**13. 다음 SQL 문장을 수행하는 목적은?**

```sql
SELECT * FROM customers WHERE customer_name LIKE '%%';
```

#A. 모든 고객 정보를 조회
B. 고객 이름이 없는 고객만 조회
C. '%' 문자를 포함한 이름만 조회
D. 고객 정보를 정렬하여 조회

---

**14. 아래 중 JSP 뷰 단에서 반복적으로 고객 데이터를 출력하기 위한 태그는?**
A. `<c:set>`
B. `<c:choose>`
#C. `<c:forEach>`
	<c:forEach var="emp" items="${empList}">
		<tr><td>${emp.empno}</td><td>${emp.ename}</td>
			<td>${emp.job}</td><td>${emp.hiredate}</td>
D. `<c:if>`

---

**15. 아래 중 고객 검색 화면에서 `<form>` 태그 내에서 필요한 name 속성 조합은?**
A. name="customerSeq", name="customerId"
#B. name="customerName", name="customerAddress"
	==> custmerName=홍길동&customerAddress=성남  
		 Customer( custmerName=홍길동, customerAddress=성남)
	  	Customer sch ==> service ==> dao   
	  	from Customers 
	  	where CUSTOMER_NAME LIKE #{custmerName} 
	  	AND CUSTOMER_ADDRESS LIKE #{customerAddress}
C. name="custNm", name="addr"
D. name="name", name="phone"


