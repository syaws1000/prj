
# 📘 Java DAO 단계별 학습 교안

**주제: DAO 단계별 데이터 처리 흐름 실무 마스터하기**

---

## 1. 📢 주의 집중 끌기 및 학습 연결성 제공

* ✨ **상황극 시작!**
  "우리 개발팀에 초보 개발자 ‘준수’가 들어왔다! 그런데… EMP 테이블에서 사원 하나만 가져오래? 여러 명도? 필드도 여러 개? 어헉… 이거 DAO로 어떻게 하지??"

* 🎯 **ARCS: Attention**

  * 유머와 실생활 기반 이야기로 몰입 유도
  * “만약 카페에서 커피 한 잔만 주문했는데 메뉴판 전체가 배달된다면?”

---

## 2. 🎯 학습 목표

> 학습자는 DAO(Data Access Object) 패턴을 사용하여 **다양한 데이터 행과 열 처리 상황**을 분리하여 구현하고, 실무에서 자주 사용하는 DAO 구조를 스스로 설계할 수 있다.

**구체적 성취 목표:**

* 1행 1열 데이터 조회 구현
* 다중행 1열 데이터 조회 구현
* 1행 다중열 데이터 조회 구현
* 다중행 다중열 DAO 설계 및 활용

---

## 3. 🔁 선수 학습 상기 및 실생활 연결하기

* 🧠 복습 퀴즈

  1. `ResultSet`은 어떤 방식으로 데이터를 저장하나요?
  2. `while(rs.next())`가 반복문에서 어떤 역할을 하나요?

* ☕ 비유

  * 1행1열: **자판기에서 커피 한 잔**
  * 다중행1열: **커피숍에서 여러 명이 각자 커피 한 잔**
  * 1행다중열: **VIP 손님에게 커피+케이크+물 세트 제공**
  * 다중열다중행: **결혼식 뷔페 전체 테이블 주문**

---

## 4. 🧠 주요 개념/핵심 키워드 최고의 암기법

| 키워드         | 설명        | 암기법                   |
| ----------- | --------- | --------------------- |
| DAO         | 데이터 접근 객체 | “데이터 아웃렛(DAO)”에서 꺼내온다 |
| ResultSet   | 결과 집합     | “결과를 저장하는 셋트상자”       |
| next()      | 다음 행 이동   | “다음 줄로 고고씽!”          |
| rs.getXXX() | 데이터 추출    | “get해서 꺼내 먹기”         |

---

## 5. 🔍 학습 목표별 탐구형 학습

> 🎯 스스로 따라하며 탐구해보자!

### ✅ \[1단계] 1행 1열 조회 (단일 값 조회)

```java
String sql = "SELECT COUNT(*) FROM EMP";
PreparedStatement pstmt = conn.prepareStatement(sql);
ResultSet rs = pstmt.executeQuery();
if(rs.next()) {
    int count = rs.getInt(1);
}
```

🧩 **탐구문제**: `SELECT MAX(SAL)`로 바꾸면 어떤 값을 가져올까?

---

### ✅ \[2단계] 다중행 1열 조회 (리스트에 하나씩 담기)

```java
String sql = "SELECT ENAME FROM EMP";
List<String> names = new ArrayList<>();
while(rs.next()) {
    names.add(rs.getString("ENAME"));
}
```

🧩 **탐구문제**: 이름에 "A"가 포함된 사원만 가져오려면?

---

### ✅ \[3단계] 1행 다중열 조회 (VO로 단일 행 가져오기)

```java
String sql = "SELECT EMPNO, ENAME, SAL FROM EMP WHERE EMPNO = ?";
pstmt.setInt(1, 7369);
ResultSet rs = pstmt.executeQuery();
if(rs.next()) {
    Emp emp = new Emp();
    emp.setEmpno(rs.getInt("EMPNO"));
    emp.setEname(rs.getString("ENAME"));
    emp.setSal(rs.getInt("SAL"));
}
```

🧩 **탐구문제**: 결과가 없을 때, 어떻게 처리할까?

---

### ✅ \[4단계] 다중행 다중열 조회 (List<VO>에 저장)

```java
String sql = "SELECT EMPNO, ENAME, SAL FROM EMP";
List<Emp> list = new ArrayList<>();
while(rs.next()) {
    Emp emp = new Emp();
    emp.setEmpno(rs.getInt("EMPNO"));
    emp.setEname(rs.getString("ENAME"));
    emp.setSal(rs.getInt("SAL"));
    list.add(emp);
}
```

🧩 **탐구문제**: 부서별 평균 급여를 출력하려면?

---

## 6. 🤝 실습 활동 및 협력 학습 유도

### 팀 미션: “사원 급여 리포트 만들기 DAO”

* 팀별로 다음 조건에 맞는 DAO 설계

  * 조건1: 부서별 평균 급여 출력
  * 조건2: 3000 이상 고액 연봉자 목록
  * 조건3: 이름에 A가 들어간 사원 전체 정보

📢 **웃음 포인트 미션**

* “팀 이름을 가장 웃기게 지은 팀에게 보너스 점수!”

---

## 7. 🔄 단계별 피드백 제공과 자기 평가 기회

* ✅ 체크리스트 제공
  \| 목표 | 성공 여부 | 메모 |
  \|------|------------|------|
  \| 1행1열 DAO 구현 | ✅ / ❌ |        |
  \| VO 설계 후 1행 다중열 처리 | ✅ / ❌ |        |

* 💬 즉시 피드백
  “ResultSet이 null일 때는? → 조건문에서 rs.next()를 먼저 호출해야 함!”

---

## 8. 📝 수행 평가 및 피드백 제공

* **실습 미션 결과 발표**

  * 코드 설명
  * 처리 로직
  * 실무적 활용 방안 설명

* **교사 피드백 예시**

  > “A팀은 ResultSet 순환처리를 잘했지만, VO 내 null 체크 처리가 빠졌습니다. 예외 발생 가능성 주의!”

---

## 9. 💼 학습 전이 강화와 실제 문제 적용 활동

* 🧠 연계 활동: “웹에서 부서별 사원 목록 보기 기능 구현하기”
* 🤔 확장 질문: “DAO 패턴 없이 직접 JDBC 처리하면 어떤 문제가 생길까?”

---

## 10. 🔍 학습 반성 및 향후 학습 준비

* ✍️ 자기 반성일지 작성

  * 오늘 배운 DAO 처리 흐름 중 가장 어려웠던 것은?
  * 어떤 부분이 실무에 가장 유용할 것 같은가?

  
  