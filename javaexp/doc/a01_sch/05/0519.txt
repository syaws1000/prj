## 🎓 오라클 SQL 학습 교안: **"제약조건도 나름 룰 있어요!"**

---

### 🎯 주제: Oracle 제약조건(Constraints)

### 🧠 학습 목표 (Learning Objectives)

* 다양한 제약조건의 종류와 목적을 이해한다.
* SQL에서 제약조건을 생성, 수정, 삭제하는 법을 습득한다.
* 실무에 적용 가능한 테이블 설계 시, 제약조건을 활용할 수 있다.

---

## 🧩 학습 설계 이론 기반: Gagné + ARCS 통합

| 단계              | Gagné의 9가지 수업사태 | ARCS 요소                | 구체적인 활동 및 구성                                                                                                                                                                                                                                     |
| --------------- | --------------- | ---------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| 1️⃣ 주의력 획득      | 주의집중 시키기        | Attention (흥미 유도)      | 💬 **"이 회사의 사원 테이블, 실수로 한 사원이 두 번 등록되었대요! 어쩌지요?"**<br>😆 "누가 짬뽕을 3그릇 시킨 건데요!" (중복 입력 문제 소개)                                                                                                                                                      |
| 2️⃣ 학습자에게 목표 제시 | 학습 목표 안내        | Relevance (관련성)        | 📌 오늘은 **데이터의 질을 지키는 '보안요원' - 제약조건**을 배워요. 실무에서도 매일 쓰이는 핵심입니다!                                                                                                                                                                                   |
| 3️⃣ 선수학습 회상     | 배운 내용 연결        | Confidence (자신감)       | ❓ “CREATE TABLE 할 줄 알죠?”<br> ✅ “그럼 이제 거기에 ‘제약사항’을 붙여볼게요!”                                                                                                                                                                                        |
| 4️⃣ 자극 제시       | 새 정보 제공         | Attention (흥미 유지)      | 🎬 **제약조건 5형제 등장**<br><br>🔹 `NOT NULL` - “입력은 필수입니다!”<br>🔹 `UNIQUE` - “중복? 그건 제 스타일 아니에요.”<br>🔹 `PRIMARY KEY` - “대표님 여기 계십니다!”<br>🔹 `FOREIGN KEY` - “다른 테이블과 관계 있어요\~”<br>🔹 `CHECK` - “값 좀 확인하고 갈게요\~”<br>🔹 `DEFAULT` - “입력 없으면 이걸로 하세요\~” |
| 5️⃣ 학습 안내 제공    | 핵심 개념 정리        | Relevance + Confidence | 📚 **요약 카드**<br>✔ `PRIMARY KEY` = `NOT NULL + UNIQUE`<br>✔ `FOREIGN KEY` = 다른 테이블의 PRIMARY KEY 참조<br>✔ `CHECK(SALARY > 0)` = 조건 부여<br>✔ `DEFAULT '한국'` = 기본값 제공                                                                                  |
| 6️⃣ 수행 유도       | 연습문제 수행         | Confidence             | 💻 실습 ①: `EMPLOYEES` 테이블에 `NOT NULL`, `UNIQUE`, `CHECK` 추가하기<br>💡 실습 ②: 외부키로 `DEPTNO` 연결해보기                                                                                                                                                     |
| 7️⃣ 수행 피드백 제공   | 즉각적 피드백         | Satisfaction           | 🔄 문제 풀고 **피드백 자동 제공**<br>👍 “외래키 오류 났다구요? 참조 테이블에 없는 값이니까요\~!”                                                                                                                                                                                  |
| 8️⃣ 수행 평가       | 이해도 점검          | Confidence             | ✔ 5지선다 퀴즈<br>✔ 상황형 시나리오: “사원이 중복 입력됐을 때 잡을 수 있는 제약조건은?”                                                                                                                                                                                          |
| 9️⃣ 파지와 전이 촉진   | 실무 적용 유도        | Satisfaction           | 🧑‍💻 **미션: 사원-부서 관계형 테이블 직접 설계하기**<br>🎯 실무: 데이터 무결성 유지! DB 설계 시 제약조건은 필수!                                                                                                                                                                      |

---

## 🛠️ 실습 예제: 실무와 유머가 함께하는 제약조건 실전

```sql
CREATE TABLE DEPT (
    DEPTNO NUMBER PRIMARY KEY,  -- 동일한 부서번호를 등록하거나, null로 비워두지 않게 처리
    DNAME VARCHAR2(20) UNIQUE,  -- 동일한 부서이름을 등록하지 않게 한다. null로 비워둘 수 있다
    LOC VARCHAR2(30)
);

CREATE TABLE EMP (
    EMPNO NUMBER PRIMARY KEY,
    ENAME VARCHAR2(30) NOT NULL,
    SAL NUMBER CHECK (SAL >= 0),  0 초과 입력만 가능하게 처리..
    DEPTNO NUMBER REFERENCES DEPT(DEPTNO) 부서테이블에 있는 부서번호로 등록된 데이터만 
    					                  사원테이블에 부서번호로 등록이 가능..
);
-- 주의 제약조건이 걸려 있으면 등록시, 해당 컬럼에 제약조건에 맞지 않으면 행단위 전체가 등록되지 않는다.
```

💡 **TIP**: 부서 번호가 없는 부서에 사원을 넣으면?
☠️ “외래키 위반! 출근한 부서가 존재하지 않아요!”

---

## 🎮 흥미요소와 웃음 유도

| 요소             | 구성 예시                                                                                            |
| -------------- | ------------------------------------------------------------------------------------------------ |
| 😂 유머          | - “PRIMARY KEY는 DB의 **얼굴**이에요. 얼굴이 2개면 무서워요.”<br>- 
                      “CHECK 제약은 엄마의 잔소리 같아요. ‘이 값 맞니?’ 하고 확인하니까요.” |
| 🧩 퀴즈형 미션      | “다음 중 외래키 문제로 벌어진 DB 사건은?”                                                                       |
| 🎲 카드놀이식 매칭 게임 | ‘NOT NULL ↔ 반드시 입력’, ‘CHECK ↔ 조건 검사’ 등 연결하기                                                      |
| 🧠 실무 시나리오 게임  | “부장님이 ‘왜 중복 데이터 생기냐!’며 화났어요. 어떻게 해결할까요?”                                                         |

---

## 📌 마무리 정리 카드

| 제약조건          | 설명               | 사용 위치  |
| ------------- | ---------------- | ------ |
| `NOT NULL`    | 비어있으면 안됨         | 컬럼 수준  |
| `UNIQUE`      | 중복 불가            | 컬럼/테이블 |
| `PRIMARY KEY` | 식별자, 중복X, NULL X | 테이블    |
| `FOREIGN KEY` | 외부 테이블 참조        | 컬럼/테이블 |
| `CHECK`       | 조건 만족 검사         | 컬럼 수준  |
| `DEFAULT`     | 기본값 설정           | 컬럼 수준  |

---

## 📝 과제 제안

🧪 **\[실무미션]**
"자신만의 쇼핑몰 회원 테이블을 설계하고, 제약조건을 추가해 보세요.
중복 회원? NO! 비밀번호 없는 가입? 안 돼요!"

