# 💡 학습 교안: 자바 + Oracle DB 연동 및 DAO 설계

---

## 📘 1. 주의 집중 끌기 및 학습 연결성 제공 (Gain Attention + Attention)

- 🧠 **질문 던지기**:  
  > "여러분, ‘회원 가입’ 버튼을 누르면 실제로 데이터는 어디로 가고, 어떻게 저장될까요?"
- 🎬 **짧은 영상 시청**:  
  > ‘회원 정보가 버튼 클릭부터 DB 저장까지 여행하는 여정’ 애니메이션 (재미있는 내레이션 포함)
- 😂 **유머 요소**:  
  > "DB 없이 저장하려는 건… 마치 냉장고 없는 집에서 아이스크림 보관하는 거죠."

---

## 🎯 2. 학습 목표 (Inform Learners of Objectives + Relevance)

- Java와 Oracle DB를 연동하여 정보를 저장/조회할 수 있다.
- DAO 패턴을 활용하여 데이터 처리 구조를 분리할 수 있다.
- DB 연결, SQL 실행, 예외처리를 포함한 실무형 클래스를 직접 설계하고 활용할 수 있다.

---

## 🧩 3. 선수 학습 상기 및 실생활 연결하기 (Stimulate Recall + Relevance)

- ✍️ **이전 학습 복습 퀴즈**:
  - Java 클래스 설계 기본
  - JDBC 구성요소 (`DriverManager`, `Connection`, `Statement`, `ResultSet`)
- 🏠 **실생활 연결**:
  > "DAO는 요리사입니다. 요리 재료(DB 데이터)는 주방에 있고, 손님은 서빙(Controller)을 기다립니다. 요리사는 손님의 주문을 SQL로 바꾸어 주방에서 꺼내오죠."

---

## 🗝️ 4. 주요 개념/핵심 키워드 (Present the Content + Confidence)

| 용어 | 설명 | 기억법 |
|------|------|--------|
| JDBC | Java와 DB 연결 위한 API | **J**ava **D**atabase **C**onnector |
| DAO | DB 작업 전담 객체 | **D**B **A**ccess **O**bject |
| Connection | DB 연결 객체 | “전화선” 역할 |
| PreparedStatement | SQL 실행 객체 | 준비된 요리 주문지 |

> 🔔 **암기 꿀팁**: “**DAO는 요리사다!** DAO가 없으면 서빙도 없어요!”

---

## 🔍 5. 학습 목표별 탐구형 학습 (Provide Learning Guidance + Confidence)

### 🎓 활동1: DB 연동 단계 탐색  
- 학습자가 직접 흐름도를 그리고 설명  
- "Connection → PreparedStatement → ResultSet → Close"

### 🛠 활동2: DAO 설계 시나리오  
- 역할 분담:
  - 한 팀은 MemberDAO
  - 다른 팀은 ProductDAO
- 팀별로 `insert()`, `selectAll()`, `update()` 함수 시나리오 구상

---

## 🤝 6. 실습 활동 및 협력 학습 유도 (Elicit Performance + Satisfaction)

### 👨‍💻 실습 예제
- 📝 [MemberDAO.java] 작성  
  - DB 연결 코드 포함  
  - 회원 정보 insert, list 조회

### 👭 협업 학습
- 페어 프로그래밍:
  - A학생: DAO 작성
  - B학생: DB 테이블 생성 및 테스트

### 😂 유머 삽입:
```java
System.out.println("DB 연결 실패 😭 – 커넥션이 눈물을 흘렸어요.");
```

---

## ✅ 7. 단계별 피드백 제공과 자기 평가 기회 (Provide Feedback + Confidence)

- 실습 후 자동화된 피드백 템플릿 제공  
```java
[연결 성공 여부] : ○ / ✕  
[SQL 실행 성공] : ○ / ✕  
[결과 출력] : ○ / ✕  
[예외처리] : try-catch 사용 여부 확인  
```
- 자기 점검 체크리스트 제공  
  > "내 DAO에는 insert, select, update, delete 모두 구현되어 있나요?"

---

## 📋 8. 수행 평가 및 피드백 제공 (Assess Performance + Satisfaction)

| 항목 | 만점 | 자기평가 |
|------|------|----------|
| DAO 패턴 구조 이해 | 10 | ○ / ✕ |
| DB 연결 코드 구현 | 10 | ○ / ✕ |
| SQL 실행 정확성 | 10 | ○ / ✕ |
| 예외 처리 및 리소스 반환 | 10 | ○ / ✕ |

> ✨ **교사 피드백 포인트**:
> - "selectAll 메서드에 반복문에서 `rs.next()`를 잘 이해했네요!"
> - "Connection close가 누락되었어요~ 잊지 마세요~ 👀"

---

## 🔄 9. 학습 전이 강화와 실제 문제 적용 활동 (Enhance Retention + Satisfaction)

### 💼 실전 프로젝트 과제
> “학급 도서 관리 시스템을 DAO로 설계하라!”
- 테이블: `Books`, `Borrow`
- DAO 기능: 책 추가, 목록 조회, 대여 처리

### 🧠 확장 활동
- DAO에 `searchByKeyword(String keyword)` 추가 구현
- DAO를 Spring 환경에 적용한다면 어떻게 바뀔까?

---

## 🪞 10. 학습 반성 및 향후 학습 준비 (Enhance Transfer + Confidence)

- ✍️ **Reflective Journal 작성**  
  > "내가 만든 DAO 클래스에서 가장 어려웠던 점은?"  
  > "이 기술을 내 프로젝트에 어떻게 적용할 수 있을까?"

- 🎯 **다음 단계 예고**
  > "다음 시간에는 **MVC 패턴과 DAO 연결**로 실제 웹 애플리케이션을 구현해봅니다!"
