## 🌟 Java 조건문 & 논리 삼항연산자 학습 교안 (Gagné + ARCS 통합형)

### 📌 1. 주의 집중 끌기 및 학습 연결성 제공 (Gain Attention / Relevance)

> 🤹‍♂️ **“헬멧 안 쓴 로봇은 벌금을 낼까?”**

- 상황극 도입: 자바시티의 로봇들이 헬멧을 썼는지, 신호를 지켰는지 확인하는 교통판독기가 있습니다.
- “조건문 없이 판단한다면, 벌금이 잘못 부과될 수도 있어요!”
- **일상 속 조건 판단을 유쾌한 예시로 도입**하여 주의를 집중시키고, 
	학습의 필요성 제시

---

### 🎯 2. 학습 목표 (Inform Learners of Objectives / Confidence)

- 조건문을 활용한 상황 판단 로직을 구성할 수 있다.
- 논리 연산자(&&, ||, !)와 삼항 연산자(?:)를 활용하여 코드를 간결하고 효율적으로 작성할 수 있다.
- 다양한 조건 상황에서 코드 흐름을 분석하고 오류를 수정할 수 있다.

✅ **학습자 강조용 안내 문구**  
> "오늘의 목표는 단 하나! **조건을 지배하면 로직을 지배한다!** 🧠"

---

### 🧠 3. 선수 학습 상기 및 실생활 연결하기 (Stimulate Recall / Relevance)

- 짧은 퀴즈로 복습: `if`, `else`, 변수 선언, 기본 연산자(+ - * /)
- 일상 속 조건 상황 예시 공유:  
  "비가 오면 우산을 챙긴다" → 조건문  
  "운전면허가 있고 나이가 20세 이상이면 운전 가능" → 논리 연산자  
  "학생이면 10% 할인, 아니면 일반가" → 삼항 연산자

---

### 🗝️ 4. 주요 개념/핵심 키워드를 최고의 암기법에 의한 제시 (Present Stimulus / ARCS - Attention)

| 개념 | 설명 | 암기팁 (말장난, 유머 포함) |
|------|------|-----------------------------|
| `if`, `else` | 조건에 따라 실행 흐름 제어 | “**이프의 뜻은 ‘이프라 불가능해!’” – 조건 없으면 불가능!” |
| `&&`, `||`, `!` | 논리 연산자 | “**AND는 둘 다 YES일 때만 OK! OR는 하나만 YES여도 OK! NOT은 반대!**” |
| 삼항 연산자 `조건 ? 참 : 거짓` | 간단한 조건 분기 표현 | “**삼형제 연산자 – 조건은 첫째, 참이면 둘째, 아니면 셋째가 나서요!**” |

---

### 🔍 5. 학습 목표별 탐구형 학습 (Provide Learning Guidance)

> 🚀 **탐험 미션: 자바시티 조건 탐험대 출동!**

1. **조건문 탐험**  
   - 주어진 상황: “점수가 90점 이상이면 ‘A’, 아니면 ‘재도전’”
   - 코드 설계 도전 → 테스트 → 수정

2. **논리 연산자 도전**
   - 미션: “신호등이 ‘초록’이고 보행자 감지 X면 출발 가능”
   - 여러 조건 조합 시나리오 실습

3. **삼항 연산자 응용**
   - “나이는 65세 이상이면 ‘무료’, 아니면 ‘유료’ 출력”
   - 기존 `if~else`와 비교하며 코드 간결화 체험

---

### 🤝 6. 실습 활동 및 협력 학습 유도 (Elicit Performance / Satisfaction)

- **페어 프로그래밍**: 조건 시나리오 주고받기 게임 (짝궁이 문제 만들고 상대가 풀이)
- **조건 추리 게임**: 그림 속 인물들이 어떤 조건으로 특정 행동을 했는지 코드로 유추하기
- **버그 잡기 미션**: 의도적 오류가 포함된 조건 코드의 문제점 찾기

---

### 🔄 7. 단계별 피드백 제공과 자기 평가 기회 (Provide Feedback / Confidence)

- 각 단계별 실습 후 **즉각적 피드백** 제공 (예시 출력값 제공, 힌트 제공)
- 자가진단표 제공:

| 항목 | O | X |
|------|---|---|
| if문 구조를 정확히 쓸 수 있다 | ✅ | ❌ |
| 논리 연산자 우선순위를 이해하고 있다 | ✅ | ❌ |
| 삼항 연산자로 조건을 바꿔 쓸 수 있다 | ✅ | ❌ |

---

### 📝 8. 수행 평가 및 피드백 제공 (Assess Performance)

> 🎓 **자바 조건문 인증 시험 (미니 프로젝트)**  
**상황**: 놀이공원 입장 시스템 만들기  
- 조건:  
  - 120cm 이상 → 탑승 가능  
  - 보호자가 있을 경우 100cm 이상 탑승 가능  
  - 65세 이상은 건강상 이용 불가

**목표**: 조건을 코드로 완벽히 구현 후 시뮬레이션 결과 확인  
→ **개별 피드백 제공 + 개선 포인트 제시**

---

### 💡 9. 학습 전이 강화와 실제 문제 적용 활동 (Enhance Retention and Transfer)

- **진짜 상황 문제 해결하기**:  
  - 영화관 할인 시스템 만들기 (학생, 경로, 멤버십 등 조건 조합)
  - 온라인 쇼핑몰 쿠폰 적용 조건 구현 (가격, 회원 등급, 이벤트 여부)

- **역할 바꾸기 퀘스트**:  
  - 조건이 복잡한 상황을 친구가 설명 → 내가 코드로 표현

---

### 🔚 10. 학습 반성 및 향후 학습 준비 (Enhance Retention & Transfer / Satisfaction)

- **미니 설문지 & 회고지 작성**
  - 오늘 배운 내용 중 가장 유용했던 점은?
  - 다음 시간엔 어떤 실생활 문제를 조건문으로 풀어보고 싶은가?

- **다음 예고편** 🎬  
  > “다음 시간엔 반복되는 조건을 해결해줄 **반복문** 세계로 떠납니다! 자동화의 왕국에서 만나요!”

---

## ✅ 학습자와 공유할 핵심 문구 요약

- “조건은 코드의 나침반! 상황에 맞는 흐름을 찾아보자!”
- “논리 연산자는 자바의 탐정! 단서가 여러 개여도 문제 없어!”
- “삼항 연산자는 미니 if문! 간결하게 표현하는 마법의 지팡이 🪄”
- “궁금하면 직접 실습! 웃으면서 실패해보자, 그게 진짜 실력이다!”



# 오후, 전날 내용 다하실 분들을 실무 프로젝트형 실습예제..



