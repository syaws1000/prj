### ✅ 자바 개념 중심 객관식 문제 (8문제)

1. 자바에서 **생성자(Constructor)**에 대한 설명으로 옳은 것은?  
   A. 반환값이 반드시 있어야 한다.  
   #B. 클래스 이름과 같아야 하며 반환 타입이 없다.  
   		Person p01 = new Person("홍길동");
   		p01.show("음악감상");
   		p01.show();
   		p01.show(25);
   		// 오버로딩은 결국 매개변수에 데이터를 식별할 때, 가능하다.
   		class Person{
   			String name;
   			Person(String name){
   				this.name = name;
   			}
   			void show(String hobby){
   				System.out.println("이름:"+name);
   				System.out.println("취미:"+hobby);
   			}
   			void show(){}
   			void show(int cnt){}
   			void show(String cnt){} (X) 메서드 오버로딩에 위배된다.
   		}	
   C. 생성자는 반드시 하나만 정의할 수 있다.  
   D. 생성자는 객체가 생성된 후 수동으로 호출해야 한다.

2. 다음 중 **필드(Field)**에 대한 설명으로 가장 적절한 것은?  
   A. 메서드 내부에서만 선언되는 변수  
   B. 객체가 사라지면 유지되는 값  
   #C. 클래스 내부에서 선언되며 객체의 속성을 저장하는 변수  
   D. 항상 정적(static)이어야 하는 변수

3. 자바에서 **메서드 오버로딩(Overloading)**의 조건으로 맞는 것은?  
   #A. 메서드 이름과 매개변수의 개수 또는 타입이 달라야 한다.  
   B. 반환형만 다르면 된다.  
   C. 같은 이름의 메서드는 허용되지 않는다.  
   D. 매개변수가 없어야 한다.


4. 자바에서 **기본형 타입(int, double 등)**과 **참조형 타입(String, 객체 등)**의 주요 차이점으로 올바른 것은?  
			stack만 사용                   stack영역 + heap영역 사용
   A. 기본형은 주소를 저장하고 참조형은 값을 저장한다.  
   B. 참조형만 연산이 가능하다.  
   #C. 기본형은 값을 직접 저장하고, 참조형은 객체의 주소를 저장한다.  
   D. 둘 모두 객체로 사용되며 힙 메모리를 사용한다.

5. **메서드에 매개변수를 사용하는 목적**으로 가장 적절한 것은?  
   A. 메서드를 호출하지 않고 사용할 수 있게 하기 위해  
   B. 여러 값을 동시에 리턴하기 위해  
   #C. 메서드 내에서 사용할 값을 외부에서 전달받기 위해  
   D. 메서드 이름을 다르게 만들기 위해

6. 다음 중 필드와 생성자에 대한 설명으로 적절하지 않은 것은?  
   A. 생성자는 객체 생성 시 자동으로 호출된다.  
   #B. 생성자는 반환 타입이 있다. : 필드값을 초기화하기 위하여 사용된다.
   C. 필드는 객체의 상태를 저장한다.  
   D. 생성자는 클래스 이름과 동일해야 한다.

7. 다음 코드 실행 시 출력 결과로 옳은 것은?  
   ```java
   ObCar car1 = new ObCar("소나타");
   car1.speedUp(20);
   car1.drivingCar();
   ```
   A. 현재 소나타모델 자동차가 0km/h 속도로 운행합니다.  
   B. 소나타자동차 속도를 0km/h 증가했습니다.  
   #C. 현재 소나타모델 자동차가 20km/h 속도로 운행합니다.  
   D. 에러 발생



---

### ✅ Oracle SQL 개념 중심 객관식 문제 (7문제)

9. 다음 중 **INSERT 문**에 대한 설명으로 옳은 것은?  
	INSERT INTO 테이블명 VALUES(데이터1, 데이터2,...); 전체 컬럼에 데이터입력
	INSERT INTO 테이블명(컬럼1,컬럼2) VALUES(데이터1, 데이터2); 특정 컬럼에 데이터입력

   A. 테이블을 생성하는 명령어이다.  
   B. 기존 데이터를 삭제하는 명령어이다.  
   #C. 새로운 행(row)을 테이블에 추가할 때 사용한다.  
   D. 테이블 전체 데이터를 초기화한다.

10. **UPDATE 문**을 사용할 때 가장 주의해야 할 점은?  
   A. FROM 절을 생략하지 않아야 한다.  
   B. WHERE 절을 지정하지 않으면 원하는 결과만 변경된다.  
   C. 테이블명을 반드시 대문자로 입력해야 한다.  
   #D. WHERE 절을 생략하면 모든 행이 변경될 수 있다.
   WHERE 절이 생략하면 모든 행의 데이터가 변경된다.

11. 다음 중 **DELETE 문**에 대한 설명으로 적절하지 않은 것은?  
   A. 특정 조건에 맞는 데이터를 삭제할 수 있다. WHERE 조건..
   B. WHERE 절이 없으면 모든 데이터를 삭제한다.  
   #C. DELETE는 테이블 전체 구조도 제거한다.  ==> DCL ALTER 명령어로만 구조 변경..
   D. DELETE 이후 COMMIT을 하지 않으면 롤백할 수 있다.

12. 다음 중 **SYSDATE** 함수의 역할로 가장 알맞은 것은?  
   A. 현재 접속한 사용자의 이름을 반환한다.  
   #B. 오늘 날짜와 현재 시간을 반환한다.  
   C. 오늘 날짜만 반환한다.  
   D. 시스템 버전을 출력한다.

13. 다음 SQL 구문에서 `TO_DATE('2025-04-30','YYYY-MM-DD')`의 목적은?  
   A. 숫자를 날짜로 변환  
   #B. 문자열을 날짜 데이터로 변환  
   		'2025-04-30' 문자열을 입력형식('YYYY-MM-DD')을 지정하여 날짜형으로 변경(TO_DATE())
   		처리한다.
   C. 날짜를 정수로 변환  
   D. 날짜를 자동으로 저장

14. SQL에서 **LIKE 연산자**를 사용하는 목적은?  
	WHERE 컬럼명 LIKE '시작문자열%'
	WHERE 컬럼명 LIKE '%문자열%'
	WHERE 컬럼명 LIKE '끝문자열%'
	WHERE 컬럼명 LIKE '____' :자리수.
	WHERE 컬럼명 LIKE '__A%' :3번째 자리에 A가 있는 모든 데이터 검색.
   A. 정확한 값을 찾기 위해  
   #B. 패턴이나 일부 문자열을 검색하기 위해  
   C. 두 테이블을 조인하기 위해  
   D. 데이터를 삭제하기 위해

15. 다음 중 SQL에서 **데이터 조작어(DML)**에 해당하지 않는 것은?  
   A. INSERT  
   B. DELETE  
   C. UPDATE  
   #D. CREATE

   
   