## ✅ 객관식 10문제

1. 다음 중 `switch`문에서 조건 값으로 올 수 없는 자료형은?  
   ① int  
   ② String  
   ③ boolean  
   ④ char  
	
	switch( 25 )
	switch( "5" )
	switch( 'A' )


2. 중첩 if문에 대한 설명으로 옳은 것은?  
   ① 한 if문 안에 switch문만 들어올 수 있다  
   ② 외부 조건이 참일 때 내부 조건을 무조건 실행한다  
   ③ 하나의 if문 안에 또 다른 if문을 포함할 수 있다  
   ④ 모든 if문은 반드시 else를 포함해야 한다  

3. `text-shadow: 3px 3px 5px red;`에서 5px의 의미는?  
   ① 수평 이동  
   ② 수직 이동  
   ③ 흐림 정도  
   ④ 색상 지정  

4. 다음 중 HTML 요소의 display 속성이 아닌 것은?  
   ① block  
   ② inline  
   ③ inline-block  
   ④ float  

5. CSS에서 `background-repeat:no-repeat;`은 어떤 효과인가?  
   ① 배경 이미지가 반복된다  
   ② 배경 이미지가 수직으로 반복된다  
   ③ 배경 이미지가 반복되지 않는다  
   ④ 배경 이미지가 깜빡인다  

6. 자바의 `switch`문에 기본적으로 사용되는 키워드는?  
   ① case  
   ② else  
   ③ loop  
   ④ input  

7. CSS에서 `display:inline-block;`을 사용했을 때 가능한 것은?  
   ① 텍스트만 정렬  
   ② width/height 설정 불가  
   ③ 줄바꿈 불가하면서 크기 지정 가능  
   ④ 블록 요소만 사용 가능  

8. HTML 태그에 직접 CSS를 지정하는 방식은?  
   ① 외부 스타일  
   ② 내부 스타일  
   ③ 인라인 스타일  
   ④ 링크 스타일  

9. 자바에서 중첩 if문을 사용할 수 있는 조건은?  
   ① switch문 안에서만 가능  
   ② if문 안에 또 다른 if문을 넣을 수 있을 때  
   ③ 한 줄에 여러 if문을 적을 수 없을 때  
   ④ while문 안에서만 사용할 수 있을 때  

10. `background-position:center center;`의 의미는?  
   ① 배경 이미지가 위쪽에 정렬됨  
   ② 배경 이미지가 오른쪽 아래  
   ③ 배경 이미지가 정중앙에 위치함  
   ④ 배경 이미지가 좌측 하단에 위치함  

---

## ✅ 주관식 개념문제 10문제

1. 중첩 if문이란 무엇이며, 언제 사용하는 것이 유리한가요?

2. `switch`문과 `if-else`문의 차이점을 설명하세요.

3. `text-shadow` 속성의 4가지 인자와 각각의 역할을 설명하세요.

4. `display:inline-block`과 `display:block`의 차이점을 설명하세요.

5. `background-repeat` 속성이 사용되는 예를 설명하세요.

6. `Scanner sc = new Scanner(System.in);`의 역할을 설명하세요.

7. `Math.random()`을 사용하여 1~100 사이의 숫자를 만들기 위한 공식은?

8. 자바에서 문자열을 비교할 때 `==` 대신 `equals()`를 사용하는 이유는?

9. HTML에서 배경 이미지를 특정 위치에만 출력하고 싶을 때 사용하는 CSS 속성을 설명하세요.

10. CSS에서 `border-radius` 속성의 용도와 예시를 드세요.

---

## ✅ 실습형 응용 문제 5문제

1. **🎟️ 영화관 티켓 등급 분류기 (자바 중첩 if)**  
   - 나이와 관람 등급을 입력받아,  
     - 18세 이상이고 등급이 "성인"이면 "관람 가능",  
     - 18세 미만이면 "관람 불가",  
     - 등급이 "전체"인 경우 누구나 "관람 가능"을 출력하세요.

2. **📦 상품 카드 배경 꾸미기 (HTML/CSS)**  
   - 상품 박스를 만들고, 배경 이미지(예: 상품 사진)를 중앙에 위치시키며 반복 없이 출력하세요. 배경색은 흰색, 크기는 250x300px로 설정하세요.

3. **🧾 로그인 화면 꾸미기 (HTML/CSS)**  
   - 아이디와 비밀번호 입력 필드를 만들고, 입력 시 `focus`되면 테두리를 파란색으로 바뀌게 하세요.

4. **🎯 정답 선택기 (자바 switch문)**  
   - 1~5 사이의 숫자를 랜덤으로 선택하게 하고, 3이면 "정답!", 나머지는 "오답!"을 출력하세요.

5. **🍓 과일 아이콘 줄 세우기 (HTML/CSS)**  
   - 사과, 바나나, 딸기 아이콘을 `display:inline-block`으로 가로 정렬하며, 각 아이콘마다 둥근 테두리와 배경색을 다르게 설정하세요.



## ✅ 객관식 10문제 – 정답 및 해설

1. **③ boolean**  
   → `switch`문에서는 `byte`, `short`, `char`, `int`, `enum`, `String` 사용 가능하지만 `boolean`은 불가능함.

2. **③ 하나의 if문 안에 또 다른 if문을 포함할 수 있다**  
   → 중첩 if문의 개념.

3. **③ 흐림 정도**  
   → `text-shadow: h-shadow v-shadow blur color;`에서 3번째는 그림자의 흐림 정도.

4. **④ float**  
   → `float`은 배치 속성, `display` 속성은 아님.

5. **③ 배경 이미지가 반복되지 않는다**  
   → `no-repeat`은 반복 없음.

6. **① case**  
   → `switch`문 내부에서 분기를 만드는 키워드는 `case`.

7. **③ 줄바꿈 불가하면서 크기 지정 가능**  
   → `inline-block`은 줄 바꾸지 않고 `width`, `height` 조정 가능.

8. **③ 인라인 스타일**  
   → 태그 내부에서 `style="..."`으로 직접 지정.

9. **② if문 안에 또 다른 if문을 넣을 수 있을 때**  
   → 중첩 if는 논리 흐름에 따라 계층적 판단 가능.

10. **③ 배경 이미지가 정중앙에 위치함**  
   → `center center`는 가로/세로 정중앙.

---

## ✅ 주관식 개념문제 – 모범답안

1. **중첩 if문이란?**  
   if문 안에 또 다른 if문을 사용하는 구조로, 조건을 계층적으로 확인할 때 유용하다.

2. **switch vs if-else**  
   - `switch`: 값이 명확한 경우 (정수, 문자열 등) 분기에 적합  
   - `if-else`: 범위 또는 복합 조건 판단에 적합

3. **text-shadow 속성의 인자**  
   - h-shadow: 수평 거리  
   - v-shadow: 수직 거리  
   - blur-radius: 흐림 정도  
   - color: 그림자 색상

4. **inline-block vs block**  
   - `block`: 줄바꿈 발생, 크기 조정 가능  
   - `inline-block`: 줄바꿈 없이 `width`, `height` 조정 가능

5. **background-repeat 사용 예**  
   예: `background-repeat: repeat-x;` → 수평 반복  
   예: `no-repeat;` → 반복 없이 한 번만 출력

6. **Scanner의 역할**  
   → 키보드 입력을 받아오기 위한 자바의 표준 입력 객체

7. **1~100 랜덤 정수 공식**  
   → `(int)(Math.random() * 100) + 1`

8. **equals() 사용 이유**  
   → `==`은 참조값 비교, `equals()`는 문자열 내용 비교

9. **배경 이미지 위치 속성**  
   → `background-position: top right;` 등으로 위치 조정 가능

10. **border-radius 예시**  
   → `border-radius: 10px;` → 모서리를 둥글게

---

## ✅ 실습형 응용 문제 – 풀이 코드

### 1. 🎟️ 영화관 티켓 분류기 (Java 중첩 if)
```java
import java.util.Scanner;

Scanner sc = new Scanner(System.in);
// 숫자/문자 형태 입력이 변경될 때는 문자열로 입력받아(sc.nextLine())
//  형변환처리..  Integer.parseInt(), Double.parseDouble()
System.out.print("나이 입력: ");
int age = Integer.parseInt(sc.nextLine());
sc.nextLine(); // 개행 제거
System.out.print("관람 등급 입력(성인/전체): ");
String grade = sc.nextLine();

if (grade.equals("전체")) {
    System.out.println("관람 가능");
} else {
    if (age >= 18) {
        System.out.println("관람 가능");
    } else {
        System.out.println("관람 불가");
    }
}
```

---

### 2. 📦 상품 카드 배경 (HTML/CSS)
```html
<style>
.card {
  width: 250px;
  height: 300px;
  background-image: url('img/product.jpg');
  background-position: center;
  background-repeat: no-repeat;
  background-color: white;
}
</style>
<div class="card"></div>
```

---

### 3. 🧾 로그인 focus 효과 (HTML/CSS)
```html
<style>
input:focus {
  border: 2px solid blue;
}
</style>

아이디: <input type="text"><br>
비밀번호: <input type="password">
```

---

### 4. 🎯 정답 선택기 (Java switch)
```java
int num = (int)(Math.random() * 5 + 1); // 1~5
System.out.println("선택한 번호: " + num);

switch (num) {
    case 3:
        System.out.println("정답!");
        break;
    case 1:
    case 2:
    case 4:
    case 5:
        System.out.println("오답!");
        break;
}
```

---

### 5. 🍓 과일 아이콘 나란히 배치 (HTML/CSS)
```html
<style>
.fruit {
  display: inline-block;
  width: 80px;
  height: 80px;
  border-radius: 10px;
  text-align: center;
  line-height: 80px;
  color: white;
  margin-right: 10px;
}
.apple { background-color: red; }
.banana { background-color: gold; color: black; }
.strawberry { background-color: pink; color: black; }
</style>

<div class="fruit apple">사과</div>
<div class="fruit banana">바나나</div>
<div class="fruit strawberry">딸기</div>
```

