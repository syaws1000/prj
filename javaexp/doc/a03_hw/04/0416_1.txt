## ✅ [1] **객관식 문제 15문제 **

1. Oracle SQL에서 기본 정렬 순서는 무엇인가요?  
   ① 내림차순 DESC  
   #② 오름차순 ASC  
   ③ 데이터 입력 순서  
   ④ 인덱스 순서  

2. `ORDER BY JOB DESC, SAL;`의 의미로 알맞은 것은?  
   ① 급여 기준으로 먼저 정렬한 후, 직책 기준으로 정렬  
   ② 직책을 오름차순으로, 급여는 내림차순으로 정렬  
   #③ 직책 내림차순, 급여 오름차순  
   ④ 정렬이 되지 않는다  

3. `SYSDATE`는 어떤 값을 반환하나요?  
   ① 데이터베이스 버전  
   #② 시스템 현재 날짜 및 시간  
   ③ 오늘의 요일  
   ④ 현재 로그인한 사용자  

4. `TO_DATE('2025-04-05 17:50', 'YYYY-MM-DD HH24:MI')`의 결과는?  
	날짜형식(DATE)형식 타입의 컬럼과 비교하거나 데이터를 입력/수정할 때는 위와 같은 
	형식으로 지정한다. TO_DATE('입력할 날짜와 시간', '입력하는 문자열이 어떤 데이터인지를 표현')
   ① 문자열로 반환  
   #② 날짜와 시간 형태로 변환  
   ③ 숫자로 변환됨  
   ④ 오류 발생  

5. Java에서 객체를 생성할 때 사용하는 키워드는?  
   ① class  
   ② create  
   #③ new   : new 생성자() ==> heap영역에 객체를 생성한다는 의미..
   ④ instance  

6. Java에서 생성자의 특징으로 맞는 것은?  
   ① 클래스명과 다르게 선언 가능  
   ② 반환값으로 boolean 사용  
   ③ void를 써야 한다  
   #④ 클래스명과 동일하고 반환형이 없다  

7. Java의 필드에 대한 설명으로 틀린 것은?  
	class 클래스명{
		필드선언 : 이 클래스의 전역변수로 모든 구성요소에 영향을 미칠 수 있다..
		String name;	
		생성자(매개변수){
		}
		메서드(매개변수){
			선언하는 변수
		}
		void call(String n){
			this.name = n;
			String show;
		}
		매개변수와 생성자/메서드 안에서 선언하는 변수는 지역변수이어서 해당
		{}(중괄호블럭)안에서만 사용가능하다.
		위 기준으로 name은 전역변수, n, show는 지역변수
		하지만, 지역변수를 전역변수에 할당하면 데이터를 전역변수 영역을 전달이 가능 하다.
		this.name = n;
	}
   ① 메서드 내부에 선언  : 지역변수   
   		
   ② 객체의 상태를 나타냄  
   ③ 객체가 소멸할 때까지 유지됨  
   ④ 기본값이 자동 설정됨  

8. SQL에서 `CREATE TABLE ... AS SELECT ... WHERE 1=0;`의 의미는?  
   ① 데이터를 모두 복사  
   #② 구조만 복사  WHERE 1=0  false이라서 데이터를 출력하지는 않지만,
   			    해당 테이블에 있는 컬럼을 표현할 수 있기에 구조를 복사하는 역할을 한다.
   ③ 오류 발생  
   ④ 제약조건도 복사됨  

9. SQL에서 `DELETE FROM 테이블명 WHERE 컬럼 = 값;`의 기능은?  
   ① 테이블 삭제  
   #② 행 삭제  
   ③ 컬럼 삭제  
   ④ 인덱스 삭제  

10. Java에서 `this` 키워드는 무엇을 의미하나요?  
   ① 다른 클래스 참조  
   #② 현재 객체의 필드 참조  
   class Person{
   	  String name;
   	  Person(String name){
   	  	this.name = name;
   	  }
   	  매개변수로 들어오는 name과 필드로 선언되는 name을 구분하기 위하여
   	  this를 사용한다. 자바에서는 this를 이름이 같지 않으면 생략해도 되지만,
   	  대부분의 객체지향 프로그램에서는 this를 반드시 사용해야 하는 경우가 있어서
   	  가능한한 this를 활용한다.
   }	
   ③ 정적 메서드 호출  
   ④ 상속받은 클래스 참조  

11. `INSERT INTO 테이블명 VALUES (...);` 명령어 이후 필요한 명령은?  
   ① ROLLBACK  
   ② CREATE  
   #③ COMMIT  : 확정을 하면 외부에서 접속할 때, 입력된 데이터를 확인할 수 있다.
   		확정하기 전에는 ROLLBACK을 통해, 입력 취소도 가능 하다.
   ④ ALTER  

12. Java에서 생성자가 없는 경우 기본 생성자에 대한 설명으로 올바른 것은?  
	생성자를 하나도 선언되지 않았을 경우에는 기본 생성자가 자동으로 컴파일시 생성된다.
	그러나, 하나이상 선언되어 있을 시, 해당 기본 생성자가 생성이 되지 않으므로,
	DEFAULT 생성자 호출시 에러가 발생할 수도 있다.
	class Person{
	}
	==> Person p = new Person(); // default 생성자 자동생성으로 호출가능
	
	class Person{
		Person(String name){}
	}
	==> Person p = new Person(); //에러 발생
	==> Person p = new Person("홍길동"); 해당 생성자에 맞게 선언하여야 한다.
	
	class Person{
		Person(){}
		Person(String name){}
	}
	==> Person p1 = new Person(); //추가적으로 선언시 가능
	==> Person p2 = new Person("홍길동"); 해당 생성자에 맞게 선언하여야 한다.
	
	
   ① 컴파일 오류 발생  
   #② 자동으로 생성  
   ③ 생성자를 수동으로 반드시 넣어야 함  
   ④ 객체 생성을 못함  

13. SQL에서 `DROP TABLE 테이블명;`의 의미는?  
   ① 테이블 내 데이터만 삭제    delete from 테이블명;
   #② 테이블 자체를 삭제  
   ③ 테이블 이름만 변경  
   ④ 테이블을 백업  

14. Java에서 객체의 필드에 접근하는 방식은?  
	class Person{
		String name;
		Person(String name){
			this.name = name; // 클래스 내부에서 접근시 this
		}
	}
	Person p1 = new Person("홍길동");
	p1.name : 참조변수.필드명   // 클래스 외부에서 접근시 객체명/참조변수.필드명
	
   ① 클래스명.필드  
   ② this.필드명  
   #③ 객체명.필드명  
   ④ new.필드명  

15. SQL에서 `ORDER BY DEPTNO, JOB`의 정렬 순서는?  
   ① JOB 먼저 정렬  
   ② JOB 역순, DEPTNO 오름차순  
   #③ DEPTNO 먼저 정렬, 그 다음 JOB  
   ④ JOB 기준으로만 정렬됨  
