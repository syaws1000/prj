## ✅ 주관식 개념 문제 (10문제)

### 🔹 Java

1. Java에서 `ArrayList`를 사용하는 이유는 무엇이며, 일반 배열과의 차이점을 설명하세요.  
2. 클래스에서 `get`/`set` 메서드를 사용하는 이유를 설명하고, 어떤 경우에 유용한지 서술하세요.  
3. 생성자를 사용하는 목적과 생성자를 통해 객체를 초기화하는 방법을 설명하세요.  
4. `List<Product>`를 사용하는 경우와 그 안에 객체를 담는 이유를 설명하세요.  
5. Java에서 객체를 `ArrayList`에 담은 후 반복문으로 출력할 수 있는 이유를 설명하세요.  

### 🔹 JavaScript

6. `arguments` 객체와 `...rest` 파라미터의 차이점을 설명하세요.  
7. 화살표 함수와 선언적 함수의 차이점을 개념과 예제 기반으로 설명하세요.  
8. `document.querySelector()` 함수의 역할과 활용 방법을 설명하세요.  
9. `parseInt()`와 `Number()`의 차이점은 무엇이며, 어떤 상황에서 각각 사용하는 것이 좋은지 설명하세요.  
10. JavaScript에서 `onclick` 이벤트와 함수 매개변수를 함께 사용할 때 유의할 점은 무엇인가요?

---

## 🎯 재미있는 이야기 기반 응용 실습 문제 (5문제, 문제만)

1. 👨‍🌾 **농부 철수의 과일 장터**  
   철수는 하루에 과일을 여러 종류 판매합니다. 사용자가 클릭할 때마다 구매한 과일 이름과 수량을 화면에 추가하세요. (각 과일은 버튼으로 구성)

2. 🏫 **학생관리 프로그램**  
   이름과 국어, 영어, 수학 점수를 입력하면, 평균 점수를 구해주는 기능을 구현하세요. 단, 점수는 `prompt()`로 받고 `parseInt()`를 사용하세요.

3. 🛒 **온라인 장바구니 시뮬레이터**  
   `Product` 클래스를 사용하여 `ArrayList<Product>`에 물건을 담고, 담긴 모든 물건을 반복문으로 출력하세요. (물건명, 가격, 수량 포함)

4. 🎬 **영화 예매 시스템**  
   사용자로부터 영화 이름, 상영 시간, 좌석 수를 입력받고 예매 정보를 출력하세요. 자바스크립트 `form` 요소를 활용하세요.

5. 🧙‍♂️ **사원의 급여 계산**  
   사원들이 입사한 날짜를 기준으로 첫 월급일(입사 다음달 15일)을 `LAST_DAY`, `NEXT_DAY` 등을 활용하여 SQL로 출력하는 쿼리를 작성하세요. 사원 이름과 입사일 포함.
좋습니다! 아래에 **각 주관식 개념 문제의 해설과 정답** 및 **응용 실습 문제 예시 답안/코드 또는 SQL 쿼리 예시**를 함께 제공드립니다.

---

## ✅ 주관식 개념 문제 – 해설 및 정답

### 🔹 Java

1. **ArrayList vs 배열**  
   `ArrayList`는 크기가 가변적인 동적 배열로, 요소를 쉽게 추가/삭제할 수 있습니다. 일반 배열은 선언 시 크기가 고정되어 있고, 요소 추가나 삭제가 어렵습니다.

2. **get/set 메서드의 이유와 유용성**  
   객체 지향 원칙 중 하나인 **캡슐화**를 지키기 위해 사용됩니다. private 필드에 직접 접근하는 대신, 데이터를 안전하게 읽고 수정할 수 있습니다.

3. **생성자 목적과 초기화 방법**  
   객체 생성 시 필드값을 초기화하기 위해 사용됩니다. `Person p = new Person("홍길동", 25, "서울");` 처럼 `new`와 함께 호출합니다.

4. **List<Product> 사용 목적**  
   `Product` 객체들을 여러 개 저장할 수 있도록 하고, 반복문으로 순회하면서 개별 객체의 속성(이름, 가격 등)을 사용할 수 있습니다.

5. **ArrayList 반복문 출력 이유**  
   `ArrayList`는 `Iterable` 인터페이스를 구현하고 있기 때문에 `for-each` 문을 통해 객체를 순회하며 접근할 수 있습니다.

---

### 🔹 JavaScript

6. **`arguments` vs `...rest`**  
   `arguments`는 배열 비슷한 객체로, 함수 내에서만 사용할 수 있으며 배열 메서드를 바로 사용할 수 없습니다. `...rest`는 배열 형태로 받아 spread 문법과 함께 활용 가능하며 더 유연하고 모던한 방식입니다.

7. **화살표 함수 vs 선언적 함수**  
   - 선언적 함수: `function greet(name) { return "Hi "+name; }`  
   - 화살표 함수: `const greet = (name) => "Hi "+name;`  
   차이점: `this` 바인딩 방식, 선언 위치 이전 호출 여부, 문법 간결성 등

8. **`document.querySelector()` 역할**  
   CSS 선택자 문법을 활용해 HTML 요소 하나를 선택하여 JavaScript로 조작할 수 있게 합니다.  
   예: `document.querySelector("#title").style.color = "red";`

9. **`parseInt()` vs `Number()`**  
   - `parseInt()`: 문자열의 앞쪽 숫자만 정수로 변환 (문자 포함 허용)  
   - `Number()`: 전체 문자열이 숫자여야 변환 가능 (문자 있으면 `NaN`)  
   용도에 따라 혼합 데이터(`100px`)는 `parseInt`, 숫자만 있어야 할 경우 `Number` 사용

10. **`onclick`과 매개변수 사용 시 주의점**  
    함수 호출 시 괄호를 써서 값을 넣으면 **즉시 실행**되므로, 문자열로 함수 호출 형태를 지정해야 이벤트 발생 시 호출됩니다.  
    예: `<button onclick="sayHi('철수')">`

---

## 🎯 응용 실습 문제 – 예시 정답/코드

### 1. 👨‍🌾 **철수의 과일 장터**
```html
<button onclick="buy('사과', 3)">사과 3개</button>
<button onclick="buy('바나나', 2)">바나나 2개</button>
<div id="list"></div>
<script>
function buy(fruit, count){
    document.querySelector("#list").innerHTML += `<p>${fruit} ${count}개 구매</p>`;
}
</script>
```

---

### 2. 🏫 **학생관리 프로그램**
```javascript
let name = prompt("학생 이름 입력");
let kor = parseInt(prompt("국어 점수 입력"));
let eng = parseInt(prompt("영어 점수 입력"));
let math = parseInt(prompt("수학 점수 입력"));
let avg = parseInt((kor + eng + math) / 3);
document.body.innerHTML = `<h2>${name}의 평균 점수: ${avg}</h2>`;
```

---

### 3. 🛒 **온라인 장바구니 시뮬레이터**
```java
public class Product {
    private String name;
    private int price;
    private int cnt;
    public Product(String name, int price, int cnt){
        this.name = name; this.price = price; this.cnt = cnt;
    }
    public String getName(){ return name; }
    public int getPrice(){ return price; }
    public int getCnt(){ return cnt; }
}

List<Product> cart = new ArrayList<>();
cart.add(new Product("사과", 3000, 2));
cart.add(new Product("딸기", 7000, 1));
for(Product p : cart){
    System.out.println(p.getName()+"\t"+p.getPrice()+"\t"+p.getCnt());
}
```

---

### 4. 🎬 **영화 예매 시스템**
```html
<input type="text" id="movie" placeholder="영화 제목">
<input type="text" id="time" placeholder="상영 시간">
<input type="number" id="seat" placeholder="좌석 수">
<button onclick="reserve()">예매</button>
<div id="result"></div>
<script>
function reserve(){
    let title = document.getElementById("movie").value;
    let time = document.getElementById("time").value;
    let seat = document.getElementById("seat").value;
    document.getElementById("result").innerHTML = `<h3>${title} - ${time} - ${seat}석 예매 완료</h3>`;
}
</script>
```

---

### 5. 🧙‍♂️ **사원의 급여 계산 (Oracle SQL)**
```sql
SELECT ENAME, HIREDATE, 
       LAST_DAY(HIREDATE)+1 "입사 다음달 1일",
       LAST_DAY(HIREDATE)+15 "첫 월급일"
FROM EMP;
```

   