## 📅 5월 3일 (토) – 웹 개발 기초 다지기

1. **HTML: 자기소개 페이지 만들기**

   * **설명:** 자신의 이름, 나이, 취미를 소개하는 간단한 웹 페이지를 만들어보세요.
   * **힌트:** `<h1>`, `<p>`, `<ul>`, `<li>` 태그를 사용하여 정보를 나열합니다.

2. **CSS: 배경색과 글자색 변경하기**

   * **설명:** 위에서 만든 자기소개 페이지의 배경색과 글자색을 변경해보세요.
   * **힌트:** `body`에 `background-color`, `color` 속성을 적용합니다.

3. **JavaScript: 버튼 클릭 시 인사말 표시하기**

   * **설명:** 버튼을 클릭하면 "안녕하세요!"라는 인사말이 나타나도록 해보세요.
   * **힌트:** `onclick` 이벤트와 `alert()` 함수를 사용합니다.

4. **Java: 콘솔에 "Hello, World!" 출력하기**

   * **설명:** Java 프로그램을 작성하여 콘솔에 "Hello, World!"를 출력해보세요.
   * **힌트:** `System.out.println("Hello, World!");`를 사용합니다.

5. **SQL: 학생 테이블 생성하기**

   * **설명:** 학생의 ID, 이름, 나이, 전공을 저장할 수 있는 테이블을 생성해보세요.
   * **힌트:** `CREATE TABLE` 문을 사용하여 테이블을 생성합니다.

6. **HTML: 이미지 추가하기**

   * **설명:** 자기소개 페이지에 자신의 사진을 추가해보세요.
   * **힌트:** `<img src="이미지경로" alt="설명">` 태그를 사용합니다.

7. **CSS: 글자 정렬과 폰트 변경하기**

   * **설명:** 자기소개 페이지의 글자를 가운데 정렬하고, 폰트를 변경해보세요.
   * **힌트:** `text-align: center;`, `font-family` 속성을 사용합니다.


8. **Java: 두 수의 합 계산하기**

   * **설명:** 두 개의 정수를 입력받아 합을 계산하고 출력하는 프로그램을 작성해보세요.
   * **힌트:** `Scanner` 클래스를 사용하여 입력을 받고, `+` 연산자를 사용합니다.

9. **SQL: 학생 정보 삽입하기**

    * **설명:** 생성한 학생 테이블에 새로운 학생 정보를 삽입해보세요.
    * **힌트:** `INSERT INTO` 문을 사용하여 데이터를 삽입합니다.

---

## 📅 5월 4일 (일) – 사용자 상호작용과 스타일링

1. **HTML: 연락처 폼 만들기**

   * **설명:** 이름, 이메일, 메시지를 입력받는 연락처 폼을 만들어보세요.
   * **힌트:** `<form>`, `<input>`, `<textarea>` 태그를 사용합니다.

2. **CSS: 버튼 스타일링하기**

   * **설명:** 연락처 폼의 제출 버튼을 스타일링해보세요.
   * **힌트:** `background-color`, `border`, `padding` 속성을 사용합니다.

3. **JavaScript: 폼 유효성 검사하기**

   * **설명:** 제출 버튼을 클릭했을 때, 모든 필드가 입력되었는지 확인해보세요.
   * **힌트:** `if` 문과 `alert()` 함수를 사용하여 유효성을 검사합니다.

4. **Java: 구구단 출력하기**

   * **설명:** 사용자로부터 숫자를 입력받아 해당 숫자의 구구단을 출력하는 프로그램을 작성해보세요.
   * **힌트:** `for` 반복문을 사용하여 구구단을 출력합니다.

5. **SQL: 학생 정보 조회하기**

   * **설명:** 학생 테이블에서 모든 학생의 정보를 조회해보세요.
   * **힌트:** `SELECT * FROM` 문을 사용하여 데이터를 조회합니다.

6. **HTML: 네비게이션 바 만들기**

   * **설명:** 홈, 소개, 연락처로 구성된 네비게이션 바를 만들어보세요.
   * **힌트:** `<nav>`, `<ul>`, `<li>`, `<a>` 태그를 사용합니다.

7. **CSS: 네비게이션 바 스타일링하기**

   * **설명:** 네비게이션 바를 수평으로 정렬하고, 배경색을 추가해보세요.
   * **힌트:** `display: flex;`, `background-color` 속성을 사용합니다.

8. **Java: 배열의 평균 계산하기**

   * **설명:** 정수 배열의 평균을 계산하는 프로그램을 작성해보세요.
   * **힌트:** 배열을 순회하며 합을 구하고, 요소 수로 나누어 평균을 계산합니다.

9. **SQL: 특정 전공 학생 조회하기**

    * **설명:** 전공이 "컴퓨터공학"인 학생들의 정보를 조회해보세요.
    * **힌트:** `SELECT * FROM` 문과 `WHERE` 절을 사용하여 조건에 맞는 데이터를 조회합니다.

---

## 📅 5월 5일 (월) – 동적 콘텐츠와 데이터 처리

1. **HTML: 제품 목록 페이지 만들기**

   * **설명:** 제품의 이름, 이미지, 가격을 나열하는 페이지를 만들어보세요.
   * **힌트:** `<div>`, `<img>`, `<p>` 태그를 사용하여 제품 정보를 표시합니다.

2. **CSS: 제품 카드 스타일링하기**

   * **설명:** 제품 정보를 카드 형태로 스타일링해보세요.
   * **힌트:** `border`, `box-shadow`, `padding` 속성을 사용합니다.

3. **JavaScript: 장바구니에 제품 추가하기**

   * **설명:** "장바구니에 추가" 버튼을 클릭하면 제품이 장바구니에 추가되도록 해보세요.
   * **힌트:** 배열을 사용하여 선택한 제품을 저장하고, `alert()`로 확인합니다.

4. **Java: 로그인 시도 프로그램 만들기**

   * **설명:** 사용자로부터 아이디와 비밀번호를 입력받아 로그인 시도를 확인하는 프로그램을 작성해보세요.
   * **힌트:** `Scanner` 클래스를 사용하여 입력을 받고, 문자열 비교를 통해 로그인 여부를 판단합니다.

5. **SQL: 학생 정보 수정하기**

   * **설명:** 학생 테이블에서 특정 학생의 전공을 "정보통신공학"으로 수정해보세요.
   * **힌트:** `UPDATE` 문과 `WHERE` 절을 사용하여 데이터를 수정합니다.

6. **HTML: 테이블로 데이터 표시하기**

   * **설명:** 학생들의 이름과 성적을 테이블 형태로 표시해보세요.
   * **힌트:** `<table>`, `<tr>`, `<td>` 태그를 사용하여 데이터를 나열합니다.

7. **CSS: 테이블 스타일링하기**

   * **설명:** 테이블에 테두리와 배경색을 추가해보세요.
   * **힌트:** `border`, `background-color` 속성을 사용합니다.

8. **JavaScript: 성적 평균 계산하기**

   * **설명:** 입력된 성적들의 평균을 계산하여 표시해보세요.
   * **힌트:** 배열을 사용하여 합을 구하고, 평균을 계산하여 `alert()`로 출력합니다.


9. **SQL: 학생 정보 삭제하기**

    * **설명:** 학생 테이블에서 특정 학생의 정보를 삭제해보세요.
    * **힌트:** `DELETE FROM` 문과 `WHERE` 절을 사용하여 데이터를 삭제합니다.

---

## 📅 5월 6일 (화) – 종합 프로젝트

1. **HTML/CSS: 개인 포트폴리오 페이지 만들기**

   * **설명:** 자신의 이력서, 프로젝트, 연락처 정보를 포함한 포트폴리오 페이지를 만들어보세요.
   * **힌트:** `<section>`, `<article>`, `<footer>` 태그를 사용하고, CSS로 레이아웃을 구성합니다.

2. **JavaScript: 포트폴리오에 다크 모드 추가하기**

   * **설명:** 버튼을 클릭하면 다크 모드로 전환되도록 해보세요.
   * **힌트:** 함수로 연결하여 document.body.style.background 로 사용하여 다크 모드 추가/제거합니다.


3. **SQL: 주소록 테이블 생성하기**

   * **설명:** 이름과 전화번호를 저장할 수 있는 주소록 테이블을 생성해보세요.
   * **힌트:** `CREATE TABLE` 문을 사용하여 테이블을 생성합니다.

4. **HTML/CSS: 연락처 추가 폼 만들기**

   * **설명:** 이름과 전화번호를 입력받는 폼을 만들어보세요.
   * **힌트:** `<form>`, `<input>` 태그를 사용하고, CSS로 스타일링합니다.



5. **JavaScript: 폼 제출 시 데이터 확인하기**

   * **설명:** 연락처 추가 폼에서 사용자가 입력한 이름과 전화번호를 제출하면, 입력된 정보를 확인하는 알림 메시지를 표시해보세요.
   * **힌트:** `document.querySelector()`를 사용하여 입력값을 가져오고, `alert()` 함수를 사용하여 정보를 표시합니다.

6. **Java: 연락처 정보 저장 및 조회 프로그램 만들기**

   * **설명:** 사용자로부터 이름과 전화번호를 입력받아 저장하고, 저장된 연락처 정보를 조회할 수 있는 Java 프로그램을 작성해보세요.
   * **힌트:** VO(Address>을 사용하여 이름,  전화번호를  저장하고, List<Address> list = new ArrayList<Address>();에
	`Scanner` 클래스를 사용하여 입력을 받습니다.

7. **SQL: 주소록 테이블에 데이터 삽입하기**

   * **설명:** 생성한 주소록 테이블에 새로운 연락처 정보를 삽입해보세요.
   * **힌트:** `INSERT INTO` 문을 사용하여 이름과 전화번호를 테이블에 추가합니다.

8. **JavaScript: 연락처 목록 동적으로 표시하기**

   * **설명:** 저장된 연락처 정보를 웹 페이지에 동적으로 표시해보세요.
   * **힌트:** 배열에 저장된 연락처 정보를 `for` 반복문을 사용하여 `<ul>` 또는 `<table>` 요소에 추가합니다.

9. **HTML/CSS/JavaScript: 연락처 관리 웹 애플리케이션 완성하기**

    * **설명:** 지금까지 만든 연락처 추가 폼과 연락처 목록 표시 기능을 통합하여 하나의 웹 애플리케이션으로 완성해보세요.
    * **힌트:** HTML로 폼과 목록 영역을 구성하고, CSS로 스타일링하며, JavaScript로 폼 제출 시 연락처를 목록에 추가하는 기능을 구현합니다.




