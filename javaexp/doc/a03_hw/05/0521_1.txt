### 객관식 문제 15문제 (JSP 및 EL/JSTL 관련)

1. **JSP에서 `out.println()`의 역할은 무엇인가요?**
	out : 출력하는 내장 객체로 사전에 선언이 되어 있어서, out 참조변수로 처리가 가능
	println(자바의 변수 + "html 코드나 출력한 내용");
   * A. JSP 페이지에서 Java 코드를 실행하는데 사용된다.
   * B. HTML 태그를 출력하는 데 사용된다.
   # C. JSP 페이지에서 Java 변수를 출력하는 데 사용된다.
   * D. JSP 페이지에서 데이터를 받아오는 데 사용된다.

2. **JSP에서 `<%= %>` 표현식과 `out.println()`의 차이점은 무엇인가요?**
	<h1>이름:<%=name%></h1> expression으로 jsp script 중에 하나이다..
	out.println("<h1>이름:"+name+"</h1>");
   * A. `<%= %>`는 Java 코드 실행을 위한 것, `out.println()`은 HTML 출력을 위한 것이다.
   # B. `<%= %>`는 데이터를 출력하는 데 사용되며, `out.println()`은 HTML 코드에서 Java 코드를 실행한다.
   * C. 둘 다 같은 기능을 한다.
   * D. `<%= %>`는 HTML에 변수를 삽입하는 데 사용되며, `out.println()`은 서버로 데이터를 전송하는 데 사용된다.

3. **JSTL의 `<c:set>` 태그에서 `scope` 속성을 설정하지 않으면 기본값은 무엇인가요?**

   * A. session
   * B. application
   # C. page
   * D. request

4. **JSP에서 `request.setAttribute()`와 `session.setAttribute()`의 차이는 무엇인가요?**
	jsp, el태그 사용해서 변수를 저장할 때, 크가 종류에 따른 기존 변수 설정에서 
	추가적으로 page|request|session|application 범위로 시간과 공간단위가 더 추가적으로 처리가 된다.
	page : 현재 페이지만 사용가능
	request : 요청값을 처리한 페이지에서 사용가능
	session : session 범위에 페이지(동일브라우저와 동일서버가 연동된 경우)
	application : 서버의 수행되는 범위에서 사용가능
   # A. `request.setAttribute()`는 페이지 범위에서만 유효하고, `session.setAttribute()`는 세션 범위에서 유효하다.
   * B. `session.setAttribute()`는 페이지 범위에서만 유효하고, `request.setAttribute()`는 세션 범위에서 유효하다.
   * C. 둘은 같은 기능을 한다.
   * D. `request.setAttribute()`는 객체를 저장할 수 없고, `session.setAttribute()`는 객체를 저장할 수 있다.

5. **`<c:if>` 태그에서 `test` 속성에 어떤 값을 사용할 수 있나요?**
	<c:set var="point" value="90"/>
	점수는 ${point}
	<c:if test="${point>=80}">
		합격입니다!
	</c:if>
	# 주의 jstl에서 if else 구문이 없다..
	<c:choose>
		<c:when test="${조건1}">
			조건1일 때, 처리할 내용
		</c:when>
		<c:when test="${조건2}">
			조건1을 제외가 조건2일 때, 처리할 내용
		</c:when>		
		<c:otherwise>
			위 조건에 해당하지 않을 때.. 처리할 내용..
		</c:otherwise>
	</c:choose>
   * A. 문자열
   * B. 숫자
   # C. boolean 값
   * D. 배열

6. **JSP에서 `<%= %>` 표현식을 사용할 때, `name` 변수를 출력하려면 어떻게 작성해야 하나요?**

   # A. `<%= name %>`
   * B. `<%= out.println(name) %>`
   * C. `<%= name.toString() %>`
   * D. `<%= out.print(name) %>`

7. **JSP에서 `request.setAttribute()`와 `session.setAttribute()`가 사용하는 범위는 무엇인가요?**
   # A. `request.setAttribute()`는 요청 범위, `session.setAttribute()`는 세션 범위
   * B. `request.setAttribute()`는 페이지 범위, `session.setAttribute()`는 애플리케이션 범위
   * C. 둘 다 페이지 범위
   * D. 둘 다 세션 범위

8. **`<c:choose>` 태그에서 `else` 대신 사용할 수 있는 태그는 무엇인가요?**

   # A. `<c:otherwise>`
   * B. `<c:if>`
   * C. `<c:while>`
   * D. `<c:then>`

9. **JSP에서 `out` 객체의 역할은 무엇인가요?**
	JSP ==> servlet.java ==> @@@.class ==> java+html(html만들어서 호출하는 client 전송)
	작성시 바로 에러가 고쳐지지 않으면 잘라내기해서 다시 붙여서 재컴파일을 할 수 있도록 합니다.
   * A. JSP 페이지에서 데이터를 받아오는 데 사용된다.
   * B. JSP 페이지에서 데이터를 처리하는 데 사용된다.
   # C. JSP 페이지에서 데이터를 출력하는 데 사용된다.
   * D. JSP 페이지에서 데이터를 저장하는 데 사용된다.

10. **JSP와 서블릿의 주요 차이점은 무엇인가요?**

    # A. JSP는 서버 측 HTML 템플릿 엔진이며, 서블릿은 Java 클래스로 동적 웹 페이지를 처리한다.
    * B. JSP는 클라이언트 측 코드, 서블릿은 서버 측 코드이다.
    * C. JSP는 데이터를 처리하고, 서블릿은 데이터를 출력한다.
    * D. JSP는 데이터를 저장하는 데 사용되고, 서블릿은 데이터를 출력하는 데 사용된다.

11. **JSTL의 `<c:forEach>` 태그에서 `items` 속성으로 사용할 수 있는 것은 무엇인가요?**
	
    * A. 문자열
    # B. 배열, 리스트, 맵 등 반복 가능한 객체
    * C. boolean 값
    * D. HTML 태그

12. **JSP에서 `pageContext.setAttribute()`와 `session.setAttribute()`의 차이는 무엇인가요?**

    # A. `pageContext.setAttribute()`는 페이지 범위에서만 유효하고, `session.setAttribute()`는 세션 범위에서 유효하다.
    * B. `session.setAttribute()`는 페이지 범위에서만 유효하고, `pageContext.setAttribute()`는 애플리케이션 범위에서 유효하다.
    * C. 둘 다 페이지 범위에서 유효하다.
    * D. `pageContext.setAttribute()`는 데이터를 처리할 수 없고, `session.setAttribute()`는 데이터를 처리할 수 있다.

13. **EL에서 기본적인 비교 연산자는 무엇인가요?**
	${point>=80}
    * A. `=`, `==`, `!=`
    * B. `=`, `>`, `<`, `>=`, `<=`, `==`, `!=`
    # C. `==`, `!=`, `&&`, `||`
    * D. `=`, `==`, `&`, `|`

14. **JSP에서 객체를 생성하려면 어떤 구문을 사용해야 하나요?**
	request.setAttribute("p01", new Person("홍길동",25,"성남"));
	${p01.name}  ==> p01.getName()
	
	<jsp:useBean id="p01" class="jspexp.vo.Person"/>
	${p01.setName("홍길동")}
	${p01.setAge(25)}
	${p01.setLoc("성남")}
	${p01.name}
	
    # A. `<jsp:useBean>`
    * B. `<%= new Object() %>`
    * C. `<%= Object obj = new Object(); %>`
    * D. `<bean:useBean>`

15. **JSTL의 `<c:forEach>` 태그에서 `begin`과 `end` 속성을 사용하려면 어떤 유형의 데이터를 반복해야 하나요?**
    * A. 배열
    * B. 문자열
    # C. 숫자
    * D. 목록
    for(int cnt = 1;cnt<=10;cnt++){
    	out.println(cnt);
    }
    
    <c:forEach var="cnt" begin="1" end="10" step="1">
    	${cnt}
    </c>
    
    
    
    
    
    
    
    
    
    

---

