### 1. **`setInterval()`과 `setTimeout()`의 차이점에 대한 설명으로 올바른 것은?**

A. `setInterval()`은 함수를 한 번만 실행하고, `setTimeout()`은 함수를 반복적으로 실행한다.
B. `setInterval()`은 지정된 간격마다 반복 실행되며, `setTimeout()`은 한 번만 실행된다.
C. 두 함수 모두 지정된 간격마다 함수를 한 번만 실행한다.
D. `setInterval()`과 `setTimeout()`은 둘 다 동기적으로 실행된다.

### 2. **`countDown()` 함수에서 카운트가 0에 도달했을 때, `clearInterval()`이 호출되는 이유는 무엇인가요?**

A. `clearInterval()`이 호출되면 카운트가 멈추고, 다른 작업을 처리한다.
B. 카운트가 0이 되면 자동으로 `setInterval()`이 종료된다.
C. `clearInterval()`이 호출되어 카운트가 멈추지만, 다른 동작은 계속된다.
D. 카운트가 0에 도달하면 프로그램이 종료된다.

### 3. **`setTimeout()`을 사용하여 10초 후에 실행해야 할 작업이 있는데, 이를 더 정확하게 처리하려면 어떻게 해야 하나요?**

A. `clearTimeout()`을 사용하여 타이머를 중단해야 한다.
B. `setTimeout()`을 `setInterval()`로 변경해야 한다.
C. `setTimeout()`의 반환 값을 `clearTimeout()`을 이용해 관리해야 한다.
D. `setTimeout()`의 시간을 조정하여 작업을 정확하게 실행할 수 있다.

### 4. **`isNaN()` 함수의 주요 용도는 무엇인가요?**

A. 특정 값이 숫자인지 확인하고, 숫자가 아니면 `false`를 반환한다.
B. 문자열이 숫자형으로 변환될 수 있는지 확인한다.
C. 숫자를 문자열로 변환할 수 있는지 확인한다.
D. 문자열과 숫자 사이의 차이를 계산한다.

### 5. **`moveCell()` 함수에서 `clearInterval()`이 호출되는 이유는 무엇인가요?**

A. 모든 셀의 색상이 변경되었을 때 반복 작업을 멈추기 위해 호출된다.
B. 셀에 내용이 추가되었을 때 `clearInterval()`이 호출된다.
C. `setInterval()`이 1초마다 반복되기 때문에, 이를 1회만 실행하기 위해 호출된다.
D. 모든 `td` 셀에 대한 작업이 끝난 후, `clearInterval()`이 호출되어 멈춘다.

### 6. **`Date` 객체에서 `getMonth()`가 반환하는 값의 범위는 무엇인가요?**

A. 0부터 12까지의 값을 반환한다.
B. 1부터 12까지의 값을 반환한다.
C. 0부터 11까지의 값을 반환한다.
D. 1부터 31까지의 값을 반환한다.

### 7. **`setInterval()`과 `setTimeout()` 모두 실행되는 주기를 제어할 수 있습니다. 두 함수의 차이점은 무엇인가요?**

A. `setInterval()`은 한번만 실행되며, `setTimeout()`은 주기적으로 실행된다.
B. `setInterval()`은 반복 실행되고, `setTimeout()`은 단 한 번만 실행된다.
C. 두 함수 모두 반복되지 않으며, 한 번만 실행된다.
D. `setTimeout()`은 동기적으로 실행되며, `setInterval()`은 비동기적으로 실행된다.

### 8. **`countUp()` 함수에서 `clearInterval()`은 언제 호출되어야 할까요?**

A. `cnt`가 0일 때 호출된다.
B. `cnt`가 10에 도달했을 때 호출된다.
C. `cnt`가 100에 도달했을 때 호출된다.
D. `cnt`가 1에 도달했을 때 호출된다.

### 9. **`addColor()` 함수에서 `h1` 태그에 색상을 변경하는 방법은 무엇인가요?**

A. `h1` 태그의 텍스트 색상을 `style.color`로 변경한다.
B. `h1` 태그의 배경색을 `style.backgroundColor`로 설정한다.
C. `h1` 태그의 폰트 크기를 `style.fontSize`로 조절한다.
D. `h1` 태그의 텍스트를 `style.textAlign`으로 가운데 정렬한다.

### 10. **`totPay()` 함수에서 가격을 숫자형으로 변환하고, 유효성 검사를 한 후 처리하는 이유는 무엇인가요?**

A. 가격을 문자열로 처리할 수 없기 때문에 숫자형으로 변환한다.
B. 가격 입력을 실수로 처리하면 예상치 못한 결과가 나올 수 있기 때문이다.
C. 숫자형으로 처리하면 가격을 더 쉽게 계산할 수 있기 때문이다.
D. 가격이 0보다 작은 값일 경우 처리를 방지하기 위해서이다.

### 11. **`totPoint()` 함수에서 점수 합산과 평균을 계산할 때, 숫자형이 아닌 값을 처리할 경우 어떻게 해야 하나요?**

A. 숫자형이 아닌 값을 무시하고 평균을 계산한다.
B. `isNaN()`으로 확인하여 숫자형이 아닐 경우 에러 메시지를 출력한다.
C. 문자열로 입력된 값을 자동으로 변환한다.
D. 계산을 중단하고, 계산 결과가 없다고 출력한다.

### 12. **`mlist` 배열에 데이터를 추가할 때, 각 항목을 테이블에 추가하는 방법은 무엇인가요?**

A. 테이블에 직접 데이터를 추가한다.
B. `mlist.push()`로 데이터를 배열에 추가하고, `innerHTML`을 사용하여 테이블에 반영한다.
C. `mlist.push()`를 사용하지 않고, 테이블에 직접 값을 입력한다.
D. `innerHTML`만 사용하여 데이터 추가를 처리한다.

### 13. **`person` 객체의 `show()` 메서드를 사용하여 객체의 정보를 출력하는 방식으로 가장 적절한 방법은 무엇인가요?**

A. `person.show()`를 호출하여 객체 정보를 출력한다.
B. `person.name`, `person.age`, `person.loc`을 각각 호출하여 정보를 출력한다.
C. `person` 객체 자체를 출력한다.
D. `person` 객체의 속성만 직접 출력한다.

### 14. **`countDown()` 함수에서 `h3Ob.innerText`를 숫자형으로 처리해야 하는 이유는 무엇인가요?**

A. 문자열로 계산하면 예기치 않은 결과가 발생할 수 있다.
B. 숫자형으로 변환해야 할 필요가 없기 때문에 기본 문자열을 그대로 사용한다.
C. `innerText`는 항상 숫자형으로 처리되므로 변환이 필요 없다.
D. `innerText`는 숫자가 아닌 값을 처리하지 않기 때문이다.

### 15. **`chAlign()` 함수에서 `h2` 태그의 `align` 속성을 설정하는 이유는 무엇인가요?**

A. `h2` 태그의 글자 크기를 조정하기 위해 사용된다.
B. `h2` 태그의 텍스트 정렬을 자동으로 설정하기 위해 사용된다.
C. `h2` 태그의 배경색을 바꾸기 위해 사용된다.
D. `h2` 태그의 위치를 변경하기 위해 사용된다.

