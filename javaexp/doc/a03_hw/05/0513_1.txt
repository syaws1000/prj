### 객관식 문제 15문제 (사이드선다형)

1. **DAO 패턴을 사용하는 가장 큰 장점은 무엇인가요?**

   * A. 비즈니스 로직과 데이터 접근 로직의 분리
   * B. SQL 문법 자동 생성
   * C. 코드의 가독성 향상
   * D. 성능 향상

2. **PreparedStatement를 사용하는 이유는 무엇인가요?**

   * A. SQL 문을 동적으로 생성할 수 있다
   * B. SQL 인젝션을 방지할 수 있다
   * C. 결과 데이터를 직접 수정할 수 있다
   * D. 쿼리 성능을 자동으로 최적화한다

3. **ResultSet에서 `rs.next()` 메서드의 역할은 무엇인가요?**

   * A. 현재 커서 위치의 데이터를 가져온다
   * B. 결과 집합에서 다음 행으로 커서를 이동시킨다
   * C. 결과 집합의 끝을 확인한다
   * D. 결과 집합의 첫 번째 행으로 이동한다

4. **SQL 쿼리에서 `COUNT(*)`와 `COUNT(컬럼명)`의 차이점은 무엇인가요?**

   * A. `COUNT(*)`는 NULL 값을 제외한 행만 세고, `COUNT(컬럼명)`은 모든 값을 센다
   * B. `COUNT(*)`는 모든 행을 세고, `COUNT(컬럼명)`은 특정 컬럼의 NULL이 아닌 값을 센다
   * C. `COUNT(*)`는 계산된 값만 세고, `COUNT(컬럼명)`은 NULL 값을 포함한 모든 값을 센다
   * D. 둘 다 같은 기능을 한다

5. **`try-with-resources` 문법의 주요 장점은 무엇인가요?**

   * A. 코드에서 명시적으로 `close()` 메서드를 호출하지 않아도 된다
   * B. 자원을 자동으로 연결한다
   * C. 코드 성능을 자동으로 최적화한다
   * D. 예외 처리 기능을 자동으로 추가한다

6. **PreparedStatement에서 `setString()` 메서드의 역할은 무엇인가요?**

   * A. 쿼리에서 정수형 값을 바인딩한다
   * B. 쿼리에서 문자열 값을 바인딩한다
   * C. 쿼리에서 실수형 값을 바인딩한다
   * D. 쿼리에서 날짜 값을 바인딩한다

7. **다음 중 `SQLException`을 발생시킬 수 있는 원인은 무엇인가요?**

   * A. 쿼리에서 잘못된 컬럼명을 사용한 경우
   * B. `Connection` 객체가 null인 경우
   * C. SQL 쿼리에서 파라미터의 데이터 타입이 맞지 않는 경우
   * D. 위의 모든 경우

8. **`setInt()` 메서드를 사용할 때, 데이터 타입에 맞는 매개변수를 설정해야 하는 이유는 무엇인가요?**

   * A. 성능을 최적화하기 위해
   * B. SQL 인젝션을 방지하기 위해
   * C. 데이터베이스와의 호환성을 유지하기 위해
   * D. 코드 가독성을 높이기 위해

9. **DAO 클래스에서 `getConnection()` 메서드의 역할은 무엇인가요?**

   * A. 데이터베이스 연결을 관리한다
   * B. SQL 쿼리를 실행한다
   * C. 데이터베이스 연결 정보를 업데이트한다
   * D. SQL 쿼리문을 생성한다

10. **SQL 쿼리에서 `COUNT(*)`는 어떤 값을 반환하나요?**

* A. NULL 값을 제외한 행의 수
* B. 모든 행의 수
* C. 특정 조건을 만족하는 행의 수
* D. 특정 컬럼의 값이 NULL인 행의 수

11. **`try-with-resources` 문법을 사용하지 않으면 발생할 수 있는 문제는 무엇인가요?**

* A. 연결된 자원을 자동으로 닫지 못한다
* B. SQL 인젝션 공격을 쉽게 받을 수 있다
* C. 성능 최적화가 어려워진다
* D. 코드가 복잡해진다

12. **ResultSet에서 데이터를 가져올 때 `rs.getString("컬럼명")`을 사용하는 이유는 무엇인가요?**

* A. 데이터를 문자열로 가져오기 위해
* B. 데이터를 정수형으로 가져오기 위해
* C. 데이터를 실수형으로 가져오기 위해
* D. 데이터를 날짜 형식으로 가져오기 위해

13. **PreparedStatement의 `executeQuery()` 메서드는 어떤 결과를 반환하나요?**

* A. 쿼리 실행 결과를 나타내는 `ResultSet` 객체
* B. 쿼리 실행 결과의 행 수
* C. 성공 여부를 나타내는 Boolean 값
* D. 쿼리 실행에 소요된 시간

14. **`pstmt.setInt(1, deptno)`에서 `1`은 무엇을 의미하나요?**

* A. 첫 번째 매개변수를 설정하는 인덱스 번호
* B. SQL 쿼리에서 첫 번째 조건을 나타내는 숫자
* C. SQL 쿼리 실행 시 사용하는 데이터 타입
* D. 첫 번째 `PreparedStatement` 객체의 메서드 번호

15. **`while(rs.next())` 구문이 사용되는 이유는 무엇인가요?**

* A. 결과 집합에서 첫 번째 행을 가져오기 위해
* B. 결과 집합의 마지막 행까지 순차적으로 처리하기 위해
* C. 쿼리 실행이 성공했는지를 확인하기 위해
* D. 결과 집합에서 하나의 값을 가져오기 위해


