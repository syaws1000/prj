### 주관식 개념 문제 (10문제)

1. **JSP에서 `out.println()`과 `expression` `<%= %>`의 차이점은 무엇인가요?**
2. **JSP에서 `request.setAttribute()`와 `session.setAttribute()`의 차이점에 대해 설명하시오.**
3. **`<c:set>` 태그에서 `scope` 속성을 설정하지 않으면 기본값은 무엇인가요?**
4. **`<c:choose>` 태그에서 `else` 대신 사용할 수 있는 다른 태그는 무엇인가요?**
5. **JSTL에서 `Math.random()`과 같은 Java의 수학적 함수는 어떻게 사용할 수 없으며, 그 이유는 무엇인가요?**
6. **`<c:if>`와 `<c:choose>`는 어떻게 다르게 사용되나요? 간단한 예시를 들어 설명하시오.**
7. **JSP에서 `pageContext.setAttribute()`와 `session.setAttribute()`의 차이를 설명하시오.**
8. **JSTL에서 `forEach` 태그의 `items` 속성은 어떤 형태의 데이터를 처리할 수 있나요?**
9. **JSP에서 `out` 객체의 역할을 간단히 설명하시오.**
10. **JSP와 서블릿의 차이점을 설명하고, JSP가 서블릿보다 유리한 점은 무엇인가요?**

---

### 재미있는 이야기 기반 연습문제 (10문제)

1. **숫자 맞추기 게임**: 사용자가 1부터 10 사이의 숫자를 입력하면, 컴퓨터가 랜덤으로 숫자를 생성하여 사용자가 맞추는 게임을 만들고, 맞췄을 때와 틀렸을 때 각각 다른 메시지를 출력하세요.

2. **나이별 인사 메시지**: 사용자의 나이에 따라 다른 인사 메시지를 출력하는 웹 페이지를 작성하세요. 예를 들어, 18세 이하에게는 "안녕하세요, 청소년!" 메시지, 18세 이상 60세 이하에게는 "안녕하세요, 성인!" 메시지, 60세 이상에게는 "안녕하세요, 노년의 여유!" 메시지를 출력하세요.

3. **물건 구매 계산기**: 사용자가 물건 가격과 갯수를 입력하면, 총 가격을 계산하여 출력하는 계산기를 작성하세요. 입력값을 HTML 폼으로 받아서, 그 값에 대해 계산 후 결과를 출력하세요.

4. **날씨에 따른 복장 추천**: 사용자가 입력한 온도에 따라 추천할 복장을 출력하는 웹 페이지를 만드세요. 예를 들어, 온도가 0도 이하일 때는 "두꺼운 외투를 입으세요!", 20도 이상일 때는 "가벼운 옷을 입으세요!"라는 메시지를 출력하세요.

5. **학생 성적 판별**: 사용자가 입력한 점수에 따라 성적을 출력하는 시스템을 만드세요. 90점 이상은 "A", 80점 이상은 "B", 70점 이상은 "C", 그 이하에는 "F"를 출력하세요.

6. **숫자 구구단 출력**: 사용자가 입력한 숫자에 대한 구구단을 출력하는 프로그램을 작성하세요. 예를 들어, 사용자가 3을 입력하면 3단을 출력하도록 하세요.

7. **쇼핑몰 상품 목록**: 사용자가 쇼핑몰에서 원하는 상품의 목록을 선택하면, 그에 맞는 가격과 총 합계를 출력하는 쇼핑몰 페이지를 작성하세요.

8. **월별 영어 이름 출력**: 사용자가 월을 입력하면 해당 월의 영어 이름을 출력하는 프로그램을 만드세요. 예를 들어, 1을 입력하면 "January"를 출력합니다.

9. **카운트다운 타이머**: 사용자가 입력한 시간(초)을 기준으로 카운트다운을 하는 프로그램을 만들고, 시간이 다 되면 "시간이 다 되었습니다!"라는 메시지를 출력하세요.

10. **사다리 타기**: 사다리 타기 게임을 만들고, 여러 명의 참여자가 랜덤으로 각기 다른 보상을 받을 수 있도록 처리하세요. 예를 들어, 참여자가 3명일 때 각자 "상", "중", "하" 보상을 받도록 하세요.

### 주관식 개념 문제 (10문제)

1. **JSP에서 `out.println()`과 `expression` `<%= %>`의 차이점은 무엇인가요?**

   * `out.println()`은 JSP 페이지에서 Java 코드를 실행하고 결과를 출력하는 방식입니다. `<%= %>`는 JSP 표현식으로, HTML에 결과를 삽입하는 데 사용됩니다. 코드 블록 `{}`를 사용할 수 없으며, 단일 라인 코드만 허용됩니다.

2. **JSP에서 `request.setAttribute()`와 `session.setAttribute()`의 차이점에 대해 설명하시오.**

   * `request.setAttribute()`은 현재 요청에 대한 속성을 설정하며, 해당 요청 범위에서만 유효합니다. `session.setAttribute()`는 세션 범위에서 속성을 설정하며, 여러 요청 간에 유지됩니다.

3. **`<c:set>` 태그에서 `scope` 속성을 설정하지 않으면 기본값은 무엇인가요?**

   * `<c:set>` 태그에서 `scope` 속성을 설정하지 않으면 기본적으로 `page` 범위가 적용됩니다.

4. **`<c:choose>` 태그에서 `else` 대신 사용할 수 있는 다른 태그는 무엇인가요?**

   * `<c:otherwise>` 태그를 사용하여 `else`와 같은 역할을 수행할 수 있습니다.

5. **JSTL에서 `Math.random()`과 같은 Java의 수학적 함수는 어떻게 사용할 수 없으며, 그 이유는 무엇인가요?**

   * JSTL은 정적 메소드를 직접 호출할 수 없으므로, `Math.random()`과 같은 Java의 메소드는 JSTL에서 직접 사용할 수 없습니다. 대신, 이런 기능을 수행하는 Java 코드를 포함하는 서블릿을 호출하거나, 커스텀 JSTL 태그를 작성하여 사용할 수 있습니다.

6. **`<c:if>`와 `<c:choose>`는 어떻게 다르게 사용되나요? 간단한 예시를 들어 설명하시오.**

   * `<c:if>`는 단일 조건을 검사할 때 사용되고, `<c:choose>`는 여러 조건 중 하나를 선택할 때 사용됩니다. 예를 들어, `<c:if>`는 한 가지 조건을 평가하고 실행하며, `<c:choose>`는 여러 조건 중 하나를 선택하여 실행합니다.

7. **JSP에서 `pageContext.setAttribute()`와 `session.setAttribute()`의 차이를 설명하시오.**

   * `pageContext.setAttribute()`은 페이지 범위에서만 유효한 속성을 설정하며, `session.setAttribute()`은 세션 범위에서 유효한 속성을 설정합니다. 즉, `pageContext.setAttribute()`은 한 페이지에서만 사용할 수 있지만, `session.setAttribute()`은 여러 페이지 간에 유지됩니다.

8. **JSTL에서 `forEach` 태그의 `items` 속성은 어떤 형태의 데이터를 처리할 수 있나요?**

   * `forEach` 태그의 `items` 속성은 배열, 컬렉션, 맵 등의 데이터를 처리할 수 있습니다. 예를 들어, 배열을 반복하여 각 요소를 처리할 수 있습니다.

9. **JSP에서 `out` 객체의 역할을 간단히 설명하시오.**

   * `out` 객체는 JSP 페이지에서 HTML 코드를 출력하는 데 사용됩니다. Java 코드를 포함하고 결과를 웹 페이지에 표시하는 데 사용됩니다.

10. **JSP와 서블릿의 차이점을 설명하고, JSP가 서블릿보다 유리한 점은 무엇인가요?**

    * JSP는 HTML 코드 내에 Java 코드를 삽입하여 동적 웹 페이지를 생성하는 반면, 서블릿은 Java 코드로만 구성되어 있습니다. JSP의 장점은 웹 디자이너와 개발자가 협력하여 빠르게 웹 페이지를 개발할 수 있다는 점입니다.

