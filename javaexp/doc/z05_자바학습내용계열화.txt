# 학습 내용 계열화
학습자가 효과적으로 이해하고 습득할 수 있도록, 
학습 내용을 순서있게 조직하는 것을 말한다.

# 필요성
1. 학습의 효율성을 높이기 위해
2. 개념 간 연결성을 강화하기 위해
3. 난이도 조절을 통해 학습 부담을 줄이기 위해
4. 지식이 누적되어 자연스럽게 확장되도록 하기 위해

# 효과적인 학습을 위해 무엇을 어떤 순서로 어떻게 배울지를 계획하고 정리하는 과정

# 계열화방법
1. 논리적 계열화
	선행개념 ==> 후행 개념   ex) 덧셈 ==> 곱셈 ==> 방정식
2. 심리적 계열화
	쉬운 것 ===> 어려운 것순  EX) 정수 ==> 소수 ==> 분수
3. 발달적 계열화
	학습자의 인지 발달 수준에 맞춤 ex) 유아에겐 놀이 중심, 중학생에선 실험 중심

# 자바의 학습 내용 계열화
0. 파일 생성과 클래스 만들기
	대문자로 시작해서, 실행 메서드 main() check하기
1. 데이터 유형1단계(간단한 내용-크게)
	- 문자열 데이터 "문자열"
	- 숫자형 데이터 25, 30
	구분 
2. 명령처리
	자바는 명령문은 대소문자 구분하여 마지막에 ;(세미콜론)을 처리한다.	
3. 화면출력1단계 	
	System.out.println(); // 기본 출력 구문
	문자열출력
	System.out.println("안녕하세요");
	System.out.println("안녕하세요"); 줄바꿈으로 출력
	숫자출력
	System.out.println(25); 줄바꿈으로 출력
	System.out.println(35); 줄바꿈으로 출력
	+ : 문자열은 이어주는 처리, 숫자는 연산 처리
	System.out.println("안녕"+"반가워요"); ==> "안녕반가워요"
	System.out.println(25 + 30); ==> 55
	문자열 + 숫자
	System.out.println("홍길동"+25); ==> "홍길동25"
	System.out.println("홍길동"+25+30); ==> "홍길동2530"
	출력시 ()는 먼저 처리를 해주는 개념
	System.out.println("홍길동"+(25+30)); ==> "홍길동55" 뒤에 있지만 먼저 연산을 해준다.
	숫자 + 문자열
	System.out.println(25+"홍길동"); ==> "25홍길동"
	System.out.println(25+30+"홍길동"); ==> "55홍길동" :연산을 해주고 이어준다.
	문자열 + 숫자 + 문자열
	System.out.println("홍길동은 " + 25 + "세 이고, 키는 "+170.5+"cm이다!");
						"홍길동은 25세이고, 키는 170.5cm이다"
						
	System.out.println();
	System.out.print(); 차이
4. 문자열 출력시 특수문자 사용 방법(출력2)
	1) \t, \n, \\, \"
	2)
5. 변수 선언과 사용
	1) 변수 개념
	2) 변수 선언
	3) 변수 초기화
	4) 변수 사용
	5) 변수의 선언 규칙
		중복해서는 안 됨(필수)
		숫자로 시작해서 안됨(필수)
		내장되는 명령으로 처리해서 안됨(필수)
		대소문자 구분하고 있음(필수)
		클래스명/객체명은 대문자(가독성)
		일반변수과 메서드명은 소문자(가독성)
		상수(모두 대문자)
		변수명을 구분할 때는 _, 대문자로 구분(가독성)
			name_01  (snake case)
			applePrice	(camel case)
6. 연산자
	1) 대입연산자
	2) 증감연산자
	3) 대입 증감 연산자
	4) 산술연산자
	5) 논리연산자
	6) 삼항연산자
7. 데이터 유형
	1) 기본 데이터 유형(stack영역)
		정수형 : byte, short, int, long, 
		실수형 : float, double
		참거짓(bool) : boolean
		문자형 : char(보이는 것을 'A'이지만, 실제는 정수형으로 저장)
	2) 객체형 데이터 유형(stack영역 + heap영역)		
		배열
		String
		일반 사용자 클래스.
		- 실제 내용을 heap영역에 할당저장하고, stack영역에는 heap영역의 위치(주소값)만
		가지고 있다 ps) 마치 도서관이나 서점에서 검색 단말기로 검색 위치를 가지고 있듯이. 
	3) 메모리 사용	
		heap영역과 함께 쓰는 기준을 메모리가 확장가능 하느냐?
		한계치가 있느냐를 기준 - 기본 데이터 유형(최대치정해짐), 객체유형(무한확장가능)
		
8. 데이터 입력 처리	
9. 조건문
10. 반복문
11. 클래스형 객체

12. 상속
13. 예외처리
14. 
 						
	
# 객체학습의 내용 계열화
1. 함수에 대한 이해
	1) 함수를 사용하는 목적
	2) 함수의 구성요소
		- 함수명 
		- 리턴유형
		- 매개변수
		- 프로세스처리
	3) 구성요소 상호간의 작용
2. 클래스형 객체
	1) 클래스와 객체의 관계
	=======================
	2) 객체의 구성요소
		- 필드
		
		- 생성자
		- 메서드
	3) 1:1객체
	4) 1:다객체
	5) 자바에서 사용되는 내장된 객체들
	6) 상속
	7) 다형성
	8) 재정의
	9) 추상클래스
	10) 인터페이스
	


	
	
	
	
	
	
	
		
	
	
	
	
	
	
	
	
	
	


			 