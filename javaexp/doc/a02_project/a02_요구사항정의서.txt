**요구사항 정의서 작성 개요 및 단계별 진행 내용, 주의사항**

### 1. **개요**
요구사항 정의서(SRS, Software Requirements Specification)는 소프트웨어 개발 프로젝트에서 시스템이 수행해야 하는 기능과 요구 사항을 문서화한 것입니다. 이 문서는 개발팀과 사용자, 이해관계자 간의 명확한 의사소통을 위해 작성되며, 프로젝트의 성공적인 완수를 위한 중요한 기준이 됩니다. 요구사항 정의서는 시스템 설계와 개발을 위한 기본적인 안내서 역할을 합니다.

---

### 2. **단계별 진행 내용**

#### **1단계: 목표 정의**
- **목표 설정:** 프로젝트의 목적과 범위를 명확히 정의합니다. 시스템이 해결하고자 하는 문제와 그 해결 방안을 간략하게 서술합니다.
- **기본 목표:** 사용자가 시스템을 통해 얻을 수 있는 결과물을 명시합니다. 예를 들어, 사용자의 요구사항을 만족시키는 기능이 무엇인지 구체적으로 설명합니다.

#### **2단계: 기능 요구 사항 정의**
- **주요 기능 목록:** 시스템이 제공해야 하는 주요 기능을 나열합니다. 각 기능에 대해 구체적인 요구사항을 기술하고, 기능을 사용하는 방법과 흐름을 설명합니다.
- **기능 상세 설명:** 각 기능의 입력, 처리, 출력에 대한 세부 사항을 기록합니다. 예를 들어, 사용자 로그인 기능에서는 입력값(사용자 ID, 비밀번호)과 출력값(로그인 성공 여부 등)을 정의합니다.

#### **3단계: 비기능 요구 사항 정의**
- **성능 요구사항:** 시스템의 반응 속도, 처리량, 시스템 응답 시간 등을 명시합니다.
- **보안 요구사항:** 데이터 보호, 암호화, 사용자 인증, 접근 제어 등의 보안 요소를 정의합니다.
- **호환성 요구사항:** 시스템이 지원해야 하는 하드웨어 및 소프트웨어 환경을 기술합니다. 예를 들어, 웹 애플리케이션의 경우 웹 브라우저와의 호환성, 모바일 기기 지원 등을 포함할 수 있습니다.

#### **4단계: 시스템 및 인터페이스 요구 사항 정의**
- **시스템 인터페이스:** 시스템 간의 데이터 교환 방식과 인터페이스를 정의합니다. 예를 들어, 다른 시스템과의 API 통합 또는 데이터베이스와의 연결 방식을 설명합니다.
- **사용자 인터페이스:** 사용자와 시스템이 상호작용하는 방법을 정의합니다. 화면 구성, 버튼 배치, 입력 양식 등을 기술합니다.

#### **5단계: 데이터 요구 사항 정의**
- **데이터베이스 요구 사항:** 시스템이 다루어야 할 데이터의 종류, 구조, 저장 방식 등을 정의합니다. 데이터 모델링, 테이블 설계 등을 포함할 수 있습니다.
- **데이터 흐름:** 데이터의 흐름을 설명하고, 이를 처리하는 방법을 정의합니다.

#### **6단계: 제약 사항 및 제약 조건 정의**
- **기술적 제약:** 시스템 구현 시 사용할 기술 스택, 플랫폼, 프로그래밍 언어 등을 정의합니다.
- **법적/규제 요구사항:** 시스템 개발 및 운영에 영향을 미칠 수 있는 법적, 규제적인 요구사항을 명시합니다.
- **시간 및 예산 제약:** 프로젝트의 기간, 예산에 대한 제약 사항을 명시합니다.

---

### 3. **주의사항**

#### **1. 명확하고 구체적인 요구사항 작성**
- 요구사항은 애매모호하지 않게 명확하게 작성해야 합니다. 개발자, 테스터 등 프로젝트 관련자들이 쉽게 이해할 수 있도록 구체적으로 기술해야 합니다.
- 불명확한 요구사항은 프로젝트 일정과 품질에 큰 영향을 미칠 수 있으므로, 각 요구사항이 어떤 목적을 가지고 있는지 명확히 해야 합니다.

#### **2. 이해관계자와의 협의**
- 요구사항 정의서를 작성할 때 주요 이해관계자들과 충분한 협의를 통해 요구사항을 도출해야 합니다. 이를 통해 프로젝트에 필요한 기능과 제약을 정확히 파악할 수 있습니다.

#### **3. 반복적인 검토**
- 요구사항 정의서는 개발 중에 변동될 수 있기 때문에, 초기 정의 후에도 지속적으로 검토하고 수정해야 합니다. 변화가 있을 때마다 최신 요구사항을 반영하여 문서를 업데이트합니다.

#### **4. 추적 가능성**
- 요구사항이 변경될 수 있음을 염두에 두고, 각 요구사항에 대한 출처와 변경 이력을 관리하는 시스템을 구축하는 것이 중요합니다.

#### **5. 기술적인 한계와 가능성 고려**
- 요구사항을 기술적으로 실현 가능한 범위 내에서 설정해야 합니다. 개발팀의 기술 스택과 능력에 맞는 요구사항을 설정하고, 불필요하게 높은 성능 요구나 과도한 기능 요구는 피해야 합니다.

#### **6. 테스트 가능성**
- 요구사항이 테스트 가능하도록 구체적으로 작성해야 합니다. 테스트 기준이 명확해야, 시스템이 요구사항을 충족하는지 여부를 검증할 수 있습니다.

---

이렇게 요구사항 정의서를 체계적으로 작성하고, 프로젝트 팀과 지속적으로 소통하면서 요구사항을 수정하고 보완해 나가는 것이 성공적인 시스템 개발에 중요한 역할을 합니다.



### 웹 프로그램 요구사항 정의서 작성 예제

**1. 개요**
- **목표:** 이 웹 프로그램은 사용자들이 온라인으로 상품을 구매하고, 결제 및 배송 상태를 추적할 수 있는 시스템을 제공합니다. 주요 기능은 상품 검색, 장바구니, 결제, 배송 추적 등이 포함됩니다. 이 시스템은 사용자 친화적이고 반응성이 뛰어난 인터페이스를 제공해야 하며, 빠르고 안전한 결제 처리를 지원해야 합니다.
- **범위:** 이 시스템은 온라인 쇼핑몰 사이트를 위한 웹 애플리케이션으로, 고객, 관리자, 그리고 결제 시스템 간의 상호작용을 다룹니다.

---

**2. 기능 요구사항 정의**
- **상품 검색:** 사용자는 웹사이트에서 원하는 상품을 키워드나 카테고리별로 검색할 수 있어야 합니다.
    - **입력:** 검색어, 카테고리 선택
    - **출력:** 검색된 상품 목록
    - **기능:** 사용자가 입력한 검색어를 기반으로 데이터베이스에서 상품을 필터링하여 결과를 화면에 표시합니다.
- **장바구니 관리:** 사용자는 선택한 상품을 장바구니에 추가하고, 장바구니에 있는 상품을 수정하거나 삭제할 수 있습니다.
    - **입력:** 상품 선택, 수량 조정
    - **출력:** 장바구니에 담긴 상품 목록
    - **기능:** 장바구니에 담긴 상품의 수량을 조정하고, 결제 전에 최종 확인을 할 수 있는 기능을 제공합니다.
- **결제 시스템:** 사용자는 신용카드, 계좌이체 등을 통해 결제를 진행할 수 있습니다.
    - **입력:** 결제 정보 (카드 번호, 유효 기간, 주소 등)
    - **출력:** 결제 완료 및 확인 메시지
    - **기능:** 결제 시스템은 보안이 강화된 방식으로 결제 정보를 처리하고, 결제 완료 후 사용자에게 주문 확인 정보를 제공합니다.
- **배송 추적:** 사용자는 주문한 상품의 배송 상태를 실시간으로 추적할 수 있습니다.
    - **입력:** 주문 번호
    - **출력:** 배송 상태 (출발, 도착 예정일 등)
    - **기능:** 배송 추적 시스템은 배송사의 API와 연동하여 실시간으로 상태 정보를 제공합니다.

---

**3. 비기능 요구사항 정의**
- **성능 요구사항:** 웹사이트는 사용자가 상품 검색 및 결제를 빠르고 원활하게 진행할 수 있도록, 페이지 로딩 시간이 2초 이내여야 합니다.
- **보안 요구사항:** 사용자 정보와 결제 정보는 SSL 암호화를 통해 안전하게 처리되어야 하며, 데이터베이스는 SQL 인젝션, 크로스 사이트 스크립팅(XSS) 등의 공격으로부터 보호되어야 합니다.
- **호환성 요구사항:** 이 웹 애플리케이션은 최신 버전의 주요 웹 브라우저(Chrome, Firefox, Safari)에서 원활하게 작동해야 합니다. 모바일 기기에서도 최적화된 화면을 제공해야 합니다.

---

**4. 시스템 및 인터페이스 요구사항 정의**
- **시스템 인터페이스:** 
    - 웹 애플리케이션은 외부 결제 시스템(예: PayPal, 신용카드 처리 시스템)과 통합되어야 합니다.
    - 배송 추적 시스템은 특정 배송사 API와 연동되어야 합니다.
- **사용자 인터페이스:**
    - 웹 페이지는 직관적인 UI/UX를 제공해야 하며, 사용자가 쉽게 상품을 검색하고 장바구니에 담을 수 있도록 해야 합니다.
    - 모바일 기기에서도 원활하게 작동하며, 각 페이지의 레이아웃은 반응형으로 설계됩니다.

---

**5. 데이터 요구사항 정의**
- **데이터베이스 요구사항:**
    - 상품, 주문, 사용자 정보는 관계형 데이터베이스에서 관리되며, 각 테이블은 적절한 인덱스와 제약조건을 가져야 합니다.
    - 예를 들어, `상품` 테이블은 `상품ID`, `상품명`, `가격`, `재고수량`을 필드로 하며, 각 필드는 `NOT NULL` 제약 조건을 가집니다.
- **데이터 흐름:**
    - 사용자 등록 시, 사용자 정보는 데이터베이스에 저장되고, 결제 시 결제 정보도 저장됩니다. 결제 완료 후, 배송 정보를 포함한 주문 정보가 갱신됩니다.

---

**6. 제약 사항 및 제약 조건**
- **기술적 제약:** 시스템은 JavaScript를 사용하여 클라이언트 측 인터페이스를 구현하고, 백엔드는 Java Spring Framework를 사용할 예정입니다.
- **법적/규제 요구사항:** 결제 시스템은 PCI DSS(금융 결제 보안 표준)에 부합해야 하며, 개인정보 보호법을 준수해야 합니다.
- **시간 및 예산 제약:** 프로젝트는 6개월 내에 완료되어야 하며, 예산은 50,000,000원이 할당되었습니다.

---


참고 
https://brunch.co.kr/@toqha7822/15









