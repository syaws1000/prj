### 객관식 사지선다 15문제 (정확성 검증, 중복 제거)

1. **JSP에서 `useBean` 태그의 역할은 무엇인가요?**

   * A. 자바 객체를 선언하고 해당 객체의 속성값을 설정하는 역할을 한다.
   * B. 자바 클래스 파일을 로드하는 역할을 한다.
   * C. JSP 페이지의 내용을 동적으로 처리하는 역할을 한다.
   * D. JSP 페이지의 헤더를 설정하는 역할을 한다.

2. **`jsp:setProperty` 태그는 무엇을 설정하는 데 사용되나요?**

   * A. Bean 객체의 속성값을 지정된 요청 파라미터로 설정한다.
   * B. 자바 클래스의 메서드를 호출하여 값을 설정한다.
   * C. JSP 페이지의 URL을 설정한다.
   * D. JavaScript 코드를 설정한다.

3. **세션에서 `c:set` 태그를 사용할 때 `scope="session"`을 설정하면 어떤 효과가 있나요?**

   * A. 세션 범위에서 값을 설정하여 페이지 간에 값을 공유할 수 있다.
   * B. 서버에서만 값을 사용할 수 있다.
   * C. 요청 범위에서만 값을 설정한다.
   * D. 클라이언트 측에서만 값을 설정한다.

4. **`location.href`는 어떤 기능을 수행하나요?**

   * A. 페이지의 URL을 새로 고침한다.
   * B. 페이지를 다른 URL로 이동시킨다.
   * C. 서버의 데이터를 가져온다.
   * D. 자바스크립트 코드를 실행한다.

5. **`c:choose`, `c:when`, `c:otherwise` 태그의 역할은 무엇인가요?**

   * A. 조건문을 처리하여 조건에 맞는 경우를 실행한다.
   * B. 값을 출력하는 역할을 한다.
   * C. 데이터베이스에서 값을 조회하는 역할을 한다.
   * D. 사용자가 입력한 값을 저장하는 역할을 한다.

6. **`response.sendRedirect`와 `jsp:forward`의 차이점은 무엇인가요?**

   * A. `sendRedirect`는 클라이언트 측에서 새로운 요청을 보내고, `jsp:forward`는 서버에서 요청을 다른 페이지로 전달한다.
   * B. `sendRedirect`는 서버에서 데이터를 직접 처리하고, `jsp:forward`는 클라이언트 측에서 처리한다.
   * C. `sendRedirect`는 클라이언트 측에서만 사용 가능하고, `jsp:forward`는 서버 측에서만 사용 가능하다.
   * D. `sendRedirect`는 POST 방식으로 데이터를 전송하고, `jsp:forward`는 GET 방식으로 데이터를 전송한다.

7. **JSP에서 `param`을 사용하여 요청 파라미터를 받는 방법은 무엇인가요?**

   * A. `${param.name}`으로 요청 파라미터를 받아올 수 있다.
   * B. `request.getParameter("name")`으로 요청 파라미터를 받아올 수 있다.
   * C. `session.getAttribute("name")`으로 요청 파라미터를 받아올 수 있다.
   * D. `${request.name}`으로 요청 파라미터를 받아올 수 있다.

8. **`location.href="a11_revReq.jsp?name=김철수&age=30"`에서 `name`과 `age` 값은 어떻게 전달되나요?**

   * A. 쿼리 문자열을 통해 전달된다.
   * B. 세션을 통해 전달된다.
   * C. 쿠키를 통해 전달된다.
   * D. 서버에서 직접 전달된다.

9. **`a15_process.jsp` 페이지에서 사용자가 입력한 나이를 처리하는 방식은 무엇인가요?**

   * A. 나이 값은 `request.getParameter("age")`를 통해 전달된다.
   * B. 나이 값은 세션을 통해 전달된다.
   * C. 나이 값은 `cookie`를 통해 전달된다.
   * D. 나이 값은 URL에 포함되지 않는다.

10. **`<c:choose>` 태그에서 `<c:when>`과 `<c:otherwise>`의 차이점은 무엇인가요?**

* A. `<c:when>`은 조건이 참일 때 실행되며, `<c:otherwise>`는 조건이 거짓일 때 실행된다.
* B. `<c:when>`은 모든 조건을 처리하고, `<c:otherwise>`는 조건이 없을 때만 실행된다.
* C. `<c:when>`은 출력값을 지정하고, `<c:otherwise>`는 계산값을 지정한다.
* D. `<c:when>`은 서버에서 처리하고, `<c:otherwise>`는 클라이언트에서 처리한다.

11. **`jsp:forward` 태그의 특징은 무엇인가요?**

* A. 서버 내에서 요청을 다른 JSP나 서블릿으로 전달한다.
* B. 클라이언트의 브라우저에 새로운 페이지를 요청하게 한다.
* C. 클라이언트의 쿠키를 설정한다.
* D. 세션 정보를 클라이언트로 전달한다.

12. **`<jsp:useBean>` 태그의 `scope` 속성에 대해 설명하시오.**

* A. `scope`는 객체의 생명 주기를 설정하며, `page`, `request`, `session`, `application` 범위가 있다.
* B. `scope`는 객체의 속성값을 설정하는데 사용된다.
* C. `scope`는 객체의 데이터베이스 범위를 설정한다.
* D. `scope`는 JSP 페이지의 레이아웃을 설정하는데 사용된다.

13. **자바스크립트에서 `go()` 함수의 역할은 무엇인가요?**

* A. 페이지를 다른 URL로 이동시킨다.
* B. 데이터를 서버로 전송한다.
* C. 페이지의 내용을 새로 고친다.
* D. DOM 요소를 변경한다.

14. **`<jsp:setProperty>`와 `<c:set>`의 주요 차이점은 무엇인가요?**

* A. `<jsp:setProperty>`는 Java Bean 객체의 속성을 설정하는 데 사용되고, `<c:set>`은 JSP 페이지에서 값을 설정하는 데 사용된다.
* B. `<jsp:setProperty>`는 데이터를 서버로 전송하는 데 사용되고, `<c:set>`은 데이터를 클라이언트로 전송하는 데 사용된다.
* C. `<jsp:setProperty>`는 HTML 요소에 값을 설정하는 데 사용되고, `<c:set>`은 자바스크립트에서 값을 설정하는 데 사용된다.
* D. `<jsp:setProperty>`는 Java 클래스를 호출하고, `<c:set>`은 자바스크립트 함수를 호출하는 데 사용된다.

15. **JSP에서 로그인 실패 후 세션을 삭제하는 방법은 무엇인가요?**

* A. `<c:set var="mem" value="${null}" scope="session"/>`을 사용하여 세션에서 값을 삭제한다.
* B. `session.removeAttribute("mem")`을 사용하여 세션에서 값을 삭제한다.
* C. `session.invalidate()`를 사용하여 세션을 종료한다.
* D. `session.delete("mem")`을 사용하여 세션에서 값을 삭제한다.


