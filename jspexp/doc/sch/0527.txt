# 💡 JSP + DAO 웹 애플리케이션 구현 수업 교안

### ✨주제: "DAO 연동으로 구현하는 부서정보 시스템!"

**구현 내용:** 조회 리스트 화면 / 등록 처리 화면 / 상세조회 및 수정/삭제 화면

---

## 1. 🎯 주의 집중 끌기 및 학습 연결성 제공 (Gagné 1단계 + ARCS A)

**🌟흥미 유도 질문:**

> "JSP에서 버튼 한 번만 누르면 DB에서 정보가 쫙\~! 뜨는 비밀, 알고 싶지 않나요?"
> "실제 회사에서 쓰는 부서관리 시스템을 우리 손으로 직접 만든다면 어떨까요?"

**💬 연결성 제시:**

* 실무에서 가장 많이 쓰이는 패턴: JSP + DAO + DB 연동
* CRUD 시스템의 기본 뼈대를 경험하며 실전 감각 UP!

---

## 2. 🎯 학습 목표 제시 (Gagné 2단계 + ARCS R)

| 학습 목표                       | 성취 기준                      |
| --------------------------- | -------------------------- |
| 1. DAO 연동 구조를 이해한다          | JSP와 DAO의 역할을 명확히 구분할 수 있다 |
| 2. 조회/등록/상세/수정/삭제 기능을 구현한다  | 각각의 화면에서 DB 연동이 가능하다       |
| 3. 웹 화면 구성에 Bootstrap을 활용한다 | 사용자 친화적인 UI를 구현할 수 있다      |
| 4. 실무 활용을 위한 코드를 작성한다       | 실무에서 재사용 가능한 코드로 구현할 수 있다  |

---

## 3. 🔁 선수 학습 상기 및 실생활 연결하기 (Gagné 3단계 + ARCS R/S)

**📌 선수학습:**

* HTML 기본 폼
* JSP 기본 문법
* Java 클래스와 객체 이해
* SQL 기본 (SELECT, INSERT, UPDATE, DELETE)

**🌍 실생활 연결:**

> "부장님이 '우리 부서 리스트 웹에서 보게 만들어줘!' 라고 하면, JSP + DAO로 뚝딱 만드는 겁니다."

---

## 4. 🧠 주요 개념/핵심 키워드 + 암기법 (Gagné 4단계 + ARCS C)

| 개념   | 설명                              | 💡 암기 키워드                 |
| ---- | ------------------------------- | ------------------------- |
| DAO  | DB Access Object, DB와 통신하는 클래스  | **"DAO는 DB와 도우!"**        |
| DTO  | Data Transfer Object, 데이터 담는 객체 | **"DTO는 Data의 통!"**       |
| MVC  | Model-View-Controller 구조        | **"MVC: 모델이 보여줘! 컨트롤해!"** |
| CRUD | Create, Read, Update, Delete    | **"크루가 하는 4가지 임무!"**      |

---

## 5. 🧭 학습 목표별 탐구형 학습 (Gagné 5단계)

### 🧩 단계별 실습 흐름

| 단계  | 활동명                    | 주요 처리                |
| --- | ---------------------- | -------------------- |
| 1단계 | deptList.jsp 구현        | DAO 연결, 부서 목록 조회     |
| 2단계 | deptInsert.jsp 구현      | 입력폼 → DAO → DB등록     |
| 3단계 | deptDetail.jsp 구현      | 선택된 부서의 상세 보기        |
| 4단계 | deptUpdate.jsp / 삭제 처리 | 수정/삭제 버튼 구현 및 DAO 연동 |

👨‍🔧 DAO 메서드 흐름 예시:

```java
public List<Dept> getDeptList(); // 목록 조회  
public int insertDept(Dept ins); // 등록  
public Dept getDept(int deptno); // 상세조회  
public int updateDept(Dept upt); // 수정  
public int deleteDept(int deptno); // 삭제  
```

---

## 6. 👥 실습 활동 및 협력 학습 유도 (Gagné 6단계 + ARCS S)

### 🔧 미션! “부서 관리 도와줘\~”

**역할 분담 프로젝트 팀제:**

* 👨‍💻 프론트엔드 담당: 입력폼 및 조회 UI 디자인 (Bootstrap 활용)
* 🧠 백엔드 담당: DAO 연결, SQL 처리
* 🔍 디버그/테스트 담당: 요청값 전달, 에러 잡기

**😆 웃음요소 포함 미션 예시:**

> “부서를 등록했더니 이름이 ‘신촌핫플부서’라고? 너무 끌리잖아\~😂 수정 고고!”

---

## 7. ✅ 단계별 피드백 제공과 자기 평가 기회 (Gagné 7단계)

**✔ 체크리스트 자기평가표:**

| 항목                       | Yes/No | 개선 필요     |
| ------------------------ | ------ | --------- |
| DAO 클래스에 메서드를 정확히 만들었는가? | ✅ / ❌  | 개선필요 / 완벽 |
| 등록폼에서 요청값을 정확히 전달했는가?    | ✅ / ❌  | 개선필요 / 완벽 |
| Bootstrap UI를 제대로 적용했는가? | ✅ / ❌  | 개선필요 / 완벽 |

---

## 8. 📈 수행 평가 및 피드백 제공 (Gagné 8단계)

**💼 실무 시나리오 수행 평가:**

> "신규 부서 등록 화면을 보고, 백엔드까지 연결된 전체 흐름을 구축하시오."

**📝 평가 기준:**

* 화면 기능 구현 (30%)
* DAO 메서드 구조 완성도 (30%)
* 오류 없는 DB 연동 (20%)
* 사용자 경험(UX) 고려 UI 구현 (20%)

**🗨 피드백 예시:**

> "insertDept 메서드에서 try-catch 블록은 좋았어요! 하지만 예외 로그를 남기면 더 좋겠네요 😊"

---

## 9. 🚀 학습 전이 강화와 실제 문제 적용 활동 (Gagné 9단계)

**🌐 확장 미션:**

* 사원관리(Employee), 급여관리(Salary)로 확장하여 CRUD 구현
* 입력폼에서 유효성 검사 추가 (JavaScript 활용)
* Ajax 활용 비동기 등록 연습

---

## 10. 🧘 학습 반성 및 향후 학습 준비

**💬 반성 질문:**

* 가장 어려웠던 부분은?
* DAO 패턴이 어떤 점에서 유지보수에 도움이 되었는가?
* 다음 프로젝트에 적용하고 싶은 점은?

**📘 다음 학습 예고:**

> "JSTL과 EL을 활용하여 더 깔끔한 데이터 출력에 도전!"

---

## ✅ 학습자와 공유할 수 있는 주요 내용 (강조 정리)

| 📌 포인트    | 💬 강조 메시지                             |
| --------- | ------------------------------------- |
| 실무 연동 감각  | "회사에서 바로 쓸 수 있는 CRUD 시스템을 경험하세요!"     |
| 역할 분담 협업  | "진짜 개발자처럼 팀원과 협력하며 실전처럼!"             |
| DAO 구조 이해 | "데이터 처리는 DAO에게 맡기세요\~ (도우\~!)"        |
| 재미 요소 포함  | "부서명에 개성 부여도 OK! (단, 상사 이름 쓰면 혼나요😂)" |
| 자기 주도적 학습 | "탐색 → 구현 → 피드백까지 스스로 완성!"             |



