## 📘 스프링부트 환경에서 jQuery AJAX 처리하기 – 학습 교안

---

### 1. 🎯 주의 집중 끌기 및 학습 연결성 제공

* “여러분, 버튼을 눌렀는데 화면이 안 바뀌는 웹사이트를 본 적 있나요? 짜증나죠?”
* 💬 의문 제기:

  > “페이지를 안 새로고침하고 데이터를 전송할 수는 없을까?”
* 🔍 해결 힌트:

  > ‘AJAX’를 쓰면 됩니다! 하지만, 스프링부트랑 어떻게 연결하죠?

---

### 2. 📌 학습 목표

학습자는 다음을 수행할 수 있습니다.

* jQuery AJAX의 개념을 설명할 수 있다.
* AJAX를 활용하여 Spring Boot와 비동기 통신을 구현할 수 있다.
* 클라이언트와 서버 간의 데이터 흐름을 이해하고 응답 결과를 처리할 수 있다.

---

### 3. 🧠 선수 학습 상기 및 실생활 연결하기

* 💡 선수 지식: HTML, JavaScript, jQuery 기본문법, Spring Boot 컨트롤러 구조
* 🧩 생활 연결:

  > “주문 버튼을 누르면, 페이지 새로고침 없이 주문이 처리되는 배달앱.
  > 그 뒤엔 어떤 기술이 숨겨져 있을까요?”

---

### 4. 🗝 주요 개념/핵심 키워드를 최고의 암기법에 의한 제시

| 개념             | 의미                              | 암기 코드 (웃긴 외우기법)                 |
| -------------- | ------------------------------- | ------------------------------- |
| AJAX           | Asynchronous JavaScript and XML | “AJAX는 ‘아작’ 나게 새로고침 안 한다고 외쳐요!” |
| \$.ajax()      | jQuery AJAX 호출 함수               | “달러(\$.ajax)는 서버랑 대화를 잘해요!”     |
| Controller     | 서버 수신 처리기                       | “Spring의 통신소! 모든 데이터는 이곳을 통과”   |
| ResponseEntity | 응답 객체 포장지                       | “결과를 예쁘게 포장해서 보내주는 택배 박스”       |

---

### 5. 🧭 학습 목표별 탐구형 학습

#### 🔎 탐구 주제 1: AJAX로 버튼 클릭 시 데이터 전송

* 의문 제기:

  > “자바스크립트만 쓰면 충분하지 않나요?”
* 힌트:

  > “jQuery는 더 간결하고, AJAX는 서버 통신까지 담당해요.”

#### 🔎 탐구 주제 2: Spring Boot 컨트롤러에서 AJAX 데이터 받기

* 의문 제기:

  > “자바 객체랑 JSON이랑 어떻게 연결돼요?”
* 힌트:

  > `@RequestBody`, `@ResponseBody`로 마법처럼 연결됩니다!

#### 🔎 탐구 주제 3: AJAX 응답을 활용한 화면 처리

* 의문 제기:

  > “서버에서 받은 데이터로 바로 화면에 뿌릴 수 있어요?”
* 힌트:

  > `success` 함수에 데이터를 넣고 HTML을 업데이트해 보세요!

---

### 6. 🤝 실습 활동 및 협력 학습 유도

| 실습    | 설명                                     |
| ----- | -------------------------------------- |
| 실습 1  | AJAX로 이름 전송하고, 서버에서 “안녕, 이름님” 받아오기     |
| 실습 2  | 입력한 회원 정보를 서버에 저장하고, 저장 결과를 alert으로 받기 |
| 실습 3  | 댓글 등록 폼 AJAX로 구현, 새 댓글을 목록에 실시간 추가     |
| 협력 학습 | “왜 내 AJAX는 안 돼요?” 서로 코드 비교하고 디버깅 하기    |

---

### 7. 🔁 단계별 피드백 제공과 자기 평가 기회

* ✔️ 점검 체크리스트

  * [ ] AJAX 기본 문법을 외웠는가?
  * [ ] 서버로 데이터 전송이 되는가?
  * [ ] 서버 응답을 받아 화면에 출력했는가?

* 🤔 자기 평가 질문

  > “나는 서버와 클라이언트가 데이터를 주고받는 구조를 설명할 수 있는가?”

---

### 8. 📝 수행 평가 및 피드백 제공

* 📋 과제:
  “회원 정보 등록을 AJAX로 구현하되, 등록 후 목록을 실시간으로 갱신하시오.”
* 🧑‍🏫 피드백 예시:

  > “전송은 잘 되지만, 응답 데이터를 HTML에 반영하지 않았네요. success 블럭을 다시 확인해 봐요!”

---

### 9. 🔄 학습 전이 강화와 실제 문제 적용 활동

* 🧪 프로젝트 제안:

  > “간단한 ‘게시판 댓글 등록’ 시스템을 AJAX 기반으로 완성해 보자!”

* 💬 팀 토론 주제:

  > “AJAX 없이 동작하는 전통적인 방식과 비교했을 때, 비동기 방식의 장단점은 무엇일까?”

---

### 10. 🔍 학습 반성 및 향후 학습 준비

* ✍️ 학습 일지 작성 유도:

  > “오늘 AJAX를 배우며 무엇이 가장 신기했나요?
  > 다음 시간에는 fetch API, axios 등 다른 비동기 방식도 도전해봅시다!”

---

## ✅ 학습자와 공유할 수 있는 요약 강조 포인트

* AJAX = 새로고침 없이 서버와 대화!
* `$.ajax()`는 jQuery로 하는 비동기 통신
* Spring Boot에서는 `@RestController`, `@RequestBody`, `@ResponseBody`가 핵심
* 실습으로 “즉시 응답” 받는 UI를 만들어 보는 것이 핵심
* “왜 안 되지?”라는 순간이 가장 성장하는 순간!

