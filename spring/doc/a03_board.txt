### 테이블 및 시퀀스명 변경

위에서 제공한 스크립트에서 테이블 이름과 시퀀스 이름을 변경하여 다시 작성한 SQL 스크립트는 다음과 같습니다:

#### 1. 게시판 테이블 (`NEW_BOARD`)

게시글을 관리하는 테이블입니다.

```sql
CREATE TABLE NEW_BOARD (
    POST_ID NUMBER PRIMARY KEY,          -- 게시글 번호 (기본키)
    TITLE VARCHAR2(100),                 -- 제목
    CONTENT CLOB,                        -- 내용 (CLOB 사용, 글 길이가 길어지므로)
    AUTHOR VARCHAR2(50),                 -- 작성자
    VIEW_COUNT NUMBER DEFAULT 0,         -- 조회수 (기본값 0)
    CREATE_DATE DATE DEFAULT SYSDATE,    -- 등록일 (기본값 현재 날짜)
    UPDATE_DATE DATE,                    -- 수정일
    PARENT_POST_ID NUMBER,               -- 답글의 경우 상위 게시글 번호
    STATUS VARCHAR2(20) DEFAULT 'ACTIVE' -- 게시글 상태 (예: ACTIVE, DELETED 등)
);
```

#### 2. 댓글 테이블 (`NEW_COMMENT`)

댓글을 관리하는 테이블입니다.

```sql
CREATE TABLE NEW_COMMENT (
    COMMENT_ID NUMBER PRIMARY KEY,        -- 댓글 번호 (기본키)
    POST_ID NUMBER,                       -- 게시글 번호 (외래키)
    COMMENT_TEXT CLOB,                    -- 댓글 내용
    AUTHOR VARCHAR2(50),                  -- 댓글 작성자
    CREATE_DATE DATE DEFAULT SYSDATE,     -- 댓글 등록일
    PARENT_COMMENT_ID NUMBER,             -- 답글의 경우 상위 댓글 번호
    FOREIGN KEY (POST_ID) REFERENCES NEW_BOARD (POST_ID) -- 외래키
);
```

#### 3. 파일 테이블 (`NEW_FILE`)

게시글에 첨부파일을 관리하는 테이블입니다.

```sql
CREATE TABLE NEW_FILE (
    FILE_ID NUMBER PRIMARY KEY,           -- 파일 번호 (기본키)
    POST_ID NUMBER,                       -- 게시글 번호 (외래키)
    FILE_NAME VARCHAR2(255),              -- 파일 이름
    FILE_PATH VARCHAR2(255),              -- 파일 경로
    FILE_SIZE NUMBER,                     -- 파일 크기
    CREATE_DATE DATE DEFAULT SYSDATE,     -- 파일 등록일
    FOREIGN KEY (POST_ID) REFERENCES NEW_BOARD (POST_ID) -- 외래키
);
```

#### 4. 시퀀스 생성

각각의 테이블에서 `POST_ID`, `COMMENT_ID`, `FILE_ID`는 시퀀스를 사용하여 자동으로 증가하도록 설정할 수 있습니다.

```sql
-- 게시판 시퀀스
CREATE SEQUENCE NEW_BOARD_SEQ START WITH 1 INCREMENT BY 1;

-- 댓글 시퀀스
CREATE SEQUENCE NEW_COMMENT_SEQ START WITH 1 INCREMENT BY 1;

-- 파일 시퀀스
CREATE SEQUENCE NEW_FILE_SEQ START WITH 1 INCREMENT BY 1;
```

### 5. 데이터 입력 스크립트

#### 5.1 게시글 입력

```sql
INSERT INTO NEW_BOARD (POST_ID, TITLE, CONTENT, AUTHOR, CREATE_DATE)
VALUES (NEW_BOARD_SEQ.NEXTVAL, '게시글 제목', '게시글 내용', '작성자명', SYSDATE);
```

#### 5.2 댓글 입력

```sql
INSERT INTO NEW_COMMENT (COMMENT_ID, POST_ID, COMMENT_TEXT, AUTHOR, CREATE_DATE)
VALUES (NEW_COMMENT_SEQ.NEXTVAL, 1, '댓글 내용', '댓글 작성자', SYSDATE);
```

#### 5.3 답글 입력

답글을 달 때는 `PARENT_COMMENT_ID`를 사용하여 해당 댓글에 대한 답글로 연결합니다.

```sql
INSERT INTO NEW_COMMENT (COMMENT_ID, POST_ID, COMMENT_TEXT, AUTHOR, CREATE_DATE, PARENT_COMMENT_ID)
VALUES (NEW_COMMENT_SEQ.NEXTVAL, 1, '답글 내용', '답글 작성자', SYSDATE, 1);
```

#### 5.4 파일 입력

```sql
INSERT INTO NEW_FILE (FILE_ID, POST_ID, FILE_NAME, FILE_PATH, FILE_SIZE, CREATE_DATE)
VALUES (NEW_FILE_SEQ.NEXTVAL, 1, '파일명.jpg', '/path/to/file', 1024, SYSDATE);
```
